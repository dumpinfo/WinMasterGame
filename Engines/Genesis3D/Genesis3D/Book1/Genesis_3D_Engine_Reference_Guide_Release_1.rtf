{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq3{\*\panose 020b0604030504040204}Tahoma;}{\f16\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}
{\f113\fswiss\fcharset238\fprq2 Arial Black CE;}{\f114\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f116\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f117\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f118\fswiss\fcharset186\fprq2 Arial Black Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\keepn\widctlpar\tx720\adjustright \f1\cgrid \snext0 Normal;}{\s1\qc\sb240\sa60\keepn\widctlpar\tx720\adjustright 
\b\f16\fs36\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb240\sa60\keepn\widctlpar\tx720\adjustright \b\f16\fs28\cgrid \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\widctlpar\tx720\adjustright \b\i\f16\fs28\cgrid \sbasedon0 \snext0 
heading 3;}{\s4\sb240\sa60\keepn\widctlpar\tx720\adjustright \f1\fs28\cgrid \sbasedon0 \snext0 \sautoupd heading 4;}{\s5\li360\sb240\sa60\keepn\widctlpar\tx720\adjustright \f1\fs28\cgrid \sbasedon0 \snext0 heading 5;}{\s6\li720\sb240\sa60\keepn\widctlpar
\tx720\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 6;}{\s7\sb240\sa60\keepn\widctlpar\tx720\adjustright \f1\cgrid \sbasedon0 \snext0 heading 7;}{\s8\sb240\sa60\keepn\widctlpar\tx720\adjustright \i\f1\fs22\cgrid \sbasedon0 \snext0 heading 8;}{
\s9\sb240\sa60\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\fi720\keepn\widctlpar\tx720\adjustright \f1\fs20\cgrid \sbasedon0 \snext15 Body Text 2;}{
\s16\fi720\keepn\widctlpar\tx720\adjustright \f1\cgrid \sbasedon0 \snext16 Body Text Indent 2;}{\s17\keepn\widctlpar\tx720\tqc\tx4320\tqr\tx8640\adjustright \f1\cgrid \sbasedon0 \snext17 header;}{\s18\keepn\widctlpar
\tx720\tqc\tx4320\tqr\tx8640\adjustright \f1\cgrid \sbasedon0 \snext18 footer;}{\*\cs19 \additive \sbasedon10 page number;}{\s20\sb120\keepn\widctlpar\adjustright \b\i\cgrid \sbasedon0 \snext0 \sautoupd toc 1;}{
\s21\li240\sb120\keepn\widctlpar\adjustright \b\fs22\cgrid \sbasedon0 \snext0 \sautoupd toc 2;}{\s22\li480\keepn\widctlpar\adjustright \b\fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 3;}{\s23\li720\keepn\widctlpar\adjustright \fs20\cgrid 
\sbasedon0 \snext0 \sautoupd toc 4;}{\s24\li960\keepn\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 5;}{\s25\li1200\keepn\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 6;}{\s26\li1440\keepn\widctlpar\adjustright 
\fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 7;}{\s27\li1680\keepn\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 8;}{\s28\li1920\keepn\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 9;}{
\s29\fi-240\li240\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 1;}{\s30\fi-245\li490\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 2;}{\s31\fi-240\li720\keepn\widctlpar\tx720\adjustright 
\f1\fs18\cgrid \sbasedon0 \snext0 index 3;}{\s32\fi-240\li960\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 4;}{\s33\fi-240\li1200\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 5;}{
\s34\fi-240\li1440\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 6;}{\s35\fi-240\li1680\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 7;}{\s36\fi-240\li1920\keepn\widctlpar\tx720\adjustright 
\f1\fs18\cgrid \sbasedon0 \snext0 index 8;}{\s37\fi-240\li2160\keepn\widctlpar\tx720\adjustright \f1\fs18\cgrid \sbasedon0 \snext0 index 9;}{\s38\qc\sb240\sa120\keepn\widctlpar\box\brdrsh\brdrdb\brdrw15 \tx720\adjustright \b\f1\fs22\cgrid 
\sbasedon0 \snext29 index heading;}{\s39\sb120\sa120\keepn\widctlpar\tx720\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 caption;}{\s40\fi360\keepn\widctlpar\tx720\adjustright \f1\cgrid \sbasedon0 \snext40 Body Text Indent 3;}{\*\cs41 \additive \ul\cf2 
\sbasedon10 Hyperlink;}{\s42\sb100\sa100\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b\f1\fs36\lang1024 \sbasedon0 \snext0 H2;}{\s43\sb100\sa100\keepn\nowidctlpar\tx720\outlinelevel3\adjustright \b\f1\fs28\lang1024 \sbasedon0 \snext0 H3;}{
\s44\sb100\sa100\keepn\nowidctlpar\tx720\outlinelevel4\adjustright \b\f1\lang1024 \sbasedon0 \snext0 H4;}{\s45\sb100\sa100\keepn\nowidctlpar\tx720\outlinelevel5\adjustright \b\f1\fs20\lang1024 \sbasedon0 \snext0 H5;}{\s46\widctlpar\tx720\adjustright 
\f1\fs20\cgrid \sbasedon0 \snext46 \sautoupd Plain Text;}{\*\cs47 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}{\s48\keepn\widctlpar\tx720\adjustright \f1\cgrid \sbasedon0 \snext48 Body Text;}{\s49\keepn\widctlpar\tx720\adjustright \i\f1\cgrid 
\sbasedon0 \snext49 Body Text 2;}{\*\cs50 \additive \b \sbasedon10 Strong;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname 
;}\listid-2}{\list\listtemplateid0{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li2160 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600 }{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li4320 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5040 }
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li5760 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}
}{\listname ;}\listid2}{\list\listtemplateid0{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li2160 }{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600 }{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li4320 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}
\fi-360\li5040 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li5760 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext
\'00;}{\levelnumbers;}}{\listname ;}\listid3}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }
{\listname ;}\listid5907055}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname 
;}\listid29956426}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid38944829}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid46952223}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid53623510}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid55400311}
{\list\listtemplateid-1381991886\listsimple{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li4680\jclisttab\tx4680 }{\listname ;}\listid101338052}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid133573642}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid180319290}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid188764076}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid201020499}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid212277158}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid238290587}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid241069569}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid271059475}
{\list\listtemplateid-594628766\listsimple{\listlevel\levelnfc3\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1800\jclisttab\tx1800 }{\listname ;}\listid348527012}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid374701223}
{\list\listtemplateid-292262636\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listname ;}\listid405615682}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid411856518}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid413935254}
{\list\listtemplateid1913676650\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li2520\jclisttab\tx2520 }{\listname ;}\listid428038527}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid433325323}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid434709635}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid439764354}
{\list\listtemplateid-66550806\listsimple{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li3240\jclisttab\tx3240 }{\listname ;}\listid453599461}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid457727880}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid503396256}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid513962548}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid519048553}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid524254128}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid540167288}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid569970894}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid577131448}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid601573126}
{\list\listtemplateid-566475980\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li2520\jclisttab\tx2520 }{\listname ;}\listid610672804}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid621419368}
{\list\listtemplateid-917622856\listsimple{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li3240\jclisttab\tx3240 }{\listname ;}\listid624656014}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid637152761}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid637564737}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid657923933}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid659315534}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid684789244}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid692922066}
{\list\listtemplateid1931934858{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold
\levelspace120\levelindent360{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li720 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li1080 }{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext
\'02\'04.;}{\levelnumbers\'01;}\fi-360\li1800 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li2160 }{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li2880 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelold\levelspace120\levelindent360{\leveltext\'01\'08;}{\levelnumbers\'01;}}{\listname ;}\listid711881470}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255
\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid730275434}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0
\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid734280862}{\list\listtemplateid-1216421310\listsimple{\listlevel\levelnfc4\leveljc0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li4680\jclisttab\tx4680 }{\listname ;}\listid736519263}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0
\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid821386168}{\list\listtemplateid1470106278\listsimple{\listlevel\levelnfc2\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-720\li4320\jclisttab\tx4320 }{\listname ;}\listid846678405}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0
\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid868419536}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360
{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid923224518}{\list\listtemplateid48420628\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li2520\jclisttab\tx2520 }{\listname ;}\listid930089056}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid951932778}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1020743412}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1073771642}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1091659245}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1172524173}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1181508564}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1188981640}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1246106663}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1246501902}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1248920989}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1257404229}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1263298639}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1264846580}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1273593027}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1335916272}{\list\listtemplateid1279690820\listsimple{\listlevel\levelnfc2\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}
\fbias0 \fi-720\li4320\jclisttab\tx4320 }{\listname ;}\listid1353796566}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1372608582}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li720 }{\listname ;}\listid1379284286}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }
{\listname ;}\listid1397900597}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname 
;}\listid1398745702}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1413116800}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1429081750}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1440761041}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1461460808}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1483813086}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1494106168}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1516385848}
{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1534923448}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1539077162}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1562908636}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1586841107}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1597251182}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1649824109}
{\list\listtemplateid-513902036\listsimple{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li4680\jclisttab\tx4680 }{\listname ;}\listid1695840760}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1697654607}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1700736810}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1703703946}
{\list\listtemplateid-1526930388\listsimple{\listlevel\levelnfc2\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-720\li4320\jclisttab\tx4320 }{\listname ;}\listid1713189619}
{\list\listtemplateid-1097010214\listsimple{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li3240\jclisttab\tx3240 }{\listname ;}\listid1801654915}
{\list\listtemplateid-1435499408{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold
\levelspace120\levelindent360{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li720 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li1080 }{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext
\'02\'04.;}{\levelnumbers\'01;}\fi-360\li1800 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li2160 }{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li2880 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelold\levelspace120\levelindent360{\leveltext\'01\'08;}{\levelnumbers\'01;}}{\listname ;}\listid1829666222}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255
\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1862743772}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0
\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1871147195}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0
\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1917855696}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0
\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1920599405}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold
\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1983347022}{\list\listtemplateid-1118674146\listsimple{\listlevel\levelnfc2\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-720\li4320\jclisttab\tx4320 }{\listname ;}\listid1986205822}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360
{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid1993177475}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid2018731287}{\list\listtemplateid-110879566\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}
\fbias0 \fi-360\li2520\jclisttab\tx2520 }{\listname ;}\listid2019115605}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li720 }{\listname ;}\listid2022006509}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li720 }{\listname ;}\listid2036805750}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }
{\listname ;}\listid2042320096}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname 
;}\listid2046327460}{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid2078749556}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid2097895036}
{\list\listtemplateid291024994\listsimple{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }{\listname ;}\listid2107118853}
{\list\listtemplateid1879357324\listsimple{\listlevel\levelnfc3\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-405\li765\jclisttab\tx765 }{\listname ;}\listid2138453206}}
{\*\listoverridetable{\listoverride\listid1483813086\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount8{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}
{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls2}{\listoverride\listid3
\listoverridecount8{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls3}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc25\leveljc0\levelfollow0
\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }}\ls4}{\listoverride\listid2138453206\listoverridecount0\ls5}{\listoverride\listid1534923448\listoverridecount0\ls6}
{\listoverride\listid405615682\listoverridecount0\ls7}{\listoverride\listid348527012\listoverridecount0\ls8}{\listoverride\listid930089056\listoverridecount0\ls9}{\listoverride\listid1801654915\listoverridecount0\ls10}{\listoverride\listid453599461
\listoverridecount0\ls11}{\listoverride\listid610672804\listoverridecount0\ls12}{\listoverride\listid2019115605\listoverridecount0\ls13}{\listoverride\listid624656014\listoverridecount0\ls14}{\listoverride\listid428038527\listoverridecount0\ls15}
{\listoverride\listid846678405\listoverridecount0\ls16}{\listoverride\listid1713189619\listoverridecount0\ls17}{\listoverride\listid101338052\listoverridecount0\ls18}{\listoverride\listid1986205822\listoverridecount0\ls19}{\listoverride\listid1695840760
\listoverridecount0\ls20}{\listoverride\listid736519263\listoverridecount0\ls21}{\listoverride\listid1353796566\listoverridecount0\ls22}{\listoverride\listid513962548\listoverridecount0\ls23}{\listoverride\listid657923933\listoverridecount0\ls24}
{\listoverride\listid1246501902\listoverridecount0\ls25}{\listoverride\listid133573642\listoverridecount0\ls26}{\listoverride\listid1700736810\listoverridecount0\ls27}{\listoverride\listid1020743412\listoverridecount0\ls28}{\listoverride\listid524254128
\listoverridecount0\ls29}{\listoverride\listid637564737\listoverridecount0\ls30}{\listoverride\listid413935254\listoverridecount0\ls31}{\listoverride\listid734280862\listoverridecount0\ls32}{\listoverride\listid1181508564\listoverridecount0\ls33}
{\listoverride\listid411856518\listoverridecount0\ls34}{\listoverride\listid1917855696\listoverridecount0\ls35}{\listoverride\listid1983347022\listoverridecount0\ls36}{\listoverride\listid1562908636\listoverridecount0\ls37}{\listoverride\listid1586841107
\listoverridecount0\ls38}{\listoverride\listid53623510\listoverridecount0\ls39}{\listoverride\listid621419368\listoverridecount0\ls40}{\listoverride\listid1257404229\listoverridecount0\ls41}{\listoverride\listid433325323\listoverridecount0\ls42}
{\listoverride\listid2018731287\listoverridecount0\ls43}{\listoverride\listid730275434\listoverridecount0\ls44}{\listoverride\listid1597251182\listoverridecount0\ls45}{\listoverride\listid1172524173\listoverridecount0\ls46}{\listoverride\listid601573126
\listoverridecount0\ls47}{\listoverride\listid1871147195\listoverridecount0\ls48}{\listoverride\listid1649824109\listoverridecount0\ls49}{\listoverride\listid569970894\listoverridecount0\ls50}{\listoverride\listid821386168\listoverridecount0\ls51}
{\listoverride\listid868419536\listoverridecount0\ls52}{\listoverride\listid1440761041\listoverridecount0\ls53}{\listoverride\listid503396256\listoverridecount0\ls54}{\listoverride\listid1188981640\listoverridecount0\ls55}{\listoverride\listid271059475
\listoverridecount0\ls56}{\listoverride\listid519048553\listoverridecount0\ls57}{\listoverride\listid457727880\listoverridecount0\ls58}{\listoverride\listid1429081750\listoverridecount0\ls59}{\listoverride\listid1248920989\listoverridecount0\ls60}
{\listoverride\listid46952223\listoverridecount0\ls61}{\listoverride\listid684789244\listoverridecount0\ls62}{\listoverride\listid1920599405\listoverridecount0\ls63}{\listoverride\listid1461460808\listoverridecount0\ls64}{\listoverride\listid2078749556
\listoverridecount0\ls65}{\listoverride\listid1397900597\listoverridecount0\ls66}{\listoverride\listid212277158\listoverridecount0\ls67}{\listoverride\listid1264846580\listoverridecount0\ls68}{\listoverride\listid923224518\listoverridecount0\ls69}
{\listoverride\listid1379284286\listoverridecount0\ls70}{\listoverride\listid1273593027\listoverridecount0\ls71}{\listoverride\listid439764354\listoverridecount0\ls72}{\listoverride\listid1993177475\listoverridecount0\ls73}{\listoverride\listid241069569
\listoverridecount0\ls74}{\listoverride\listid238290587\listoverridecount0\ls75}{\listoverride\listid2036805750\listoverridecount0\ls76}{\listoverride\listid540167288\listoverridecount0\ls77}{\listoverride\listid2022006509\listoverridecount0\ls78}
{\listoverride\listid1263298639\listoverridecount0\ls79}{\listoverride\listid434709635\listoverridecount0\ls80}{\listoverride\listid1516385848\listoverridecount0\ls81}{\listoverride\listid1073771642\listoverridecount0\ls82}{\listoverride\listid5907055
\listoverridecount0\ls83}{\listoverride\listid38944829\listoverridecount0\ls84}{\listoverride\listid2107118853\listoverridecount0\ls85}{\listoverride\listid659315534\listoverridecount0\ls86}{\listoverride\listid951932778\listoverridecount0\ls87}
{\listoverride\listid55400311\listoverridecount0\ls88}{\listoverride\listid637152761\listoverridecount0\ls89}{\listoverride\listid29956426\listoverridecount0\ls90}{\listoverride\listid1703703946\listoverridecount0\ls91}{\listoverride\listid188764076
\listoverridecount0\ls92}{\listoverride\listid1862743772\listoverridecount0\ls93}{\listoverride\listid201020499\listoverridecount0\ls94}{\listoverride\listid2042320096\listoverridecount0\ls95}{\listoverride\listid1494106168\listoverridecount0\ls96}
{\listoverride\listid692922066\listoverridecount0\ls97}{\listoverride\listid180319290\listoverridecount0\ls98}{\listoverride\listid1091659245\listoverridecount0\ls99}{\listoverride\listid1539077162\listoverridecount0\ls100}{\listoverride\listid1398745702
\listoverridecount0\ls101}{\listoverride\listid1372608582\listoverridecount0\ls102}{\listoverride\listid1413116800\listoverridecount0\ls103}{\listoverride\listid1246106663\listoverridecount0\ls104}{\listoverride\listid577131448\listoverridecount0\ls105}
{\listoverride\listid2097895036\listoverridecount0\ls106}{\listoverride\listid711881470\listoverridecount0\ls107}{\listoverride\listid711881470\listoverridecount9{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1
\levelold\levelspace120\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext
\'02\'01.;}{\levelnumbers\'01;}\fi-360\li720 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li1080 }}{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li1440 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li1800 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext
\'02\'05.;}{\levelnumbers\'01;}\fi-360\li2160 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li2520 }}{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li2880 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat0\levelold\levelspace120\levelindent360{\leveltext\'01\'08;}{\levelnumbers\'01;}}}\ls108}{\listoverride\listid1829666222\listoverridecount0\ls109}{\listoverride\listid1829666222\listoverridecount9{\lfolevel\listoverrideformat{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120
\levelindent360{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li720 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li1080 }
}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li1440 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li1800 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360
{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li2160 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li2520 }}{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li2880 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat0\levelold\levelspace120\levelindent360{\leveltext\'01\'08;}{\levelnumbers\'01;}}}\ls110}{\listoverride\listid1335916272\listoverridecount0\ls111}{\listoverride\listid1697654607\listoverridecount0\ls112}{\listoverride\listid2046327460
\listoverridecount0\ls113}{\listoverride\listid374701223\listoverridecount0\ls114}{\listoverride\listid2\listoverridecount8{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls115}
{\listoverride\listid3\listoverridecount8{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls116}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc25
\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720 }}\ls117}{\listoverride\listid711881470\listoverridecount9{\lfolevel\listoverrideformat{\listlevel\levelnfc0
\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120
\levelindent360{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li720 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li1080 }
}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li1440 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li1800 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360
{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li2160 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li2520 }}{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li2880 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat0\levelold\levelspace120\levelindent360{\leveltext\'01\'08;}{\levelnumbers\'01;}}}\ls118}{\listoverride\listid1829666222\listoverridecount9{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold
\levelspace120\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'01.;}{\levelnumbers\'01;}
\fi-360\li720 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-360\li1080 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0
\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li1440 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120
\levelindent360{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li1800 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-360\li2160 
}}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li2520 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelold\levelspace120\levelindent360{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li2880 }}{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelold\levelspace120\levelindent360
{\leveltext\'01\'08;}{\levelnumbers\'01;}}}\ls119}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers
;}\f3\fbias0 \fi-360\li720 }}\ls120}}{\*\revtbl {Unknown;}}{\info{\title Heading 1}{\author David Dougher}{\operator David Dougher}{\creatim\yr1999\mo6\dy15\hr8\min48}{\revtim\yr1999\mo6\dy15\hr8\min48}{\printim\yr1999\mo6\dy4\hr12\min41}{\version2}{\edmins0}{\nofpages453}
{\nofwords141730}{\nofchars807865}{\*\company Silver Chalice Software}{\nofcharsws992114}{\vern113}}\margl1440\margr1440 \widowctrl\ftnbj\aenddoc\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template 
C:\\Program Files\\Microsoft Office\\Templates\\Manuscript.dot}{\*\docvar {BadObjects}{Unknown field}}{\*\docvar {SelEnd}{ }}{\*\docvar {SelStart}{ }}\sectd \binfsxn4\binsxn4\psz1\linex0\endnhere\titlepg\sectdefaultcl {\header \pard\plain \keepn\widctlpar
\tx720\adjustright \f1\cgrid {Vol. 1 Genesis 3D Engine Reference Guide Release 1.0\tab \tab Page }{\field{\*\fldinst {\cs19  PAGE }}{\fldrslt {\cs19\lang1024 453}}}{\cs19  of }{\field{\*\fldinst {\cs19  NUMPAGES }}{\fldrslt {\cs19\lang1024 453}}}{\cs19  o
}}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\qc\sb240\sa60\keepn\widctlpar\tx720\outlinelevel0\adjustright \b\f16\fs36\kerning28\cgrid {
\par 
\par 
\par 
\par 
\par }\pard\plain \qc\keepn\widctlpar\tx720\adjustright \f1\cgrid {\f16\fs44 {\*\bkmkstart _Toc446558862}Vol. 1 Genesis3D Engine
\par Reference Guide
\par Release 1{\*\bkmkend _Toc446558862}.0}{
\par }\pard \keepn\widctlpar\tx720\adjustright {
\par }\pard \qc\keepn\widctlpar\tx720\adjustright {by
\par David Dougher
\par January 25, 1999
\par }\pard \keepn\widctlpar\tx720\adjustright {
\par \page }{\f16\fs28 {\*\bkmkstart _Toc446558863}Table of Contents{\*\bkmkend _Toc446558863}
\par }\pard\plain \s20\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\i\cgrid {\field\fldedit{\*\fldinst {\b0\i0  TOC \\o "1-7" }}{\fldrslt {\lang1024 Introduction\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069773 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370033000000}}}{\fldrslt {\lang1024 8}}}{\lang1024 
\par GENESIS3D PUBLIC LICENSE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069774 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370034000000}}}{\fldrslt {\lang1024 10}
}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\lang1024 PREAMBLE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069775 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370035000000}}}{\fldrslt {\lang1024 10}}}{\lang1024 
\par 1. DEFINITIONS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069776 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370036000000}}}{\fldrslt {\lang1024 11}}}{
\lang1024 
\par 2. SOURCE CODE LICENSE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069777 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370037000000}}}{\fldrslt {\lang1024 12}}}{
\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 2.1. The Eclipse Grant.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069778 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370038000000}}}{\fldrslt {\lang1024 12}}}{\lang1024 
\par 2.2. Contributor Grant.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069779 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700370039000000}}}{\fldrslt {\lang1024 13}}}
{\lang1024 
\par 2.3. Your Grant.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069780 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380030000000}}}{\fldrslt {\lang1024 13}}}{
\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\lang1024 3. DISTRIBUTION OBLIGATIONS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069781 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380031000000}}}{\fldrslt {\lang1024 13}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 3.1. Application of License to You.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069782 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380032000000}}}{\fldrslt {\lang1024 13}}}{\lang1024 
\par 3.2. Application of License to Eclipse.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069783 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380033000000}}}{\fldrslt 
{\lang1024 14}}}{\lang1024 
\par 3.3. Availability of Source Code.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069784 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380034000000}}}{\fldrslt {
\lang1024 14}}}{\lang1024 
\par 3.4. Description of Modifications.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069785 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380035000000}}}{\fldrslt {
\lang1024 15}}}{\lang1024 
\par 3.5. Intellectual Property Matters\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069786 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380036000000}}}{\fldrslt {
\lang1024 15}}}{\lang1024 
\par 3.6. Required Notices.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069787 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380037000000}}}{\fldrslt {\lang1024 15}}}{
\lang1024 
\par 3.7. Distribution of Executable Versions.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069788 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380038000000}}
}{\fldrslt {\lang1024 16}}}{\lang1024 
\par 3.8. Larger Works.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069789 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700380039000000}}}{\fldrslt {\lang1024 16}}}{
\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\lang1024 4. RESTRICTIONS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069790 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390030000000}}}{\fldrslt {\lang1024 16}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 4.1. You agree to:\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069791 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390031000000}}}{\fldrslt {\lang1024 16}}}{\lang1024 
\par 4.2. You may not:\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069792 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390032000000}}}{\fldrslt {\lang1024 17}}}{
\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\lang1024 5. INABILITY TO COMPLY DUE TO STATUTE OR\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069793 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390033000000}}}{\fldrslt {\lang1024 17}}}{\lang1024 
\par REGULATION\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069794 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390034000000}}}{\fldrslt {\lang1024 17}}}{\lang1024 

\par 6. APPLICATION OF THIS LICENSE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069795 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390035000000}}}{\fldrslt {
\lang1024 17}}}{\lang1024 
\par 7. VERSIONS OF THE LICENSE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069796 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390036000000}}}{\fldrslt {\lang1024 18
}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 7.1. New Versions.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069797 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390037000000}}}{\fldrslt {\lang1024 18}}}{\lang1024 
\par 7.2. Effect of New Versions.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069798 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390038000000}}}{\fldrslt {\lang1024 
18}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\lang1024 8. DISCLAIMER OF WARRANTY\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069799 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003700390039000000}}}{\fldrslt {\lang1024 18}}}{\lang1024 
\par 9. TERMINATION\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069800 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300030000000}}}{\fldrslt {\lang1024 18}}}{
\lang1024 
\par 10. LIMITATION OF LIABILITY\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069801 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300031000000}}}{\fldrslt {\lang1024 
19}}}{\lang1024 
\par 11. U.S. GOVERNMENT END USERS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069802 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300032000000}}}{\fldrslt {
\lang1024 19}}}{\lang1024 
\par 12. MISCELLANEOUS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069803 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300033000000}}}{\fldrslt {\lang1024 20}}}{
\lang1024 
\par 13. RESPONSIBILITY FOR CLAIMS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069804 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300034000000}}}{\fldrslt {
\lang1024 20}}}{\lang1024 
\par EXHIBIT A.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069805 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300035000000}}}{\fldrslt {\lang1024 20}}}{\lang1024 

\par EXHIBIT B.\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069806 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300036000000}}}{\fldrslt {\lang1024 21}}}{\lang1024 

\par }\pard\plain \s20\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\i\cgrid {\lang1024 Game File Structure Layout\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069807 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300037000000}}}{\fldrslt {\lang1024 22}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\b0\f1\lang1024 Directory of C:\\Genesis3D*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069808 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300038000000}}}{\fldrslt {\lang1024 22}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\b0\f1\lang1024 Directory of C:\\Genesis3D\\Actors*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069809 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800300039000000}}}{\fldrslt {\lang1024 23}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis\\Bmp*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069810 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310030000000}}}{\fldrslt {\lang1024 23}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis\\Bmp\\Console*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069811 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310031000000}}}{\fldrslt {\lang1024 24}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis\\Bmp\\Console\\320x240*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069812 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310032000000}}}{\fldrslt {\lang1024 24}}}{\lang1024 
\par Directory of C:\\Genesis\\Bmp\\Console\\640x480*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069813 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310033000000}}
}{\fldrslt {\lang1024 24}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\bmp\\Explode*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069814 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310034000000}}}{\fldrslt {\lang1024 24}}}{\lang1024 
\par Directory of C:\\Genesis3D\\bmp\\Fx*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069815 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310035000000}}}{\fldrslt {
\lang1024 25}}}{\lang1024 
\par Directory of C:\\Genesis3D\\bmp\\Menu*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069816 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310036000000}}}{\fldrslt {
\lang1024 25}}}{\lang1024 
\par Directory of C:\\Genesis3D\\bmp\\Sbar*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069817 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310037000000}}}{\fldrslt {
\lang1024 26}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\bmp\\SBar\\320x240*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069818 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310038000000}}}{\fldrslt {\lang1024 26}}}{\lang1024 
\par Directory of C:\\Genesis3D\\bmp\\SBar\\640x480*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069819 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800310039000000}}
}{\fldrslt {\lang1024 26}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\bmp\\Weapon*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069820 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320030000000}}}{\fldrslt {\lang1024 27}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\b0\f1\lang1024 Directory of C:\\Genesis3D\\doc*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069821 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320031000000}}}{\fldrslt {\lang1024 27}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\doc\\APIReference*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069822 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320032000000}}}{\fldrslt {\lang1024 28}}}{\lang1024 
\par Directory of C:\\Genesis3D\\doc\\editor*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069823 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320033000000}}
}{\fldrslt {\lang1024 28}}}{\lang1024 
\par Directory of C:\\Genesis3D\\doc\\editor*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069824 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320034000000}}
}{\fldrslt {\lang1024 29}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\b0\f1\lang1024 Directory of C:\\Genesis3D\\Genesis3D*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069825 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320035000000}}}{\fldrslt {\lang1024 30}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\include}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069826 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320036000000}}}{\fldrslt {\lang1024 30}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\levels*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069827 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320037000000}}}{\fldrslt {\lang1024 30}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\lib*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069828 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320038000000}}}{\fldrslt {\lang1024 31}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\Objects*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069829 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800320039000000}}}{\fldrslt {\lang1024 31}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\OpenSource*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069830 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330030000000}}}{\fldrslt {\lang1024 31}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\masm*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069831 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330031000000}}}{\fldrslt {\lang1024 32}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\msdev60*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069832 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330032000000}}
}{\fldrslt {\lang1024 32}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\sdk*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069833 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330033000000}}
}{\fldrslt {\lang1024 32}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\sdk\\DX6SDK*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069834 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330034000000}}}{\fldrslt {\lang1024 32}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\sdk\\Glide*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069835 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330035000000}
}}{\fldrslt {\lang1024 33}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069836 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330036000000}}}{\fldrslt {\lang1024 33}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Actor\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069837 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330037000000}}}{\fldrslt {\lang1024 34}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Bitmap\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069838 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330038000000}}}{\fldrslt {\lang1024 34}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Bitmap\\Compression\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069839 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800330039000000}}}{\fldrslt {\lang1024 35}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069840 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340030000000}}}{\fldrslt {\lang1024 35}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069841 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340031000000}}}{\fldrslt {\lang1024 36}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\D3DDrv\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069842 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340032000000}}}{\fldrslt {\lang1024 36}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\GlideDrv\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069843 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340033000000}}}{\fldrslt {\lang1024 37}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\SoftDrv\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069844 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340034000000}}}{\fldrslt {\lang1024 37}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\SoftDrv2\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069845 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340035000000}}}{\fldrslt {\lang1024 38}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Logo\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069846 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340036000000}}}{\fldrslt {\lang1024 38}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Source\\Entities\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069847 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340037000000}}}{\fldrslt {\lang1024 39}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Font\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069848 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340038000000
}}}{\fldrslt {\lang1024 39}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Math\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069849 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800340039000000
}}}{\fldrslt {\lang1024 39}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Physics\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069850 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350030000000}}}{\fldrslt {\lang1024 39}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Support\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069851 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350031000000}}}{\fldrslt {\lang1024 40}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Vfile\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069852 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350032000000}}}{\fldrslt {\lang1024 40}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\World\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069853 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350033000000}}}{\fldrslt {\lang1024 41}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069854 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350034000000}}
}{\fldrslt {\lang1024 41}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069855 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350035000000}}}{\fldrslt {\lang1024 41}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Doc*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069856 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350036000000}}}{\fldrslt {\lang1024 42}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069857 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350037000000}}}{\fldrslt {\lang1024 42}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK\\include\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069858 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350038000000}}}{\fldrslt {\lang1024 43}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK\\lib*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069859 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800350039000000}}}{\fldrslt {\lang1024 43}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Main\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069860 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360030000000}}}{\fldrslt {\lang1024 43}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\res*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069861 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360031000000}}}{\fldrslt {\lang1024 44}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Util\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069862 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360032000000}}}{\fldrslt {\lang1024 44}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Exporters\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069863 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360033000000}}}{\fldrslt {\lang1024 44}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Exporters\\max2sdk*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069864 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360034000000}}}{\fldrslt {\lang1024 45}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069865 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360035000000}}}{\fldrslt {\lang1024 45}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Deliver*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069866 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360036000000}}}{\fldrslt {\lang1024 47}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Doc*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069867 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360037000000}}}{\fldrslt {\lang1024 48}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Doc\\html*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069868 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360038000000}}}{\fldrslt {\lang1024 48}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069869 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800360039000000}}}{\fldrslt {\lang1024 49}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK\\include\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069870 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370030000000}}}{\fldrslt {\lang1024 49}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK\\lib*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069871 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370031000000}}}{\fldrslt {\lang1024 50}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\res*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069872 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370032000000}}}{\fldrslt {\lang1024 50}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\TypeParser\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069873 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370033000000}}}{\fldrslt {\lang1024 51}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069874 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370034000000}}}{\fldrslt {\lang1024 51}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069875 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370035000000}}}{\fldrslt {\lang1024 52}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare\\Include\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069876 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370036000000}}}{\fldrslt {\lang1024 53}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare\\Lib*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069877 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370037000000}}}{\fldrslt {\lang1024 53}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069878 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370038000000}}}{\fldrslt {\lang1024 53}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069879 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800370039000000}}}{\fldrslt {\lang1024 54}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk\\include\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069880 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380030000000}}}{\fldrslt {\lang1024 54}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk\\lib*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069881 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380031000000}}}{\fldrslt {\lang1024 54}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069882 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380032000000}}}{\fldrslt {\lang1024 55}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\ActBuild\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069883 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380033000000}}}{\fldrslt {\lang1024 55}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069884 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380034000000}}}{\fldrslt {\lang1024 55}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\HLP*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069885 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380035000000}}}{\fldrslt {\lang1024 56}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\RES*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069886 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380036000000}}}{\fldrslt {\lang1024 57}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\Util\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069887 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380037000000}}}{\fldrslt {\lang1024 57}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\common\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069888 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380038000000}}}{\fldrslt {\lang1024 57}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\Debug*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069889 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800380039000000}}}{\fldrslt {\lang1024 57}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\fmtactor\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069890 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390030000000}}}{\fldrslt {\lang1024 58}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069891 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390031000000}}}{\fldrslt {\lang1024 58}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK\\include\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069892 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390032000000}}}{\fldrslt {\lang1024 58}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK\\lib*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069893 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390033000000}}}{\fldrslt {\lang1024 59}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkactor\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069894 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390034000000}}}{\fldrslt {\lang1024 59}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkbody\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069895 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390035000000}}}{\fldrslt {\lang1024 59}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkmotion\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069896 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390036000000}}}{\fldrslt {\lang1024 59}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mop\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069897 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390037000000}}}{\fldrslt {\lang1024 60}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\Release*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069898 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390038000000}}}{\fldrslt {\lang1024 60}}}{\lang1024 
\par }\pard\plain \s24\li960\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Tpack*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069899 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003800390039000000}}}{\fldrslt {\lang1024 60}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069900 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300030000000}}}{\fldrslt {\lang1024 60}}}{\lang1024 
\par }\pard\plain \s26\li1440\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK\\include\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069901 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300031000000}}}{\fldrslt {\lang1024 60}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK\\lib*\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069902 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300032000000}}}{\fldrslt {\lang1024 61}}}{\lang1024 
\par }\pard\plain \s25\li1200\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\res}{\i\lang1024 *}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069903 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300033000000}}}{\fldrslt {\lang1024 61}}}{\lang1024 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\Source\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069904 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300034000000}}}{\fldrslt {\lang1024 61}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\b0\f1\lang1024 Directory of C:\\Genesis3D\\Redist*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069905 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300035000000}}}{\fldrslt {\lang1024 62}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\src}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069906 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300036000000}}}{\fldrslt {\lang1024 62}}}{\lang1024 
\par }\pard\plain \s23\li720\keepn\widctlpar\tqr\tldot\tx9350\adjustright \fs20\cgrid {\lang1024 Directory of C:\\Genesis3D\\src\\DrvMenu\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069907 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300037000000}}}{\fldrslt {\lang1024 63}}}{\lang1024 
\par Directory of C:\\Genesis3D\\src\\FX\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069908 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300038000000}}}{\fldrslt {
\lang1024 63}}}{\lang1024 
\par Directory of C:\\Genesis3D\\src\\Game\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069909 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900300039000000}}}{\fldrslt {
\lang1024 63}}}{\lang1024 
\par Directory of C:\\Genesis3D\\src\\Procedurals\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069910 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310030000000}}
}{\fldrslt {\lang1024 64}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\b0\f1\lang1024 Directory of C:\\Genesis3D\\Tools}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069911 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310031000000}}}{\fldrslt {\lang1024 64}}}{\lang1024 
\par }{\b0\f1\lang1024 Directory of C:\\Genesis3D\\wav*}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069912 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310032000000}}}{\fldrslt {\lang1024 65}}}{\lang1024 
\par }\pard\plain \s20\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\i\cgrid {\lang1024 Genesis3D API Documentation\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069913 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310033000000}}}{\fldrslt {\lang1024 66}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\lang1024 Genesis3D API and Tools Documentation\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069914 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310034000000}}}{\fldrslt {\lang1024 66}}}{\lang1024 
\par }\pard\plain \s20\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\i\cgrid {\lang1024 Genesis3D Library Header Files\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069915 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310035000000}}}{\fldrslt {\lang1024 75}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 Include Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069916 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310036000000}}}{\fldrslt {\lang1024 75}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Actor.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069917 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310037000000}}}{\fldrslt {\lang1024 75}}}{\lang1024 
\par Basetype.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069918 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310038000000}}}{\fldrslt {\lang1024 84}}}{\lang1024 

\par Bitmap.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069919 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900310039000000}}}{\fldrslt {\lang1024 86}}}{\lang1024 

\par Body.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069920 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320030000000}}}{\fldrslt {\lang1024 99}}}{\lang1024 

\par Errorlog.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069921 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320031000000}}}{\fldrslt {\lang1024 101}}}{\lang1024 

\par ExtBox.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069922 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320032000000}}}{\fldrslt {\lang1024 106}}}{\lang1024 

\par Font.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069923 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320033000000}}}{\fldrslt {\lang1024 108}}}{\lang1024 

\par Genesis.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069924 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320034000000}}}{\fldrslt {\lang1024 113}}}{\lang1024 

\par Getypes.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069925 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320035000000}}}{\fldrslt {\lang1024 126}}}{\lang1024 

\par Matrix33.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069926 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320036000000}}}{\fldrslt {\lang1024 128}}}{\lang1024 

\par Motion.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069927 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320037000000}}}{\fldrslt {\lang1024 129}}}{\lang1024 

\par Path.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069928 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320038000000}}}{\fldrslt {\lang1024 133}}}{\lang1024 

\par PhysicsJoint.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069929 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900320039000000}}}{\fldrslt {\lang1024 136}}}{
\lang1024 
\par PhysicsObject.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069930 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330030000000}}}{\fldrslt {\lang1024 137}}}{
\lang1024 
\par PhysicsSystem.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069931 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330031000000}}}{\fldrslt {\lang1024 141}}}{
\lang1024 
\par Pixelformat.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069932 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330032000000}}}{\fldrslt {\lang1024 142}}}{
\lang1024 
\par Quatern.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069933 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330033000000}}}{\fldrslt {\lang1024 145}}}{\lang1024 

\par Ram.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069934 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330034000000}}}{\fldrslt {\lang1024 149}}}{\lang1024 

\par Vec3d.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069935 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330035000000}}}{\fldrslt {\lang1024 152}}}{\lang1024 

\par Vfile.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069936 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330036000000}}}{\fldrslt {\lang1024 153}}}{\lang1024 

\par Xform3d.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069937 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330037000000}}}{\fldrslt {\lang1024 157}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069938 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330038000000}}}{\fldrslt {\lang1024 162}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Camera.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069939 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900330039000000}}}{\fldrslt {\lang1024 162}}}{\lang1024 
\par CSNetMgr.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069940 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340030000000}}}{\fldrslt {\lang1024 164}}}{\lang1024 

\par Genesis.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069941 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340031000000}}}{\fldrslt {\lang1024 166}}}{\lang1024 

\par GETypes.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069942 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340032000000}}}{\fldrslt {\lang1024 179}}}{\lang1024 

\par List.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069943 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340033000000}}}{\fldrslt {\lang1024 181}}}{\lang1024 

\par NetPlay.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069944 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340034000000}}}{\fldrslt {\lang1024 185}}}{\lang1024 

\par PtrTypes.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069945 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340035000000}}}{\fldrslt {\lang1024 187}}}{\lang1024 

\par Resource.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069946 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340036000000}}}{\fldrslt {\lang1024 189}}}{\lang1024 

\par Sound.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069947 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340037000000}}}{\fldrslt {\lang1024 189}}}{\lang1024 

\par Sound3D.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069948 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340038000000}}}{\fldrslt {\lang1024 190}}}{\lang1024 

\par Tclip.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069949 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900340039000000}}}{\fldrslt {\lang1024 191}}}{\lang1024 

\par Timer.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069950 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350030000000}}}{\fldrslt {\lang1024 194}}}{\lang1024 

\par TSC.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069951 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350031000000}}}{\fldrslt {\lang1024 196}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Actor Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069952 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350032000000}}}{\fldrslt {\lang1024 198}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Actor.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069953 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350033000000}}}{\fldrslt {\lang1024 198}}}{\lang1024 
\par Body._h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069954 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350034000000}}}{\fldrslt {\lang1024 208}}}{\lang1024 

\par Body.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069955 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350035000000}}}{\fldrslt {\lang1024 211}}}{\lang1024 

\par Bodyinst.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069956 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350036000000}}}{\fldrslt {\lang1024 213}}}{\lang1024 

\par Motion.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069957 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350037000000}}}{\fldrslt {\lang1024 217}}}{\lang1024 

\par Path.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069958 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350038000000}}}{\fldrslt {\lang1024 220}}}{\lang1024 

\par Pose.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069959 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900350039000000}}}{\fldrslt {\lang1024 223}}}{\lang1024 

\par Puppet.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069960 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360030000000}}}{\fldrslt {\lang1024 226}}}{\lang1024 

\par QKFrame.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069961 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360031000000}}}{\fldrslt {\lang1024 228}}}{\lang1024 

\par strblock.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069962 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360032000000}}}{\fldrslt {\lang1024 231}}}{\lang1024 

\par tkarray.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069963 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360033000000}}}{\fldrslt {\lang1024 232}}}{\lang1024 

\par tkevents.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069964 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360034000000}}}{\fldrslt {\lang1024 235}}}{\lang1024 

\par vkframe.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069965 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360035000000}}}{\fldrslt {\lang1024 237}}}{\lang1024 

\par xfarray.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069966 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360036000000}}}{\fldrslt {\lang1024 239}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Bitmap Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069967 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360037000000}}}{\fldrslt {\lang1024 241}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 bitmap._h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069968 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360038000000}}}{\fldrslt {\lang1024 243}}}{\lang1024 
\par bitmap.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069969 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900360039000000}}}{\fldrslt {\lang1024 245}}}{\lang1024 

\par bitmap_blitdata.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069970 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370030000000}}}{\fldrslt {\lang1024 258}}}{
\lang1024 
\par bitmap_gamma.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069971 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370031000000}}}{\fldrslt {\lang1024 258}}}{
\lang1024 
\par pixelformat.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069972 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370032000000}}}{\fldrslt {\lang1024 259}}}{
\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Bitmap/Compression Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069973 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370033000000}}}{\fldrslt {\lang1024 263}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Palcreate.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069974 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370034000000}}}{\fldrslt {\lang1024 263}}}{\lang1024 
\par palettize.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069975 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370035000000}}}{\fldrslt {\lang1024 264}}}{\lang1024 

\par paloptimize.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069976 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370036000000}}}{\fldrslt {\lang1024 265}}}{
\lang1024 
\par utility.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069977 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370037000000}}}{\fldrslt {\lang1024 265}}}{\lang1024 

\par yuv.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069978 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370038000000}}}{\fldrslt {\lang1024 268}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069979 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900370039000000}}}{\fldrslt {\lang1024 270}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Bitmaplist.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069980 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380030000000}}}{\fldrslt {\lang1024 270}}}{\lang1024 
\par engine.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069981 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380031000000}}}{\fldrslt {\lang1024 272}}}{\lang1024 

\par system.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069982 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380032000000}}}{\fldrslt {\lang1024 274}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/DCommon Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069983 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380033000000}}}{\fldrslt {\lang1024 279}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Dcommon.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069984 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380034000000}}}{\fldrslt {\lang1024 279}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/D3DDrv Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069985 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380035000000}}}{\fldrslt {\lang1024 289}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 D3derr.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069986 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380036000000}}}{\fldrslt {\lang1024 289}}}{\lang1024 
\par D3d_fx.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069987 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380037000000}}}{\fldrslt {\lang1024 289}}}{\lang1024 

\par D3d_main.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069988 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380038000000}}}{\fldrslt {\lang1024 290}}}{\lang1024 

\par D3dcache.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069989 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900380039000000}}}{\fldrslt {\lang1024 296}}}{\lang1024 

\par D3ddrv.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069990 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390030000000}}}{\fldrslt {\lang1024 297}}}{\lang1024 

\par DDMemMgr.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069991 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390031000000}}}{\fldrslt {\lang1024 297}}}{\lang1024 

\par Gspan.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069992 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390032000000}}}{\fldrslt {\lang1024 299}}}{\lang1024 

\par Pcache.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069993 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390033000000}}}{\fldrslt {\lang1024 300}}}{\lang1024 

\par Render.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069994 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390034000000}}}{\fldrslt {\lang1024 300}}}{\lang1024 

\par Scene.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069995 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390035000000}}}{\fldrslt {\lang1024 301}}}{\lang1024 

\par Thandle.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069996 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390036000000}}}{\fldrslt {\lang1024 302}}}{\lang1024 

\par Tpage.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069997 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390037000000}}}{\fldrslt {\lang1024 304}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Drivers/GlideDrv Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069998 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390038000000}}}{\fldrslt {\lang1024 306}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 GCache.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454069999 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000360039003900390039000000}}}{\fldrslt {\lang1024 306}}}{\lang1024 
\par Glidedrv.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070000 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300030000000}}}{\fldrslt {\lang1024 307}}}{\lang1024 

\par Gmain.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070001 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300031000000}}}{\fldrslt {\lang1024 308}}}{\lang1024 

\par GMemMgr.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070002 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300032000000}}}{\fldrslt {\lang1024 309}}}{\lang1024 

\par GSpan.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070003 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300033000000}}}{\fldrslt {\lang1024 310}}}{\lang1024 

\par GThandle.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070004 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300034000000}}}{\fldrslt {\lang1024 311}}}{\lang1024 

\par Render.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070005 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300035000000}}}{\fldrslt {\lang1024 314}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Drivers/SoftDrv Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070006 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300036000000}}}{\fldrslt {\lang1024 316}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 3dnowspan.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070007 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300037000000}}}{\fldrslt {\lang1024 316}}}{\lang1024 
\par dmodes.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070008 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300038000000}}}{\fldrslt {\lang1024 317}}}{\lang1024 

\par drawspan.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070009 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000300039000000}}}{\fldrslt {\lang1024 318}}}{\lang1024 

\par Register.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070010 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310030000000}}}{\fldrslt {\lang1024 320}}}{\lang1024 

\par Render.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070011 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310031000000}}}{\fldrslt {\lang1024 321}}}{\lang1024 

\par sal.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070012 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310032000000}}}{\fldrslt {\lang1024 323}}}{\lang1024 

\par Scene.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070013 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310033000000}}}{\fldrslt {\lang1024 329}}}{\lang1024 

\par Softdrv.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070014 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310034000000}}}{\fldrslt {\lang1024 330}}}{\lang1024 

\par Span.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070015 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310035000000}}}{\fldrslt {\lang1024 332}}}{\lang1024 

\par System.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070016 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310036000000}}}{\fldrslt {\lang1024 333}}}{\lang1024 

\par x86span555.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070017 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310037000000}}}{\fldrslt {\lang1024 334}}}{
\lang1024 
\par x86span565.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070018 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310038000000}}}{\fldrslt {\lang1024 335}}}{
\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Drivers/SoftDrv2 Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070019 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000310039000000}}}{\fldrslt {\lang1024 338}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 CPUInfo.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070020 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320030000000}}}{\fldrslt {\lang1024 338}}}{\lang1024 
\par DDrawDisplay.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070021 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320031000000}}}{\fldrslt {\lang1024 338}}}{
\lang1024 
\par DIBDisplay.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070022 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320032000000}}}{\fldrslt {\lang1024 341}}}{
\lang1024 
\par display.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070023 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320033000000}}}{\fldrslt {\lang1024 342}}}{\lang1024 

\par DisplayModeInfo.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070024 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320034000000}}}{\fldrslt {\lang1024 345}}}{
\lang1024 
\par DrawDecal.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070025 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320035000000}}}{\fldrslt {\lang1024 346}}}{\lang1024 

\par rop.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070026 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320036000000}}}{\fldrslt {\lang1024 348}}}{\lang1024 

\par Softdrv.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070027 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320037000000}}}{\fldrslt {\lang1024 350}}}{\lang1024 

\par Span.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070028 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320038000000}}}{\fldrslt {\lang1024 351}}}{\lang1024 

\par Span_AffineLoop.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070029 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000320039000000}}}{\fldrslt {\lang1024 352}}}{
\lang1024 
\par Span_Factory.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070030 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330030000000}}}{\fldrslt {\lang1024 356}}}{
\lang1024 
\par SpanBuffer.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070031 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330031000000}}}{\fldrslt {\lang1024 360}}}{
\lang1024 
\par SpanEdges_Factory.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070032 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330032000000}}}{\fldrslt {\lang1024 361}}}{
\lang1024 
\par SWTHandle.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070033 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330033000000}}}{\fldrslt {\lang1024 365}}}{\lang1024 

\par traster.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070034 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330034000000}}}{\fldrslt {\lang1024 366}}}{\lang1024 

\par triangle.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070035 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330035000000}}}{\fldrslt {\lang1024 369}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Logo Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070036 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330036000000}}}{\fldrslt {\lang1024 377}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 electric.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070037 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330037000000}}}{\fldrslt {\lang1024 377}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Entities Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070038 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330038000000}}}{\fldrslt {\lang1024 379}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Entities.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070039 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000330039000000}}}{\fldrslt {\lang1024 379}}}{\lang1024 
\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Font Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070040 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340030000000}}}{\fldrslt {\lang1024 383}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Font.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070041 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340031000000}}}{\fldrslt {\lang1024 383}}}{\lang1024 
\par wgClip.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070042 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340032000000}}}{\fldrslt {\lang1024 388}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Math Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070043 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340033000000}}}{\fldrslt {\lang1024 389}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 Box.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070044 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340034000000}}}{\fldrslt {\lang1024 389}}}{\lang1024 
\par CRC32.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070045 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340035000000}}}{\fldrslt {\lang1024 390}}}{\lang1024 

\par ExtBox.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070046 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340036000000}}}{\fldrslt {\lang1024 391}}}{\lang1024 

\par QUATERN.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070047 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340037000000}}}{\fldrslt {\lang1024 392}}}{\lang1024 

\par VEC3D.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070048 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340038000000}}}{\fldrslt {\lang1024 397}}}{\lang1024 

\par XFORM3D.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070049 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000340039000000}}}{\fldrslt {\lang1024 398}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Support Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070050 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350030000000}}}{\fldrslt {\lang1024 403}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 BASETYPE.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070051 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350031000000}}}{\fldrslt {\lang1024 403}}}{\lang1024 
\par Errorlog.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070052 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350032000000}}}{\fldrslt {\lang1024 404}}}{\lang1024 

\par geAssert.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070053 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350033000000}}}{\fldrslt {\lang1024 409}}}{\lang1024 

\par LOG.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070054 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350034000000}}}{\fldrslt {\lang1024 410}}}{\lang1024 

\par MEMPOOL.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070055 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350035000000}}}{\fldrslt {\lang1024 411}}}{\lang1024 

\par RAM.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070056 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350036000000}}}{\fldrslt {\lang1024 412}}}{\lang1024 

\par }\pard\plain \s21\li240\sb120\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs22\cgrid {\i\lang1024 OpenSource/Source/Engine/Vfile Subdirectory}{\lang1024 \tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070057 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350037000000}}}{\fldrslt {\lang1024 416}}}{\lang1024 
\par }\pard\plain \s22\li480\keepn\widctlpar\tqr\tldot\tx9350\adjustright \b\fs20\cgrid {\lang1024 DirTree.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070058 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350038000000}}}{\fldrslt {\lang1024 416}}}{\lang1024 
\par FSDOS.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070059 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000350039000000}}}{\fldrslt {\lang1024 417}}}{\lang1024 

\par FSMemory.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070060 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360030000000}}}{\fldrslt {\lang1024 419}}}{\lang1024 

\par FSVFS.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070061 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360031000000}}}{\fldrslt {\lang1024 419}}}{\lang1024 

\par VFILE._h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070062 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360032000000}}}{\fldrslt {\lang1024 421}}}{\lang1024 

\par VFILE.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070063 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360033000000}}}{\fldrslt {\lang1024 423}}}{\lang1024 

\par Fog.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070064 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360034000000}}}{\fldrslt {\lang1024 427}}}{\lang1024 

\par Frustrum.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070065 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360035000000}}}{\fldrslt {\lang1024 428}}}{\lang1024 

\par GBSPFILE.H\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070066 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360036000000}}}{\fldrslt {\lang1024 431}}}{\lang1024 

\par LIGHT.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070067 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360037000000}}}{\fldrslt {\lang1024 433}}}{\lang1024 

\par Plane.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070068 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360038000000}}}{\fldrslt {\lang1024 435}}}{\lang1024 

\par Surface.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070069 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000360039000000}}}{\fldrslt {\lang1024 437}}}{\lang1024 

\par Trace.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070070 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000370030000000}}}{\fldrslt {\lang1024 439}}}{\lang1024 

\par User.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070071 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000370031000000}}}{\fldrslt {\lang1024 442}}}{\lang1024 

\par Vis.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070072 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000370032000000}}}{\fldrslt {\lang1024 444}}}{\lang1024 

\par WBitmap.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070073 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000370033000000}}}{\fldrslt {\lang1024 445}}}{\lang1024 

\par World.h\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc454070074 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350034003000370030003000370034000000}}}{\fldrslt {\lang1024 447}}}{\lang1024 

\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid }}\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {\b\i\f0 
\par  }{\page 
\par }\pard\plain \s1\qc\sb240\sa60\keepn\widctlpar\tx720\outlinelevel0\adjustright \b\f16\fs36\kerning28\cgrid {{\*\bkmkstart _Toc446558895}{\*\bkmkstart _Toc454069773}Introduction{\*\bkmkend _Toc454069773}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par \tab First of all, I would like to thank the people at Eclipse Software for their kind permission to incorporate so much of their hard work, dedication and creativity into this b
ook.  As a result, what you are reading is primarily a work of research, not creativity, on my part.  I am indebted to the people at Eclipse for allowing me to incorporate large amounts of their header files and rephrase much of their documentation.  I ha
v
e attempted to add quite a bit of useful information and my own organizational spin, but wherever possible I have retained the content that Eclipse has presented on the theory that their descriptions often contain subtle nuances which are of importance in
 understanding the content, direction and focus of the engine component development efforts.
\par \tab This reference work is the first in a series of books about the Genesis3D Engine from Eclipse Software.  This book is specifically about the Genesis3D Engine Relea
se 1.0.  This book describes the layout of the Genesis3D files and subdirectories, as well as their contents. It continues with a complete listing of all the C and C++ header files in both the C:\\Genesis3d\\include subdirectory,  and the OpenSource\\
Source subdirectories.  These comprise all the C and C++ header files for the Genesis3D engine for developers who wish to create programs using the Genesis3D engine.
\par \tab The second volume of this series addresses the Tools developed by Eclipse in support of the Genesis3D engine.  It contains much of the same material in the opening sections of this book and then goes on to cover the C and C++ header files in the C:\\
Genesis\\OpenSource\\Tools section and the example program in C:\\Genesis\\src.
\par \tab The third volume contains a
 listing of the major function calls contained in the outer include directory - this directory contains all the function calls necessary to use the engine without modification.  Examination of this reference will point developers to functions which contai
n code they may need to modify for their own application, or for tools they are developing, or it can serve as a reference to those who wish to make a game without modifying the sources.
\par \tab The fourth and fifth volumes are an introduction to using the Genesis3D Tools and the construction of a game using the Genesis3D engine.
\par \tab This volume can be used both by persons who wish to modify the Genesis3D engine and those who do not.  Genesis3D is an OpenSource project with unique requirements, so the decision on whet
her you wish to use the engine as is, or modify it in some fashion should be made after a careful reading of the license agreement. 
\par \tab  In essence the agreement states that if you wish to use the precreated libraries and link using the header files in the i
nclude directory there is no obligation on you and you may use the resultant software in any way you wish -- as long as you incorporate the Genesis logo at the beginning of your program to acknowledge Eclipse's contribution. If you wish to modify the sour
ce code to the engine you must either contribute the changes you have made to the Genesis community or purchase a $50,000.00 source code license from Eclipse.  I have enclosed a copy of this document so you can make an informed decision.\line 
\par \tab I would also like to thank my wife Deborah for her support, for keeping the wolves at bay while I typed, and for bringing me endless cups of tea and english muffins as I worked on this book.  I hope that you will find this work useful.  
\par 
\par \tab D. Dougher
\par \tab May 1999
\par }\pard\plain \s1\qc\sb240\sa60\keepn\widctlpar\tx720\outlinelevel0\adjustright \b\f16\fs36\kerning28\cgrid {\page {\*\bkmkstart _Toc454069774}GENESIS3D PUBLIC LICENSE{\*\bkmkend _Toc454069774}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par }\pard \qc\keepn\widctlpar\tx720\adjustright {Version 1.01
\par }\pard \keepn\widctlpar\tx720\adjustright {
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069775}PREAMBLE{\*\bkmkend _Toc454069775}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par Please read this license carefully before using Genesis3D. By 
\par downloading and using Genesis3D, you are agreeing to be bound by the 
\par terms of this license. If you do not or cannot agree to the terms of this 
\par License, do not download or use Genesis3D.
\par 
\par This license is intended to make the source code of a state-of-the-art 3D 
\par engine available to everyone who wants the opportunity to use and 
\par contribute to a 3D engine.  Genesis3D is a commercial product.  It is not 
\par in the public domain or "freeware" or "shareware".  By making the source 
\par code available we are not giving it away or abandoning our right of 
\par ownership.  By using Genesis3D you agree to be bound by the spirit and 
\par the terms of this license.
\par 
\par This license permits you to use the Genesis3D SDK to create and sell 
\par products.  You may also redistribute the Genesis3D SDK.  You may also 
\par make modifications to the SDK and distribute them too.
\par 
\par If you modify the Genesis3D engine source, excerpt any portion of it, or if 
\par you use a modified version of the engine source, you must make your 
\par source code available for others to use under the same terms that we have 
\par granted you.  This guarantees that modifications to the engine will be 
\par available to everyone and the best modifications can become part of the 
\par official Genesis3D release.  Your source code must be released 
\par concurrent with releasing any executable built with Genesis3D.  If you do 
\par not wish to make your source code available you must obtain a separate 
\par license from Eclipse.
\par 
\par Gtest, the sample game, is specifically excluded from this requirement.  
\par Feel free to modify Gtest and use it in any way that benefits you.
\par 
\par If you use the original unmodified Eclipse-built binaries there is no 
\par requirement for you to make your source code available.
\par 
\par You must display the original unmodified Genesis3D animated logo as 
\par the first logo on startup of your product, demo or application.  You must 
\par also prominently display the Genesis3D logo on any marketing materials, 
\par advertising or packaging of your product.
\par 
\par These terms are good for the community because it makes the source of a 
\par high-end 3D engine available to everyone and it encourages sharing of 
\par improvements.  They are good for Eclipse because some companies will 
\par opt to not share their source and will prefer to pay to license the engine 
\par instead. These kinds of licenses will fund future Genesis3D development 
\par and subsidize the free licenses that many people will enjoy.
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069776}1. DEFINITIONS{\*\bkmkend _Toc454069776}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par 1.1. ``Contributor'' means each entity that creates or contributes to 
\par the creation of Modifications.
\par 
\par 1.2. ``Contributor Version'' means the combination of the Original 
\par Code, prior Modifications used by a Contributor, and the 
\par Modifications made by that particular Contributor.
\par 
\par 1.3. ``Covered Code'' means the Original Code or Modifications or 
\par the combination of the Original Code and Modifications, in each case 
\par including portions thereof, and any Source Code which duplicates, 
\par enhances, modifies or replaces functionality of the Covered Code as 
\par defined in Exhibit B.
\par  
\par 1.4. ``Electronic Distribution Mechanism'' means a mechanism 
\par generally accepted in the software development community for the 
\par electronic transfer of data.
\par 
\par 1.5. ``Eclipse'' means Eclipse Entertainment, L.L.C.
\par 
\par 1.6. ``Executable'' means Covered Code in any form other than 
\par Source Code.
\par 
\par 1.7. ``Larger Work'' means a work which combines Covered Code 
\par or portions thereof with code not governed by the terms of this 
\par License.
\par 
\par 1.8. ``License'' means this document.
\par 
\par 1.9. ``Modifications'' means any addition to or deletion from the 
\par substance or structure of either the Original Code or any previous 
\par Modifications. When Covered Code is released as a series of files, a 
\par Modification is:
\par A. Any addition to or deletion from the contents of a file 
\par containing Original Code or previous Modifications. 
\par B. Any new file that contains any part of the Original Code 
\par or previous Modifications.
\par 
\par 1.10. ``Original Code'' means Source Code of computer software 
\par code which is described in the Source Code notice required by 
\par Exhibit A as Original Code, and which, at the time of its release 
\par under this License is not already Covered Code governed by this 
\par License.
\par 
\par 1.11. ``Source Code'' means the preferred form of the Covered Code 
\par for making modifications to it, including all modules it contains, plus 
\par any associated interface definition files, scripts used to control 
\par compilation and installation of an Executable, or a list of source code 
\par differential comparisons against either the Original Code or another 
\par well known, available Covered Code of the Contributor's choice. The 
\par Source Code can be in a compressed or archival form, provided the 
\par appropriate decompression or de-archiving software is widely 
\par available for no charge.
\par  
\par 1.12. ``You'' means an individual or a legal entity exercising rights 
\par under, and complying with all of the terms of, this License or a future 
\par version of this License issued under Section 7.1. For legal entities, 
\par ``You'' includes any entity which controls, is controlled by, or is 
\par under common control with You. For purposes of this definition, 
\par ``control'' means (a) the power, direct or indirect, to cause the 
\par direction or management of such entity, whether by contract or 
\par otherwise, or (b) ownership of fifty percent (50%) or more of the 
\par outstanding shares or beneficial ownership of such entity. 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069777}2. SOURCE CODE LICENSE{\*\bkmkend _Toc454069777}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid { 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069778}2.1. The Eclipse Grant.{\*\bkmkend _Toc454069778} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Eclipse hereby grants You a world-wide, fully paid, royalty-free, non-
\par exclusive license, subject to third party intellectual property claims: 
\par (a) to use, reproduce, modify, display, perform, sublicense and 
\par distribute the Original Code (or portions thereof) with or without 
\par Modifications, or as part of a Larger Work; and 
\par (b) under patents now or hereafter owned or controlled by 
\par Eclipse, to make, have made, use and sell (``Utilize'') the 
\par Original Code (or portions thereof), but solely to the extent that 
\par any such patent is reasonably necessary to enable You to Utilize 
\par the Original Code (or portions thereof) and not to any greater 
\par extent that may be necessary to Utilize further Modifications or 
\par combinations.
\par  
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069779}2.2. Contributor Grant.{\*\bkmkend _Toc454069779} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Each Contributor hereby grants You a world-wide, fully paid, 
\par royalty-free, non-exclusive license, subject to third party intellectual 
\par property claims:
\par (a) to use, reproduce, modify, display, perform, sublicense and 
\par distribute the Modifications created by such Contributor (or 
\par portions thereof) either on an unmodified basis, with other 
\par Modifications, as Covered Code or as part of a Larger Work; and
\par (b) under patents now or hereafter owned or controlled by 
\par Contributor, to Utilize the Contributor Version (or portions 
\par thereof), but solely to the extent that any such patent is 
\par reasonably necessary to enable You to Utilize the Contributor 
\par Version (or portions thereof), and not to any greater extent that 
\par may be necessary to Utilize further Modifications or 
\par combinations.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069780}2.3. Your Grant.{\*\bkmkend _Toc454069780} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {You hereby grant to Eclipse a world-wide, fully paid, royalty-free, 
\par non-exclusive license, subject to third party intellectual property 
\par claims:
\par (a) to use, reproduce, modify, display, perform, sublicense and 
\par distribute the Modifications created by You (or portions thereof) 
\par either on an unmodified basis, with other Modifications, as 
\par Covered Code or as part of a Larger Work; and
\par (b) under patents now or hereafter owned or controlled by You, 
\par to Utilize the Modifications (or portions thereof), but solely to 
\par the extent that any such patent is reasonably necessary to enable 
\par Eclipse to Utilize the Modifications (or portions thereof), and not 
\par to any greater extent that may be necessary to Utilize further 
\par Modifications or combinations.
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069781}3. DISTRIBUTION OBLIGATIONS{\*\bkmkend _Toc454069781}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid { 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069782}3.1. Application of License to You.{\*\bkmkend _Toc454069782}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Modifications which You create or to which You contribute are 
\par governed by the terms of this License, including without limitation 
\par Section 2.2. The Source Code version of Covered Code may be 
\par distributed only under the terms of this License or a future version of 
\par this License released under Section 7.1, and You must include a copy 
\par of this License with every copy of the Source Code You distribute. 
\par You may not offer or impose any terms on any Source Code version 
\par that alters or restricts the applicable version of this License or the 
\par recipients' rights hereunder. However, You may include an additional 
\par document offering the additional rights described in Section 3.6.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069783}3.2. Application of License to Eclipse.{\*\bkmkend _Toc454069783}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {(a) Other Products.
\par Eclipse may include Covered Code in products other than 
\par Genesis3D without such additional products becoming subject to 
\par the terms of this License, and may license such additional 
\par products on different terms from those contained in this License.
\par (b) Other Licenses.
\par Eclipse may license the Source Code including Modifications 
\par incorporated therein, without such additional products becoming 
\par subject to the terms of this License, and may license such 
\par additional products on different terms from those contained in 
\par this License.
\par (c) Other Releases.
\par Eclipse may create new releases of Genesis3D without such 
\par releases becoming subject to the terms of this License. 
\par  
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069784}3.3. Availability of Source Code.{\*\bkmkend _Toc454069784} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Any Modification which You create or to which You contribute must 
\par be made available in Source Code form under the terms of this 
\par License either on the same media as an Executable version or via an 
\par accepted Electronic Distribution Mechanism to anyone to whom you 
\par made an Executable version available; and if made available via 
\par Electronic Distribution Mechanism, must remain available for at least 
\par twelve (12) months after the date it initially became available, or at 
\par least six (6) months after a subsequent version of that particular 
\par Modification has been made available to such recipients. You are 
\par responsible for ensuring that the Source Code version remains 
\par available even if the Electronic Distribution Mechanism is maintained 
\par by a third party.  Furthermore, the Source Code to the Modifications 
\par You create or contribute must be delivered in fully compilable form 
\par using commonly available tools.  If the tools used to compile the 
\par Source Code are not commonly available You must also include the 
\par tools, in Source Code and Executable forms, as part of the 
\par Modifications.  Your Source Code must be delivered unencrypted, 
\par uncloaked, unobscured and in human readable form.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069785}3.4. Description of Modifications.{\*\bkmkend _Toc454069785} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {You must cause all Covered Code to which you contribute to contain 
\par a file documenting the changes You made to create that Covered 
\par Code and the date of any change. You must include a prominent 
\par statement that the Modification is derived, directly or indirectly, from 
\par Original Code provided by Eclipse in (a) the Source Code, and (b) in 
\par any notice in an Executable version or related documentation in 
\par which You describe the origin or ownership of the Covered Code. 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069786}3.5. Intellectual Property Matters{\*\bkmkend _Toc454069786} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {(a) Third Party Claims. 
\par If You have knowledge that a party claims an intellectual 
\par property right in particular functionality or code (or its utilization 
\par under this License), you must include a text file with the source 
\par code distribution titled ``LEGAL'' which describes the claim and 
\par the party making the claim in sufficient detail that a recipient will 
\par know whom to contact. If you obtain such knowledge after You 
\par make Your Modification available as described in Section 3.3, 
\par You shall promptly modify the LEGAL file in all copies You 
\par make available thereafter and shall take other steps (such as 
\par notifying appropriate mailing lists or newsgroups) reasonably 
\par calculated to inform those who received the Covered Code that 
\par new knowledge has been obtained. 
\par (b) Contributor APIs. 
\par If Your Modification is an application programming interface 
\par and You own or control patents which are reasonably necessary 
\par to implement that API, you must also include this information in 
\par the LEGAL file. 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069787}3.6. Required Notices.{\*\bkmkend _Toc454069787} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {You must duplicate the notice in Exhibit A in each file of the Source 
\par Code, and this License in any documentation for the Source Code, 
\par where You describe recipients' rights relating to Covered Code. If 
\par You created one or more Modification(s), You may add your name as 
\par a Contributor to the notice described in Exhibit A. If it is not 
\par possible to put such notice in a particular Source Code file due to its 
\par structure, then you must include such notice in a location (such as a 
\par relevant directory file) where a user would be likely to look for such a 
\par notice. You may choose to offer, and to charge a fee for, warranty, 
\par support, indemnity or liability obligations to one or more recipients 
\par of Covered Code. However, You may do so only on Your own 
\par behalf, and not on behalf of Eclipse or any Contributor. You must 
\par make it absolutely clear that any such warranty, support, indemnity or 
\par liability obligation is offered by You alone, and You hereby agree to 
\par indemnify Eclipse and every Contributor for any liability incurred by 
\par Eclipse or such Contributor as a result of warranty, support, 
\par indemnity or liability terms You offer.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069788}3.7. Distribution of Executable Versions.{\*\bkmkend _Toc454069788} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {You may distribute Covered Code in Executable form only if the 
\par requirements of Section 3.1-3.6 have been met for that Covered 
\par Code, and if You include a notice stating that the Source Code 
\par version of the Covered Code is available under the terms of this 
\par License, including a description of how and where You have fulfilled 
\par the obligations of Section 3.3. The notice must be conspicuously 
\par included in any notice in an Executable version, related 
\par documentation or collateral in which You describe recipients' rights 
\par relating to the Covered Code. You may distribute the Executable 
\par version of Covered Code under a license of Your choice, which may 
\par contain terms different from this License, provided that You are in 
\par compliance with the terms of this License and that the license for the 
\par Executable version does not attempt to limit or alter the recipient's 
\par rights in the Source Code version from the rights set forth in this 
\par License. If You distribute the Executable version under a different 
\par license You must make it absolutely clear that any terms which differ 
\par from this License are offered by You alone, not by Eclipse or any 
\par Contributor. You hereby agree to indemnify Eclipse and every 
\par Contributor for any liability incurred by Eclipse or such Contributor 
\par as a result of any such terms You offer. 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069789}3.8. Larger Works.{\*\bkmkend _Toc454069789} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {You may create a Larger Work by combining Covered Code with 
\par other code not governed by the terms of this License and distribute 
\par the Larger Work as a single product. In such a case, You must make 
\par sure the requirements of this License are fulfilled for the Covered 
\par Code. 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069790}4. RESTRICTIONS{\*\bkmkend _Toc454069790}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069791}4.1. You agree to:{\*\bkmkend _Toc454069791}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {(a) display the original, unmodified Genesis3D animated logo as the 
\par first logo on startup of your product, demo or application;
\par (b) prominently display the Genesis3D logo on any marketing 
\par materials, advertising or packaging of your product, demo or 
\par application;
\par (c) distribute the Covered Code to third parties who agree to be 
\par bound by these terms and conditions;
\par (d) make reasonable efforts to discontinue distribution of the Covered 
\par Code upon Eclipse's release of an update, upgrade or new version of 
\par the Covered Code and to make reasonable efforts to distribute such 
\par updates, upgrades or new versions to your customers who have 
\par received the Covered Code herein;
\par (e) be solely responsible for any update or support obligation or other 
\par liability which may arise from your distribution of the Covered Code.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069792}4.2. You may not:{\*\bkmkend _Toc454069792}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {(a) remove, alter, obscure, or modify in any way the appearance or 
\par operation of the Genesis3D logo;
\par (b) copy the Covered Code, in whole or in part, except as provided in 
\par this License;
\par (c) make any statement that your product is "certified," or that its 
\par performance is guaranteed, by Eclipse.
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069793}5. INABILITY TO COMPLY DUE TO STATUTE OR{\*\bkmkend _Toc454069793} 
\par {\*\bkmkstart _Toc454069794}REGULATION{\*\bkmkend _Toc454069794}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par If it is impossible for You to comply with any of the terms of this 
\par License with respect to some or all of the Covered Code due to 
\par statute or regulation then You must: (a) comply with the terms of this 
\par License to the maximum extent possible; and (b) describe the 
\par limitations and the code they affect. Such description must be 
\par included in the LEGAL file described in Section 3.5 and must be 
\par included with all distributions of the Source Code. Except to the 
\par extent prohibited by statute or regulation, such description must be 
\par sufficiently detailed for a recipient of ordinary skill to be able to 
\par understand it. 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069795}6. APPLICATION OF THIS LICENSE{\*\bkmkend _Toc454069795}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par This License applies to code to which Eclipse has attached the notice 
\par in Exhibit A, and to related Covered Code.
\par  
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069796}7. VERSIONS OF THE LICENSE{\*\bkmkend _Toc454069796}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069797}7.1. New Versions.{\*\bkmkend _Toc454069797} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Eclipse may publish revised and/or new versions of the License from 
\par time to time. Each version will be given a distinguishing version 
\par number.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069798}7.2. Effect of New Versions.{\*\bkmkend _Toc454069798} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Once Covered Code has been published under a particular version of 
\par the License, You may always continue to use it under the terms of 
\par that version. You may also choose to use such Covered Code under 
\par the terms of any subsequent version of the License published by 
\par Eclipse. No one other than Eclipse has the right to modify the terms 
\par applicable to Covered Code created under this License. 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069799}8. DISCLAIMER OF WARRANTY{\*\bkmkend _Toc454069799}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par COVERED CODE IS PROVIDED UNDER THIS LICENSE ON 
\par AN ``AS IS'' BASIS, WITHOUT WARRANTY OF ANY KIND, 
\par EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT 
\par LIMITATION, WARRANTIES THAT THE COVERED CODE IS 
\par FREE OF DEFECTS, MERCHANTABLE, FIT FOR A 
\par PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE 
\par RISK AS TO THE QUALITY AND PERFORMANCE OF THE 
\par COVERED CODE IS WITH YOU. SHOULD ANY COVERED 
\par CODE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT 
\par ECLIPSE OR ANY OTHER CONTRIBUTOR) ASSUME THE 
\par COST OF ANY NECESSARY SERVICING, REPAIR OR 
\par CORRECTION. THIS DISCLAIMER OF WARRANTY 
\par CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO 
\par USE OF ANY COVERED CODE IS AUTHORIZED HEREUNDER 
\par EXCEPT UNDER THIS DISCLAIMER. 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069800}9. TERMINATION{\*\bkmkend _Toc454069800}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par This License and the rights granted hereunder will terminate 
\par automatically if You fail to comply with terms herein and fail to cure 
\par such breach within 30 days of becoming aware of the breach. All 
\par sublicenses to the Covered Code which are properly granted shall 
\par survive any termination of this License. Provisions which, by their 
\par nature, must remain in effect beyond the termination of this License 
\par shall survive.
\par  
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069801}10. LIMITATION OF LIABILITY{\*\bkmkend _Toc454069801}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL 
\par THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), 
\par CONTRACT, OR OTHERWISE, SHALL ECLIPSE, ANY OTHER 
\par CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED 
\par CODE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE 
\par LIABLE TO YOU OR ANY OTHER PERSON FOR ANY 
\par INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL 
\par DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT 
\par LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK 
\par STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR 
\par ANY AND ALL OTHER COMMERCIAL DAMAGES OR 
\par LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN 
\par INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS 
\par LIMITATION OF LIABILITY SHALL NOT APPLY TO 
\par LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING 
\par FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT 
\par APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME 
\par JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR 
\par LIMITATION OF INCIDENTAL OR CONSEQUENTIAL 
\par DAMAGES, SO THAT EXCLUSION AND LIMITATION MAY 
\par NOT APPLY TO YOU.
\par 
\par INDEMNIFICATION:  YOU SHALL INDEMNIFY, HOLD 
\par HARMLESS, AND DEFEND ECLIPSE AND IT SUPPLIERS 
\par FROM AND AGAINST ANY CLAIMS OR LAWSUITS, 
\par INCLUDING ATTORNEY'S FEES, THAT ARISE OR RESULT 
\par FROM YOUR USE OR DISTRIBUTION OF ANY PRODUCT 
\par INCORPORATING THE COVERED CODE IN WHOLE OR IN 
\par PART.
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069802}11. U.S. GOVERNMENT END USERS{\*\bkmkend _Toc454069802}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par The Covered Code is a ``commercial item,'' as that term is defined in 
\par 48 C.F.R. 2.101 (Oct. 1995), consisting of ``commercial computer 
\par software'' and ``commercial computer software documentation,'' as 
\par such terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 
\par 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 
\par (June 1995), all U.S. Government End Users acquire Covered Code 
\par with only those rights set forth herein.
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069803}12. MISCELLANEOUS{\*\bkmkend _Toc454069803}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par This License represents the complete agreement concerning subject 
\par matter hereof. If any provision of this License is held to be 
\par unenforceable, such provision shall be reformed only to the extent 
\par necessary to make it enforceable.  This License is governed by the 
\par laws of the State of Texas and the United States, including patent and 
\par copyright laws.  Any claim arising out of this License will be brought 
\par in Travis County, Texas.
\par 
\par The application of the United Nations Convention on Contracts for 
\par the International Sale of Goods is expressly excluded. Any law or 
\par regulation which provides that the language of a contract shall be 
\par construed against the drafter shall not apply to this License. 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069804}13. RESPONSIBILITY FOR CLAIMS{\*\bkmkend _Toc454069804}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par Except in cases where another Contributor has failed to comply with 
\par Section 3.5, You are responsible for damages arising, directly or 
\par indirectly, out of Your utilization of rights under this License, based 
\par on the number of copies of Covered Code you made available, the 
\par revenues you received from utilizing such rights, and other relevant 
\par factors. You agree to work with affected parties to distribute 
\par responsibility on an equitable basis.
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069805}EXHIBIT A.{\*\bkmkend _Toc454069805} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par ``The contents of this file are subject to the Genesis3D Public 
\par License Version 1.01 (the "License"); you may not use this file 
\par except in compliance with the License. You may obtain a copy of the 
\par License at http://www.genesis3d.com
\par Software distributed under the License is distributed on an "AS IS" 
\par basis, WITHOUT WARRANTY OF ANY KIND, either express or 
\par implied. See the License for the specific language governing rights 
\par and limitations under the License. 
\par The Original Code is Genesis3D, released March 25, 1999. 
\par Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights 
\par Reserved. 
\par Contributor(s): ______________________________________.'' 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069806}EXHIBIT B.{\*\bkmkend _Toc454069806} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par Functionality of the Covered Code includes:
\par 
\par (a) Representation and rendering of 2D and 3D images, objects, 
\par characters and scenes;
\par (b) Collision detection;
\par (c) Artificial Intelligence (AI), including path finding, planning and 
\par movement;
\par (d) Network and internet communications;
\par (e) Data compression;
\par (f) Streaming data over a network, modem, or the internet;
\par (g) Client/server architecture;
\par (h) Physics simulation;
\par (i) Creation and editing of world geometry;
\par (j) Character animation, including motion interpolation, motion 
\par planning, collision, and inverse kinematics.
\par 
\par \page 
\par }\pard\plain \s1\qc\sb240\sa60\keepn\widctlpar\tx720\outlinelevel0\adjustright \b\f16\fs36\kerning28\cgrid {{\*\bkmkstart _Toc454069807}Game File Structure Layout{\*\bkmkend _Toc446558895}{\*\bkmkend _Toc454069807}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {\i 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\b0\f1 {\*\bkmkstart _Toc446558897}{\*\bkmkstart _Toc454069808}Directory of C:\\Genesis3D*{\*\bkmkend _Toc454069808} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Below is the basic subdirectory layout for the Genesis3D system as delivered by Eclipse.  The system was unpacked taking all the standard defaults.  As a result there are several
 subdirectories which are repeated in the Tools section.  This duplication was chosen by Eclipse deliberately in order to shorten compile times and create benchmark milestones more easily.
\par 
\par Each subdirectory is indented in the Table of Contents to give you
 an idea of its position in the tree.  The full path is shown to give you an idea where it is and a brief explanation of the contents of each subdirectory is also given.  Not all subdirectories have source code files, many contain data, object code or exe
cutables.  
\par }{\i 
\par * Subdirectories that do }{\i\ul not}{\i  have header or code files are marked with an asterisk.}{  
\par 
\par This first directory contains the executable and help files that make up the example game Gtest and the Genesis3D tools (ActBuild, ActView, Astudio, Gedit, a
nd Tpack.  There are also two files, keyexp.dle and nfoexp.dle, which can be plugged into 3D Studio Max to export the .ACT file models used by the Genesis3D engine.
\par 
\par }{\b\f2\fs20\cgrid0 Total Files Listed:
\par             1616 File(s)     73,636,424 bytes
\par }{\f2\fs16\cgrid0 
\par Directory of C:\\Genesis3D
\par 
\par 05/17/99  06:38p        <DIR>          .
\par 05/17/99  06:38p        <DIR>          ..
\par 03/25/99  01:52p               495,616 ActBuild.exe
\par 05/17/99  06:32p        <DIR>          Actors
\par 09/16/98  11:25a                   663 ActView.cnt
\par 05/11/99  03:01p               548,864 ActView.exe
\par 09/16/98  03:34p                16,112 ActView.hlp
\par 03/25/99  01:55p               667,648 AStudio.exe
\par 05/17/99  06:32p        <DIR>          bmp
\par 05/14/99  09:06p               110,592 D3DDrv.dll
\par 05/11/99  04:58p                    22 demo.ini
\par 05/14/99  10:23p             1,150,475 demo2.dem
\par 05/14/99  11:07p             2,047,123 demo3.dem
\par 05/17/99  06:32p        <DIR>          doc
\par 07/10/98  09:52a                15,252 g3dlogo.gif
\par 05/11/99  01:08a               274,432 GBSPLib.dll
\par 07/03/98  01:28p                 1,292 gedit.cnt
\par 05/12/99  03:22p               901,120 gedit.exe
\par 09/02/98  07:03p                36,528 GEDIT.HLP
\par 01/20/99  10:33p                 1,481 gedit.ini
\par 05/14/99  09:09p               659,456 Genesis.dll
\par 05/17/99  06:32p        <DIR>          Genesis3D
\par 05/14/99  09:05p                73,728 GlideDrv.dll
\par 05/17/99  06:38p                 1,120 GMenu.Dat
\par 05/15/99  12:21a               786,432 GTest.exe
\par 05/17/99  06:32p        <DIR>          include
\par 03/24/99  10:22a                77,824 keyexp.dle
\par 05/17/99  06:32p        <DIR>          levels
\par 05/17/99  06:32p        <DIR>          lib
\par 07/10/98  09:59a                   547 local.html
\par 03/24/99  10:20a                81,920 nfoexp.dle
\par 05/17/99  06:33p        <DIR>          OpenSource
\par 05/10/99  04:59p                   175 readme.txt
\par 05/17/99  06:34p        <DIR>          Redist
\par 05/14/99  09:05p               237,568 SoftDrv.dll
\par 05/14/99  09:07p               167,936 softdrv2.dll
\par 05/17/99  06:34p        <DIR>          src
\par 05/17/99  06:34p        <DIR>          Tools
\par 03/25/99  01:56p               126,976 tpack.exe
\par 05/17/99  06:34p        <DIR>          wav
\par               40 File(s)      8,480,902 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069809}Directory of C:\\Genesis3D\\Actors*{\*\bkmkend _Toc454069809}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Actors subdirectory is a repos
itory for ACT files, Genesis3D 's unique file format for animated models.  These .ACT files are used in the example game GTest, and are not essential to the engine itself.
\par }{\fs20 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\Actors
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 11/11/98  12:09p                23,520 armor.act
\par 11/15/98  07:46p               313,194 dema.act
\par 11/10/98  03:21p                41,824 glaunch.act
\par 11/17/98  01:17a                24,036 grenade.act
\par 11/11/98  12:09p               134,736 medkit.act
\par 11/10/98  03:21p                74,940 rlaunch.act
\par 11/16/98  04:09p                24,452 rocket.act
\par 11/17/98  01:17a                 4,596 sammo.act
\par 11/10/98  03:22p                52,296 shredder.act
\par 11/15/98  08:30p               470,799 turret.act
\par               12 File(s)      1,164,393 bytes
\par }{
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069810}Directory of C:\\Genesis\\Bmp*{\*\bkmkend _Toc454069810}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Bmp subdirectory contains several additional subdirectories that hold bitmap graphic files used in the GTest example game.  The graphics are only require
d for the sample game and are not needed elsewhere.
\par }{\fs20 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/09/98  10:10a                 2,167 BOLT.bmp
\par 05/17/99  06:32p        <DIR>          Console
\par 04/07/99  06:16p                 5,174 CORONA.bmp
\par 04/06/99  04:31p                12,344 CORONA_A.bmp
\par 12/09/98  10:10a                 1,367 CURSOR.bmp
\par 05/17/99  06:32p        <DIR>          Explode
\par 05/17/99  06:32p        <DIR>          Fx
\par 05/17/99  06:32p        <DIR>          Menu
\par 05/17/99  06:32p        <DIR>          SBar
\par 12/09/98  10:10a                40,913 SFONT1.bmp
\par 12/09/98  10:10a                40,913 SFONT2.bmp
\par 12/09/98  10:10a                 5,303 SPOT.bmp
\par 05/17/99  06:32p        <DIR>          Weapon
\par               15 File(s)        108,181 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {\page {\*\bkmkstart _Toc454069811}Directory of C:\\Genesis\\Bmp\\Console*{\*\bkmkend _Toc454069811}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Console subdirectory contains a two subdirectories which hold the bmp files for the console display at two different resolutions for the GTest applicat
ion.  If you create a game and console in a different resolution to expand Gtest, you should follow the pattern and place the textures here in a new subdirectory.  The console subdirectories are not essential to the engine itself.
\par }{\f2\fs20\cgrid0 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Console
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/17/99  06:32p        <DIR>          320x240
\par 05/17/99  06:32p        <DIR>          640x480
\par                4 File(s)              0 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069812}Directory of C:\\Genesis\\Bmp\\Console\\320x240*{\*\bkmkend _Toc454069812}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {There are two bmp graphic files here.  The first contains the font table used for the console, the second is the background texture.  It is created for a screen size of 320x240.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Console\\320x240
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/10/98  12:31p                17,719 CONSOLE.BMP
\par 12/10/98  12:31p                 5,565 FONT.BMP
\par                4 File(s)         23,284 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069813}Directory of C:\\Genesis\\Bmp\\Console\\640x480*{\*\bkmkend _Toc454069813}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the same graphics files as those above but they are intended for a screen resolution of 640x480.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Console\\640x480
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/10/98  12:20p                17,719 CONSOLE.BMP
\par 12/10/98  12:20p                26,703 FONT.BMP
\par                4 File(s)         44,422 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069814}Directory of C:\\Genesis3D\\bmp\\Explode*{\*\bkmkend _Toc454069814} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a series of bmp files that when played rapidly create a colored graphical explosion and a grey smoky background.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Explode
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/10/98  07:15p                 2,167 1EXP01.BMP
\par 12/10/98  07:15p                 2,167 1EXP02.BMP
\par 12/10/98  07:15p                 2,167 1EXP03.BMP
\par 12/10/98  07:15p                 2,167 1EXP04.BMP
\par 12/10/98  07:15p                 2,167 1EXP05.BMP
\par 12/10/98  07:15p                 2,167 1EXP06.BMP
\par 12/10/98  07:15p                 2,167 A_1EXP01.BMP
\par 12/10/98  07:15p                 2,167 A_1EXP02.BMP
\par 12/10/98  07:15p                 2,167 A_1EXP03.BMP
\par 12/10/98  07:15p                 2,167 A_1EXP04.BMP
\par 12/10/98  07:15p                 2,167 A_1EXP05.BMP
\par 12/10/98  07:15p                 2,167 A_1EXP06.BMP
\par               14 File(s)         26,004 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069815}Directory of C:\\Genesis3D\\bmp\\Fx*{\*\bkmkend _Toc454069815} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains three special effects.  The first is a black and white explosion with a gradual smoke dissipation. 
 The second is a particle explosion.  The third is a colored explosion that expands outward and turns smoky and dissipates.  The texture size for these shots is larger than for those in the previous subdirectory.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Fx
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/10/98  07:13p                 5,303 A_SMK01.BMP
\par 12/10/98  07:13p                 5,303 A_SMK02.BMP
\par 12/10/98  07:13p                 5,303 A_SMK03.BMP
\par 12/10/98  07:13p                 5,303 A_SMK04.BMP
\par 12/10/98  07:13p                 5,303 a_smk05.bmp
\par 12/10/98  07:13p                 5,303 A_SMK06.BMP
\par 12/10/98  07:13p                 5,303 A_SMK07.BMP
\par 12/10/98  07:13p                 5,303 A_SMK08.BMP
\par 12/10/98  07:13p                 5,303 A_SMK09.BMP
\par 12/10/98  07:13p                 5,303 A_SMK10.BMP
\par 12/10/98  07:13p                 5,303 PARTI1.BMP
\par 12/10/98  07:13p                 5,303 PARTI2.BMP
\par 12/10/98  07:13p                 5,303 PARTI3.BMP
\par 12/10/98  07:13p                 5,303 PARTI4.BMP
\par 12/10/98  07:13p                 5,303 PARTI5.BMP
\par 12/10/98  07:13p                 5,303 PARTI6.BMP
\par 12/10/98  07:13p                 5,303 PARTI7.BMP
\par 12/10/98  07:13p                 5,303 PARTI8.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_01.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_02.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_03.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_04.BMP
\par 12/10/98  07:13p                 5,303 smoke_05.bmp
\par 12/10/98  07:13p                 5,303 SMOKE_06.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_07.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_08.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_09.BMP
\par 12/10/98  07:13p                 5,303 SMOKE_10.BMP
\par               30 File(s)        148,484 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069816}Directory of C:\\Genesis3D\\bmp\\Menu*{\*\bkmkend _Toc454069816} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {There are four graphics in this subdirectory two are the screen credits for the Eclipse development team. The other two are the graphics for a slider bar.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Menu
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/09/98  10:12a                78,439 CREDITS0.BMP
\par 12/09/98  10:12a               309,399 CREDITS1.BMP
\par 12/09/98  10:12a                 1,333 SLIDERB.BMP
\par 12/09/98  10:12a                 3,013 SLIDERR.BMP
\par                6 File(s)        392,184 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {\page {\*\bkmkstart _Toc454069817}Directory of C:\\Genesis3D\\bmp\\Sbar*{\*\bkmkend _Toc454069817} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {At the bottom of the demonstration game is a status bar which indicates what weapons you have, and which one is your current selection. The two subdire
ctories below contain the graphics for this bar and are done in two resolutions depending on which screen size you are using.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\SBar
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/17/99  06:32p        <DIR>          320x240
\par 05/17/99  06:32p        <DIR>          640x480
\par                4 File(s)              0 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069818}Directory of C:\\Genesis3D\\bmp\\SBar\\320x240*{\*\bkmkend _Toc454069818}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This is the 320x240 status bar.  It contains three screen shots for each of the demonstration weapons.  One for selected, one for in your possession, and one for not found yet.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\SBar\\320x240
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/10/98  12:32p                 2,845 SBAR0-0.BMP
\par 12/10/98  12:32p                 2,845 SBAR0-1.BMP
\par 12/10/98  12:32p                 2,845 SBAR0-2.BMP
\par 12/10/98  12:32p                 2,959 SBAR1-0.BMP
\par 12/10/98  12:32p                 2,845 SBAR1-1.BMP
\par 12/10/98  12:32p                 2,845 SBAR1-2.BMP
\par 12/10/98  12:32p                 2,721 SBAR2-0.BMP
\par 12/10/98  12:32p                 2,721 SBAR2-1.BMP
\par 12/10/98  12:32p                 2,721 SBAR2-2.BMP
\par 12/10/98  12:32p                 2,721 SBAR3-0.BMP
\par 12/10/98  12:32p                 2,721 SBAR3-1.BMP
\par 12/10/98  12:32p                 2,721 SBAR3-2.BMP
\par 12/10/98  12:32p                 2,721 SBAR4-0.BMP
\par 12/10/98  12:32p                 2,845 SBAR4-1.BMP
\par 12/10/98  12:32p                 2,721 SBAR4-2.BMP
\par 12/10/98  12:33p                 2,721 SBAR5-0.BMP
\par 12/10/98  12:33p                 2,721 SBAR5-1.BMP
\par 12/10/98  12:33p                 2,721 SBAR5-2.BMP
\par               20 File(s)         49,960 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069819}Directory of C:\\Genesis3D\\bmp\\SBar\\640x480*{\*\bkmkend _Toc454069819}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This is the 640x480 status bar.  It contains four
 screen shots for each of the demonstration weapons.  It has the same three as the subdirectory above and a fourth one in red, ostensibly to indicate that you have the weapon selected but it is out of ammunition or charge.  While it is not used in the dem
onstration game there is an excellent tutorial in the Genesis Dojo which explains how to add this feature to your game.  
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\SBar\\640x480
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/09/98  04:21p                 7,971 SBAR0-0.BMP
\par 12/09/98  04:21p                 7,971 SBAR0-1.BMP
\par 12/09/98  04:21p                 7,971 SBAR0-2.BMP
\par 12/09/98  04:21p                 7,971 SBAR0-3.BMP
\par 12/09/98  04:21p                 7,971 SBAR1-0.BMP
\par 12/09/98  04:21p                 7,971 SBAR1-1.BMP
\par 12/09/98  04:21p                 7,971 SBAR1-2.BMP
\par 12/09/98  04:21p                 7,971 SBAR1-3.BMP
\par 12/09/98  04:21p                 7,483 SBAR2-0.BMP
\par 12/09/98  04:21p                 7,483 SBAR2-1.BMP
\par 12/09/98  04:21p                 7,483 SBAR2-2.BMP
\par 12/09/98  04:21p                 7,483 SBAR2-3.BMP
\par 12/09/98  04:21p                 7,483 SBAR3-0.BMP
\par 12/09/98  04:21p                 7,483 SBAR3-1.BMP
\par 12/09/98  04:21p                 7,483 SBAR3-2.BMP
\par 12/09/98  04:21p                 7,483 SBAR3-3.BMP
\par 12/09/98  04:21p                 7,483 SBAR4-0.BMP
\par 12/09/98  04:21p                 7,483 SBAR4-1.BMP
\par 12/09/98  04:21p                 7,483 SBAR4-2.BMP
\par 12/09/98  04:21p                 7,483 SBAR4-3.BMP
\par 12/09/98  04:21p                 7,483 SBAR5-0.BMP
\par 12/09/98  04:21p                 7,483 SBAR5-1.BMP
\par 12/09/98  04:21p                 7,483 SBAR5-2.BMP
\par 12/09/98  04:21p                 7,483 SBAR5-3.BMP
\par               26 File(s)        183,496 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069820}Directory of C:\\Genesis3D\\bmp\\Weapon*{\*\bkmkend _Toc454069820} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {There are two bmp files in this subdirectory, one black and white the other colored, which are used for the flash that occurs when a weapon or item materializes in the game.
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\bmp\\Weapon
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/10/98  07:18p                 2,167 A_SPOT.BMP
\par 12/10/98  07:17p                 2,167 SPOT_RED.BMP
\par                4 File(s)          4,334 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069821}Directory of C:\\Genesis3D\\doc*{\*\bkmkend _Toc454069821} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirect
ory and the three below it contain documentation provided by Eclipse on the Demonstration Game, Genesis3D Tools, and the Genesis3D API in HTML format.  The outer layer contains the starting index.html and references the subdirectories below for additional
 material.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\doc
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 12/16/98  11:08a                   441 3DSMaxGuide.htm
\par 05/17/99  06:32p        <DIR>          APIReference
\par 12/16/98  05:47p                   385 APIReference.htm
\par 12/16/98  05:47p                   357 APISummary.htm
\par 11/15/98  11:53p                34,816 bot.doc
\par 04/30/99  12:32p                 4,121 Drivers.htm
\par 05/17/99  06:32p        <DIR>          editor
\par 02/25/99  11:55p                 5,949 EngineAPIs.htm
\par 12/23/98  01:41p                   326 Features.htm
\par 05/17/99  06:32p        <DIR>          Images
\par 05/10/99  04:15p                   437 index.html
\par 04/30/99  12:34p                 2,133 Introduction.htm
\par 04/30/99  12:36p                13,027 Manifest.htm
\par 12/17/98  05:17p                   287 ReferenceBack.htm
\par 04/29/99  01:05p                24,163 ReferenceIndex.htm
\par 05/10/99  04:13p                 3,254 ReleaseNotes.htm
\par 12/17/98  05:16p                   287 SummaryBack.htm
\par 04/29/99  03:08p                 5,212 SummaryIndex.htm
\par 05/11/99  05:46p                 3,387 toc.htm
\par 04/30/99  11:39a                14,356 Tools.htm
\par 05/10/99  04:13p                   295 TopHeader.htm
\par               23 File(s)        113,233 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069822}Directory of C:\\Genesis3D\\doc\\APIReference*{\*\bkmkend _Toc454069822}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
The API reference is placed here, kept in a separate subdirectory broken down into twelve areas.  Within each area the critical function calls are explained, along with the parameters which are necessary to use and what
 is returned by each call.  There is a brief summary of the section and an overview of purpose for the section at the beginning.  The individual function calls are also referenced in the index allowing the user to go directly to any function call referenc
ed.  At the time of this writing, this is still very much a work in progress, but all of it's major content was incorporated into the functional cross reference section of Volume 3 of this series.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\doc\\APIReference
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 02/26/99  10:40a                 9,520 Camera.htm
\par 01/10/99  08:59p                21,679 Engine.htm
\par 12/18/98  10:23a                 3,961 Entity.htm
\par 12/23/98  12:04p                52,120 Motion.htm
\par 12/21/98  09:33a                25,069 Path.htm
\par 12/17/98  08:54a                24,116 Quatern.htm
\par 02/26/99  12:13a                 3,535 Ram.htm
\par 12/16/98  01:37p                 1,803 Sample.htm
\par 12/16/98  05:47p                14,068 Vec3d.htm
\par 04/29/99  12:03p                44,432 VFile.htm
\par 12/21/98  10:16a                22,287 World.htm
\par 12/16/98  05:47p                26,811 XForm3d.htm
\par               14 File(s)        249,401 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069823}Directory of C:\\Genesis3D\\doc\\editor*{\*\bkmkend _Toc454069823} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The GTest editor documentation is in this subdirectory. It explains how to use the Editor, its functions and capabilities.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\doc\\editor
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 07/03/98  02:13p                   180 cnt0.gif
\par 07/03/98  02:13p                   165 cnt1.gif
\par 07/03/98  02:13p                   254 contents.gif
\par 09/03/98  09:45a                 4,077 defaultgedit.html
\par 07/03/98  02:13p                    60 gedit00090000.gif
\par 09/03/98  09:45a                   906 geditAuto_rebuild.html
\par 09/03/98  09:45a                 2,000 geditBasic_Operation.html
\par 09/03/98  09:45a                 2,044 geditBrushes.html
\par 09/03/98  09:45a                 1,520 geditBrush_and_Face_Modes.html
\par 09/03/98  09:45a                 5,055 geditBrush_Attributes_Dialog.html
\par 09/03/98  09:45a                 1,027 geditBSP_Settings.html
\par 09/03/98  09:45a                 3,042 geditCamera_Mode.html
\par 09/03/98  09:45a                 1,709 geditCompiling_and_Viewing_Your_Level.html
\par 09/03/98  09:45a                   861 geditConsole.html
\par 09/03/98  09:45a                 1,226 geditCut_Brushes_and_Brush_Order.html
\par 09/03/98  09:45a                 1,910 geditEntities.html
\par 09/03/98  09:45a                 1,516 geditEntity_Editor.html
\par 09/03/98  09:45a                 1,402 geditEntity_Visibility_Dialog.html
\par 09/03/98  09:45a                 1,259 geditFaces.html
\par 09/03/98  09:45a                 3,882 geditFace_Attributes_Dialog.html
\par 09/03/98  09:45a                 2,303 geditGeneral_Compile_Options.html
\par 09/03/98  09:45a                 2,908 geditGroups.html
\par 09/03/98  09:45a                 6,098 geditindex.html
\par 09/03/98  09:45a                 2,657 geditLight_Settings.html
\par 09/03/98  09:45a                 3,124 geditModels.html
\par 09/03/98  09:45a                 2,245 geditOverview.html
\par 09/03/98  09:45a                 1,902 geditQuick_Compile.html
\par 09/03/98  09:45a                 3,463 geditSelect_Mode.html
\par 09/03/98  09:45a                 4,779 geditShortcut_Keys.html
\par 09/03/98  09:45a                 1,415 geditSky.html
\par 09/03/98  09:45a                 2,732 geditTemplate.html
\par 09/03/98  09:45a                 2,004 geditTemplate_Mode.html
\par 09/03/98  09:45a                   911 geditTextures.html
\par 09/03/98  09:45a                   982 geditThe_Camera_Entity.html
\par 09/03/98  09:45a                 1,045 geditThe_Grid.html
\par 09/03/98  09:45a                 3,271 geditThe_Initialization_File__GEDITIN.html
\par 09/03/98  09:45a                   756 geditThe_Option_Pages.html
\par 09/03/98  09:45a                 1,357 geditThe_Views.html
\par 09/03/98  09:45a                   274 gedituntitled.html
\par 09/03/98  09:45a                 8,509 geditUser_Defined_Entity_Header_Files.html
\par 09/03/98  09:45a                 1,022 geditUser_Interface_Layout.html
\par 09/03/98  09:45a                 1,105 geditVisibility_Settings.html
\par 07/03/98  02:13p                   237 index.gif
\par 07/03/98  02:13p                   162 index_a.gif
\par 07/03/98  02:13p                   162 index_b.gif
\par 07/03/98  02:13p                   163 index_c.gif
\par 07/03/98  02:13p                   163 index_d.gif
\par 07/03/98  02:13p                   159 index_e.gif
\par 07/03/98  02:13p                   159 index_f.gif
\par 07/03/98  02:13p                   165 index_g.gif
\par 07/03/98  02:13p                   161 index_h.gif
\par 07/03/98  02:13p                   162 index_i.gif
\par 07/03/98  02:13p                   162 index_j.gif
\par 07/03/98  02:13p                   162 index_k.gif
\par 07/03/98  02:13p                   160 index_l.gif
\par 07/03/98  02:13p                   162 index_m.gif
\par 07/03/98  02:13p                   163 index_n.gif
\par 07/03/98  02:13p                   162 index_o.gif
\par 07/03/98  02:13p                   161 index_p.gif
\par 07/03/98  02:13p                   164 index_q.gif
\par 07/03/98  02:13p                   161 index_r.gif
\par 07/03/98  02:13p                   164 index_s.gif
\par 07/03/98  02:13p                   160 index_t.gif
\par 07/03/98  02:13p                   163 index_u.gif
\par 07/03/98  02:13p                   162 index_v.gif
\par 07/03/98  02:13p                   163 index_w.gif
\par 07/03/98  02:13p                   164 index_x.gif
\par 07/03/98  02:13p                   161 index_y.gif
\par 07/03/98  02:13p                   161 index_z.gif
\par 09/03/98  09:45a                   145 logfile.html
\par 07/03/98  02:13p                   188 next0.gif
\par 07/03/98  02:13p                   190 next1.gif
\par 07/03/98  02:13p                   186 prev0.gif
\par 07/03/98  02:13p                   189 prev1.gif
\par               76 File(s)         94,303 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069824}Directory of C:\\Genesis3D\\doc\\editor*{\*\bkmkend _Toc454069824}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains only a 
single screen shot for the TPack utility and several screenshots of the Astudio interface.  They are referenced in the doc subdirectory in the tools description which is not yet complete.  
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\doc\\Images
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 04/30/99  10:06a                 4,862 ASBody.GIF
\par 04/30/99  10:13a                 6,286 ASExtraMaterials.GIF
\par 04/30/99  10:28a                 6,714 ASMotions.GIF
\par 04/30/99  11:11a                 5,596 ASPaths.GIF
\par 04/30/99  10:30a                 5,235 ASSettings.GIF
\par 04/30/99  10:01a                 3,855 ASTarget.GIF
\par 04/30/99  11:39a                 4,460 tpack.GIF
\par                9 File(s)         37,008 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069825}Directory of C:\\Genesis3D\\Genesis3D*{\*\bkmkend _Toc454069825}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the uninstall file used to remove the Genesis3D installation from your computer.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\Genesis3D
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/17/99  06:35p                85,209 DeIsL1.isu
\par                3 File(s)         85,209 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069826}Directory of C:\\Genesis3D\\include{\*\bkmkend _Toc454069826} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the header files for the Genesis3D API.  It is the core set of functions that persons who wish to develop for Genesis3D need to u
se if they are not planning on modifying the sources for the engine.  These include files, along with the lib subdirectory below are all the necessary files for use of the Genesis3D graphics engine.  For those who either plan to pay the licensing fee or r
elease their own sources the OpenSource subdirectories will be necessary.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\include
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/12/99  02:19p                23,801 actor.h
\par 05/03/99  03:55p                 3,332 BASETYPE.H
\par 05/03/99  04:06p                23,446 bitmap.h
\par 04/26/99  10:53a                 5,570 body.h
\par 04/27/99  11:53p                11,163 Errorlog.h
\par 04/26/99  10:53a                 4,577 ExtBox.h
\par 04/26/99  10:53a                13,334 font.H
\par 05/13/99  08:27p                26,220 GENESIS.H
\par 04/26/99  10:53a                 3,573 getypes.h
\par 04/26/99  04:04p                 2,772 matrix33.h
\par 04/26/99  10:53a                 9,662 motion.h
\par 04/26/99  10:53a                 6,248 path.h
\par 04/26/99  04:05p                 4,093 PhysicsJoint.h
\par 05/13/99  02:08p                 8,618 PhysicsObject.h
\par 04/26/99  04:04p                 3,183 PhysicsSystem.h
\par 05/03/99  03:16p                 6,342 pixelformat.h
\par 04/26/99  10:53a                 9,519 quatern.h
\par 04/26/99  10:53a                 5,195 RAM.H
\par 04/26/99  10:53a                 3,903 VEC3D.H
\par 04/26/99  10:53a                 8,113 vfile.h
\par 04/26/99  10:53a                 8,740 XFORM3D.H
\par               23 File(s)        191,404 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069827}Directory of C:\\Genesis3D\\levels*{\*\bkmkend _Toc454069827} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This subdirectory contains the level files and BSP files for the demonstration game as well as the .txl file that guides the color choices of each level.  Use of the GEdit program to create a new level will result in your new additi
on automatically being placed here.  Also, read the Objects subdirectory below.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\levels
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 04/30/99  01:16a             2,427,123 gedit.txl
\par 05/11/99  06:12p             1,516,771 genvs.3dt
\par 05/11/99  01:08p             4,377,430 genvs.bsp
\par 05/11/99  06:14p             1,423,158 genvs2.3dt
\par 05/11/99  04:09a             3,304,276 genvs2.bsp
\par                7 File(s)     13,048,758 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069828}Directory of C:\\Genesis3D\\lib*{\*\bkmkend _Toc454069828} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This subdirectory contains both release and debug versions of the core Genesis3D functions for use by individuals who are not altering the Genesis source code.  It is referenced by the demonstration game and, if you decide to create new versions
 by modifying the OpenSources you should place the new versions here.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\lib
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/14/99  09:11p             1,253,774 genesis.lib
\par 05/14/99  09:04p             3,750,244 genesisd.lib
\par 05/14/99  09:09p               126,578 genesisi.lib
\par                5 File(s)      5,130,596 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069829}Directory of C:\\Genesis3D\\Objects*{\*\bkmkend _Toc454069829}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {\i This subdirectory is NOT created when you install the Genesis3D Software.  However, if you 
wish to create your own objects for later use with GEdit tool you must manually create  a subdirectory named Objects in this place. The GEdit tool looks for objects in this subdirectory  in order to use them.  If you create a 3d object in the GEdit tool i
t tries to place the new item in this subdirectory when you select Save or Save As.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069830}Directory of C:\\Genesis3D\\OpenSource*{\*\bkmkend _Toc454069830}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This is the beginning of the OpenSource subdirectories which contain the sources for both the Genesis3D engine and its supporting tools
.  The directory contains 8 text files which describe what additional files must be placed in certain subdirectories in order to exacly mimic the development layout used by Eclipse to build the software.  These files are from software not supplied by Ecli
pse - like MASM, DirectX, and the Glide SDK.
\par 
\par There is also a readme file which explains the purposes behind the layout and specifically why Eclipse chose to incorporate multiple copies of it's include files in the tools development area (it speeds compile times to make the tools separately.)
\par }{\f2\cgrid0 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 03/25/99  12:20p                12,884 Build.txt
\par 04/26/99  11:37a                23,295 license.txt
\par 03/24/99  02:12p                 2,509 ManifestDXSDK.txt
\par 03/24/99  02:13p                 1,529 ManifestGlide.txt
\par 03/24/99  02:11p                 1,080 ManifestMasm.txt
\par 04/26/99  01:06p                 9,192 ManifestMAX.txt
\par 03/24/99  02:07p                13,816 ManifestVC.txt
\par 05/17/99  06:32p        <DIR>          masm
\par 05/17/99  06:32p        <DIR>          msdev60
\par 03/25/99  03:50p                 1,262 readme.txt
\par 05/17/99  06:32p        <DIR>          sdk
\par 05/17/99  06:33p        <DIR>          Source
\par 05/17/99  06:34p        <DIR>          Tools
\par               15 File(s)         65,567 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069831}Directory of C:\\Genesis3D\\OpenSource\\masm*{\*\bkmkend _Toc454069831}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The MASM subdirectory actually contains a single file that directs you to read a document called Build.txt.  This document
 explains the rationale for the build process and indicates that this is where Eclipse typically installs its own copy of Microsoft Assembler (MASM).
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\masm
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/15/99  12:24a                    66 readme.txt
\par                3 File(s)             66 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069832}Directory of C:\\Genesis3D\\OpenSource\\msdev60*{\*\bkmkend _Toc454069832}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Msdev60 subdirectory is similar to the MASM directory above.  It points to this location as the home for Microsoft Visual Studio 6.0
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\msdev60
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/15/99  12:24a                    66 readme.txt
\par                3 File(s)             66 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069833}Directory of C:\\Genesis3D\\OpenSource\\sdk*{\*\bkmkend _Toc454069833}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {In the same fashion, the following two directories are the locations where graphical toolkits used by the Genesis engine and the compiler should be placed.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\sdk
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/17/99  06:32p        <DIR>          DX6SDK
\par 05/17/99  06:32p        <DIR>          Glide
\par                4 File(s)              0 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069834}Directory of C:\\Genesis3D\\OpenSource\\sdk\\DX6SDK*{\*\bkmkend _Toc454069834}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
The sample program uses DirectX 6.0.  However, I have successfully compiled it with the newer version, 6.1.  There are features in the newer version which the engine does not yet take advantage of.  In fact, these features are among the possibl
e improvements that could be made to the engine.  However, there will be an issue if the addition of these features will be limited to the DirectX implementation or if similar features would be hand coded for Glide.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\sdk\\DX6SDK
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/15/99  12:24a                    66 readme.txt
\par                3 File(s)             66 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069835}Directory of C:\\Genesis3D\\OpenSource\\sdk\\Glide*{\*\bkmkend _Toc454069835}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Glide SDK is pl
aced here.  Glide drivers are compiled and selected by the user at run time (just as the user can select DirectX drivers or software only drivers).  The Glide drivers do limit the feature set of the engine to those users who have 3DFX chipset cards, so ad
ditions here can cause the same issues as adding enhancements to the DirectX drivers.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\sdk\\Glide
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/15/99  12:24a                    66 readme.txt
\par                3 File(s)             66 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069836}Directory of C:\\Genesis3D\\OpenSource\\Source{\*\bkmkend _Toc454069836}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This is it, the Holy Grail for game engine students.  The Genesis3D engine sources reside in this set of subdirectories.  Code is here for the engine and a
ctors, bitmap graphics and graphics compression, 3D entities and math, fonts and files.  There is also a second, experimental , software-only driver under construction by Eclipse.
\par The outer subdirectory contains the basic engine source code and a set of make files for creating a debug and release version using Microsoft Visual C++ 6.0.  Additional files in each of the subdirectories are described below.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/17/99  06:32p        <DIR>          Actor
\par 05/17/99  06:32p        <DIR>          Bitmap
\par 04/26/99  10:52a                24,126 CAMERA.C
\par 04/26/99  10:53a                 5,880 CAMERA.H
\par 05/14/99  08:26p                19,014 CSNetMgr.c
\par 05/13/99  08:27p                 5,104 CSNetMgr.h
\par 03/25/99  12:05p                 1,612 drawbbox.c
\par 05/17/99  06:33p        <DIR>          Engine
\par 05/17/99  06:33p        <DIR>          Entities
\par 05/17/99  06:33p        <DIR>          Font
\par 05/04/99  05:02p                14,268 Ge.c
\par 05/11/99  03:37p                14,971 Genesis.dsp
\par 05/13/99  08:27p                26,220 GENESIS.H
\par 05/11/99  04:28p                22,192 Genesis.mak
\par 03/24/99  08:24a                 2,582 genesis.rc
\par 05/11/99  04:29p                16,739 GenesisDLL.dsp
\par 05/11/99  04:29p                23,750 GenesisDLL.mak
\par 04/26/99  10:53a                 3,573 getypes.h
\par 04/26/99  10:52a                29,282 list.c
\par 04/26/99  10:53a                 9,212 list.h
\par 05/17/99  06:33p        <DIR>          Math
\par 05/15/99  12:22a                   181 mssccprj.scc
\par 05/14/99  08:26p                27,476 NETPLAY.C
\par 05/14/99  02:45a                 3,603 NETPLAY.H
\par 05/17/99  06:33p        <DIR>          Physics
\par 04/26/99  10:53a                 2,645 PTRTYPES.H
\par 12/08/98  09:43a                   411 resource.h
\par 04/26/99  10:52a                27,721 SOUND.C
\par 04/26/99  10:53a                 3,234 SOUND.H
\par 04/26/99  10:52a                 5,602 Sound3d.c
\par 04/26/99  10:53a                 2,303 SOUND3D.H
\par 05/17/99  06:33p        <DIR>          Support
\par 04/26/99  10:52a                16,489 Tclip.c
\par 04/26/99  10:53a                 2,694 tclip.h
\par 04/26/99  10:52a                 2,149 timer.c
\par 04/26/99  10:53a                 3,422 timer.h
\par 04/26/99  10:52a                 3,910 tsc.c
\par 04/26/99  10:53a                 2,665 tsc.h
\par 05/17/99  06:33p        <DIR>          VFile
\par 05/17/99  06:33p        <DIR>          World
\par               42 File(s)        323,030 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069837}Directory of C:\\Genesis3D\\OpenSource\\Source\\Actor{\*\bkmkend _Toc454069837} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The code i
n this section is used to create and move a character along a specified path.  It includes code for the "actor's" movement.  (Actors in this case refer to any model capable of movement - not just animated characters.)
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Actor
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/12/99  02:33p                52,195 actor.c
\par 05/12/99  02:19p                23,801 actor.h
\par 04/26/99  10:52a                36,723 body.c
\par 04/26/99  10:53a                 5,570 body.h
\par 04/26/99  11:45a                 3,948 body._h
\par 04/26/99  10:52a                11,155 bodyinst.c
\par 04/26/99  10:53a                 4,254 bodyinst.h
\par 04/26/99  10:52a                56,806 motion.c
\par 04/26/99  10:53a                 9,662 motion.h
\par 05/04/99  05:02p                42,401 path.c
\par 04/26/99  10:53a                 6,248 path.h
\par 04/26/99  10:52a                31,006 pose.c
\par 04/26/99  10:53a                 8,021 pose.h
\par 05/04/99  05:02p                43,043 puppet.c
\par 04/26/99  10:53a                 4,127 puppet.h
\par 04/26/99  10:52a                32,811 QKFrame.c
\par 04/26/99  10:53a                 6,823 QKFrame.h
\par 04/26/99  10:52a                16,010 strblock.c
\par 04/26/99  10:53a                 2,994 strblock.h
\par 04/26/99  10:52a                11,470 tkarray.c
\par 04/26/99  10:53a                 5,188 tkarray.h
\par 04/26/99  10:52a                19,568 tkevents.c
\par 04/26/99  10:53a                 4,705 tkevents.h
\par 04/26/99  10:52a                24,560 vkframe.c
\par 04/26/99  10:53a                 5,937 vkframe.h
\par 04/26/99  10:52a                 3,467 XFArray.c
\par 04/26/99  10:53a                 3,077 xfarray.h
\par               29 File(s)        475,570 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069838}Directory of C:\\Genesis3D\\OpenSource\\Source\\Bitmap{\*\bkmkend _Toc454069838} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains code for creating and moving bitmap texture images.  It also calls the compression subdirectory beneath it to compress and expand bitmap palettes.
\par 
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Bitmap
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 05/05/99  11:31a               124,990 bitmap.c
\par 05/03/99  04:06p                23,446 bitmap.h
\par 05/03/99  03:24p                 3,116 bitmap._h
\par 04/26/99  11:46a                 6,134 bitmap.__h
\par 05/05/99  12:01a                42,086 bitmap_blitdata.c
\par 04/26/99  10:53a                 2,320 bitmap_blitdata.h
\par 04/26/99  10:52a                13,801 bitmap_gamma.c
\par 04/26/99  10:53a                 2,175 bitmap_gamma.h
\par 05/17/99  06:32p        <DIR>          Compression
\par 05/04/99  01:23p                25,560 pixelformat.c
\par 05/03/99  03:16p                 6,342 pixelformat.h
\par               13 File(s)        249,970 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069839}Directory of C:\\Genesis3D\\OpenSource\\Source\\Bitmap\\Compression{\*\bkmkend _Toc454069839}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains code for using and optimizing various palet
tes (Genesis supports different video resolutions so palette translation is necessary between prerecorded bitmap images and the screens they may be displayed on.)  Genesis also uses 256 color palettes in its saved images and optimizes these, rolling them 
together,  in displaying the higher 16 bit video color depth of the final product.
\par }{\f2\fs16\cgrid0 
\par Directory of C:\\Genesis3D\\OpenSource\\Source\\Bitmap\\Compression
\par 
\par 05/17/99  06:32p        <DIR>          .
\par 05/17/99  06:32p        <DIR>          ..
\par 04/26/99  10:52a                22,265 palcreate.c
\par 04/26/99  10:53a                 2,636 palcreate.h
\par 04/26/99  10:52a                14,015 palettize.c
\par 04/26/99  10:53a                 2,586 palettize.h
\par 04/26/99  10:52a                 7,308 paloptimize.c
\par 04/26/99  10:53a                 2,207 paloptimize.h
\par 04/26/99  10:53a                 3,801 utility.h
\par 04/26/99  10:52a                 6,168 yuv.c
\par 04/26/99  10:53a                 4,572 yuv.h
\par               11 File(s)         65,558 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069840}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine{\*\bkmkend _Toc454069840} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This is the outermost subdirectory of the actual engine.  It contains the engine code, code for manipulating the list of bitmap images, font display, and links to the two subdirectories beneath it which control video driver display and the Genesis
 logo display.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/28/99  06:34p                 9,690 BitmapList.c
\par 04/26/99  10:53a                 2,861 BitmapList.h
\par 05/17/99  06:33p        <DIR>          Drivers
\par 05/04/99  05:02p                52,372 engine.c
\par 04/26/99  10:53a                 5,335 engine.h
\par 04/26/99  10:52a                63,532 fontbmp.c
\par 04/26/99  10:52a             1,057,891 genesis3d.c
\par 05/17/99  06:33p        <DIR>          Logo
\par 05/10/99  05:28p                14,168 System.c
\par 05/10/99  05:28p                 7,304 System.h
\par               12 File(s)      1,213,153 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 \page {\*\bkmkstart _Toc454069841}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers{\*\bkmkend _Toc454069841}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contai
ns common subroutines used by all the Genesis video drivers.  Genesis3D supports DirectX, Glide and a software only video driver.  There are two software video drivers provided.  SoftDrv2 is the latest driver and is used in the Gtest example program.  Ben
eath this subdirectory are subdirectories containing code for each of the video drivers.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a                 4,157 Bmp.c
\par 05/17/99  06:33p        <DIR>          D3DDrv
\par 05/10/99  03:30p                16,061 Dcommon.h
\par 05/17/99  06:33p        <DIR>          GlideDrv
\par 05/17/99  06:33p        <DIR>          SoftDrv
\par 05/17/99  06:33p        <DIR>          SoftDrv2
\par                8 File(s)         20,218 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069842}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\D3DDrv{\*\bkmkend _Toc454069842} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {In this subdirectory is the code for the DirectX Direct3D video drivers.  This code acts as a thin wrapper around the Microsoft code and pro
vides consistency of calling convention between the DirectX, Glide and Software only versions of the driver.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\D3DDrv
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/10/99  10:22p                23,182 D3dcache.cpp
\par 05/10/99  06:41p                 3,877 D3dcache.h
\par 05/08/99  11:06p                 7,360 D3ddrv.cpp
\par 03/04/99  02:17p                 7,231 D3DDrv.dsp
\par 04/26/99  10:53a                 2,100 D3DDRV.H
\par 03/04/99  02:17p                 7,615 D3DDrv.mak
\par 04/26/99  10:52a                15,019 D3D_ERR.CPP
\par 04/26/99  10:53a                 2,179 D3D_ERR.H
\par 05/08/99  11:06p                 8,217 D3d_fx.cpp
\par 05/08/99  11:06p                 2,683 D3D_FX.H
\par 05/10/99  10:21p                87,434 D3d_main.cpp
\par 05/08/99  11:06p                 8,800 D3d_main.h
\par 04/26/99  10:52a                 6,374 DDMemMgr.c
\par 04/26/99  10:53a                 2,736 DDMemMgr.h
\par 04/26/99  10:52a                 7,720 GSPAN.CPP
\par 04/26/99  10:53a                 2,823 GSPAN.H
\par 05/15/99  12:22a                   131 mssccprj.scc
\par 05/09/99  01:28a                37,023 Pcache.cpp
\par 04/26/99  10:53a                 2,286 Pcache.h
\par 05/07/99  02:56p                 7,206 Render.cpp
\par 05/07/99  02:56p                 2,394 RENDER.H
\par 05/09/99  12:54a                 5,313 Scene.cpp
\par 04/26/99  10:53a                 2,368 SCENE.H
\par 05/10/99  10:21p                23,099 THandle.cpp
\par 05/05/99  04:48p                 5,016 THandle.h
\par 04/26/99  10:52a                17,803 tpage.cpp
\par 04/26/99  10:53a                 3,587 TPage.h
\par               29 File(s)        301,576 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 \page {\*\bkmkstart _Toc454069843}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\GlideDrv{\*\bkmkend _Toc454069843} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {In this subdirectory is the code for the Glide video drivers.  This code acts as
 a thin wrapper around the Glide code and provides consistency of calling convention between the DirectX, Glide and Software only versions of the driver.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\GlideDrv
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a                20,816 GCache.c
\par 04/26/99  10:53a                 3,404 GCache.h
\par 05/11/99  03:35p                 8,858 GlideDrv.c
\par 03/04/99  12:50p                 6,363 GlideDrv.dsp
\par 04/26/99  10:53a                 2,023 GLIDEDRV.H
\par 03/04/99  12:50p                 6,702 GlideDrv.mak
\par 04/26/99  10:52a                11,290 GMain.c
\par 04/26/99  10:53a                 2,839 GMain.h
\par 04/26/99  10:52a                 5,923 GMemMgr.c
\par 04/26/99  10:53a                 2,452 GMemMgr.h
\par 04/26/99  10:52a                 7,767 GSpan.cpp
\par 04/26/99  10:53a                 2,935 GSpan.h
\par 04/26/99  10:52a                23,513 GThandle.c
\par 04/26/99  10:53a                 5,778 GTHandle.h
\par 05/15/99  12:22a                   135 mssccprj.scc
\par 05/08/99  11:27p                29,377 Render.c
\par 04/26/99  10:53a                 4,009 Render.h
\par               19 File(s)        144,184 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069844}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\SoftDrv{\*\bkmkend _Toc454069844} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {In this subdirectory is
 the first of two software only versions of the video drivers.  This code acts as a thin wrapper around the Microsoft code and provides consistency of calling convention between the DirectX, Glide and Software only versions of the driver.
\par It was used more most of the development of Genesis3D and is highly robust, but it has been superceded by the SoftDrv2 version.  It is included here for completeness and for comparison purposes in case problems arise with the other driver. 
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\SoftDrv
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:53a                 5,406 3dnowspan.h
\par 04/26/99  10:55a               287,158 amdspan.asm
\par 04/26/99  10:52a                48,025 dmodes.c
\par 04/26/99  10:53a                 3,143 dmodes.h
\par 04/26/99  10:52a                33,163 drawspan.c
\par 04/26/99  10:53a                 3,293 drawspan.h
\par 05/15/99  12:22a                   133 mssccprj.scc
\par 04/26/99  10:52a                10,152 register.c
\par 04/26/99  10:53a                 3,445 REGISTER.H
\par 04/26/99  10:52a                71,866 render.c
\par 04/26/99  10:53a                 4,614 RENDER.H
\par 04/26/99  10:53a                10,329 SAL.H
\par 04/26/99  10:52a                 6,309 scene.c
\par 04/26/99  10:53a                 2,364 SCENE.H
\par 05/12/99  04:23p                21,885 softdrv.c
\par 03/04/99  02:18p                 7,738 SoftDrv.dsp
\par 04/26/99  10:53a                 3,478 SOFTDRV.H
\par 03/04/99  02:18p                 8,266 SoftDrv.mak
\par 04/26/99  10:52a                 4,188 span.c
\par 04/26/99  10:53a                 2,575 SPAN.H
\par 04/26/99  10:52a                 2,642 system.c
\par 04/26/99  10:53a                 1,978 SYSTEM.H
\par 04/26/99  10:52a                58,376 W32SAL.CPP
\par 04/26/99  10:52a               300,289 x86span555.c
\par 04/26/99  10:53a                 4,700 x86span555.h
\par 04/26/99  10:52a               330,685 x86span565.c
\par 04/26/99  10:53a                 4,619 x86span565.h
\par               29 File(s)      1,240,819 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069845}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\SoftDrv2{\*\bkmkend _Toc454069845}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
In this subdirectory is the second of two software only versions of the video drivers.  This code acts as a thin wrapper around the Microsoft code and provides consistency of calling convention between the DirectX, Glide and So
ftware only versions of the driver.
\par This is the latest version of the driver and is optimized for better performance and has been tested with a wide range of video cards. 
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Drivers\\SoftDrv2
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/12/99  04:25p                 5,487 CPUInfo.c
\par 04/26/99  10:53a                 2,113 CPUInfo.h
\par 04/26/99  10:52a                23,559 DDRAWDisplay.c
\par 04/26/99  10:53a                 3,435 DDRAWDisplay.h
\par 04/26/99  10:52a                21,153 DIBDisplay.c
\par 04/26/99  10:53a                 3,528 DIBDisplay.h
\par 04/26/99  10:52a                 7,801 display.c
\par 04/26/99  10:53a                 3,772 display.h
\par 04/26/99  10:52a                 4,319 DisplayModeInfo.c
\par 04/26/99  10:53a                 3,081 DisplayModeInfo.h
\par 04/26/99  10:52a                 6,356 DrawDecal.c
\par 04/26/99  10:53a                 2,116 DrawDecal.h
\par 05/15/99  12:22a                   135 mssccprj.scc
\par 04/26/99  10:53a                 4,531 rop.h
\par 04/29/99  07:45p                30,906 softdrv.c
\par 04/26/99  10:53a                 2,318 Softdrv.h
\par 04/06/99  06:07p                 7,825 SoftDrv2.dsp
\par 04/06/99  06:07p                 8,149 SoftDrv2.mak
\par 04/26/99  10:52a                19,290 span.c
\par 04/26/99  10:53a                 2,508 Span.h
\par 05/09/99  12:11a                 8,306 SpanBuffer.c
\par 04/26/99  10:53a                 3,048 SpanBuffer.h
\par 04/26/99  10:53a                 7,297 SpanEdges_Factory.h
\par 04/26/99  10:53a                 7,257 Span_AffineLoop.h
\par 05/09/99  12:08a                 8,183 Span_Factory.h
\par 04/26/99  10:52a                13,401 SWTHandle.c
\par 04/26/99  10:53a                 3,599 SWTHandle.h
\par 04/26/99  10:52a                14,348 TRaster.c
\par 04/26/99  10:53a                 3,873 traster.h
\par 04/26/99  10:52a                13,167 Triangle.c
\par 04/26/99  10:53a                14,352 triangle.h
\par               33 File(s)        259,213 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069846}Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Logo{\*\bkmkend _Toc454069846}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains procedual code for the Genesis3D logo - creating the electrical arc and corona halo effect and the moving gears on the spash screen in the GTest demo program.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Engine\\Logo
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a               106,955 A_CORONA.c
\par 04/26/99  10:52a               107,639 A_STREAK.c
\par 04/26/99  10:52a               107,861 CORONA.c
\par 04/28/99  11:36a                 9,026 electric.c
\par 04/26/99  10:53a                 3,527 electric.h
\par 05/11/99  03:42p                14,866 logo.c
\par 04/26/99  10:52a               852,733 LogoActor.c
\par 04/26/99  10:52a               105,805 streak.c
\par 05/11/99  03:35p               272,444 WebUrl.c
\par               11 File(s)      1,580,856 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069847}Directory of C:\\Genesis3D\\OpenSource\\Source\\Entities{\*\bkmkend _Toc454069847} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the basic entity definitions for objects in the Genesis3D world.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Entities
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a                29,763 Entities.c
\par 04/26/99  10:53a                 5,894 ENTITIES.H
\par                4 File(s)         35,657 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069848}Directory of C:\\Genesis3D\\OpenSource\\Source\\Font{\*\bkmkend _Toc454069848} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the basic definitions and functions that can be used with text fonts in Genesis3D.  The engine supports the display of various TrueType fonts within a created game.

\par }{\fs20 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Font
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a                42,455 font.c
\par 04/26/99  10:53a                13,334 font.H
\par 04/26/99  10:52a                 4,360 wgClip.c
\par 04/26/99  10:53a                 2,421 wgClip.H
\par                6 File(s)         62,570 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069849}Directory of C:\\Genesis3D\\OpenSource\\Source\\Math{\*\bkmkend _Toc454069849} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains code for the basic math routines used throughout the engine.  It includes routines for vector and quaternions
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Math
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a                 7,101 Box.c
\par 04/26/99  10:53a                 3,027 Box.h
\par 04/26/99  10:52a                 6,524 crc32.c
\par 04/26/99  10:53a                 2,305 crc32.h
\par 04/26/99  10:52a                14,114 ExtBox.c
\par 04/26/99  10:53a                 4,577 ExtBox.h
\par 05/04/99  05:02p                21,587 quatern.c
\par 04/26/99  10:53a                 9,519 quatern.h
\par 04/26/99  10:52a                 8,446 VEC3D.C
\par 04/26/99  10:53a                 3,903 VEC3D.H
\par 05/04/99  05:02p                24,404 Xform3d.c
\par 04/26/99  10:53a                 8,740 XFORM3D.H
\par               14 File(s)        114,247 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069850}Directory of C:\\Genesis3D\\OpenSource\\Source\\Physics{\*\bkmkend _Toc454069850} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The 
contents of this subdirectory are the routines that make up the basic physics library for collision reactions and the fundamental 3D matrix math operations that determine movement in the game world.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Physics
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  04:03p                 5,417 matrix33.c
\par 04/26/99  04:04p                 2,772 matrix33.h
\par 04/26/99  04:05p                 7,722 PhysicsJoint.c
\par 04/26/99  04:05p                 4,093 PhysicsJoint.h
\par 05/11/99  09:45p                27,872 PhysicsObject.c
\par 05/13/99  02:08p                 8,618 PhysicsObject.h
\par 05/11/99  09:47p                24,135 PhysicsSystem.c
\par 04/26/99  04:04p                 3,183 PhysicsSystem.h
\par               10 File(s)         83,812 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069851}Directory of C:\\Genesis3D\\OpenSource\\Source\\Support{\*\bkmkend _Toc454069851} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The routines in this subdirectory comprise the memory management routines and error trapping routines used throughout the engine.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\Support
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/03/99  03:55p                 3,332 BASETYPE.H
\par 04/27/99  11:49p                 5,749 ERRORLOG.C
\par 04/27/99  11:53p                11,163 Errorlog.h
\par 04/26/99  10:52a                 4,629 geAssert.c
\par 04/26/99  10:53a                 2,968 geAssert.h
\par 04/26/99  10:52a                 2,375 log.c
\par 04/26/99  10:53a                 2,218 log.h
\par 04/26/99  10:52a                 8,654 mempool.c
\par 04/26/99  10:53a                 2,491 mempool.h
\par 04/26/99  10:52a                15,407 RAM.C
\par 04/26/99  10:53a                 5,195 RAM.H
\par 04/26/99  10:52a                 1,904 ramdll.c
\par               14 File(s)         66,085 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069852}Directory of C:\\Genesis3D\\OpenSource\\Source\\Vfile{\*\bkmkend _Toc454069852} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Basic file handling is accomplished through the routines in this subdirectory including handling the manipulation of memory blocks and virtual files.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\VFile
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/04/99  05:12p                18,775 dirtree.c
\par 04/26/99  10:53a                 3,764 dirtree.h
\par 04/28/99  11:27a                20,367 fsdos.c
\par 04/26/99  10:53a                 1,946 fsdos.h
\par 04/26/99  10:52a                11,369 FSMEMORY.C
\par 04/26/99  10:53a                 1,956 FSMEMORY.H
\par 04/26/99  10:52a                20,007 fsvfs.c
\par 04/26/99  10:53a                 1,970 fsvfs.h
\par 04/26/99  10:52a                14,333 vfile.c
\par 04/26/99  10:53a                 8,113 vfile.h
\par 04/26/99  11:45a                 5,354 vfile._h
\par               13 File(s)        107,954 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {\page {\*\bkmkstart _Toc454069853}Directory of C:\\Genesis3D\\OpenSource\\Source\\World{\*\bkmkend _Toc454069853} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Code in this subdirectory primarily governs visibility in the game world.  It includes routines for ma
nipulating light, surfaces, planes, fog effects, and the binary space partion tree (BSP tree) which is rapidly searched for objects which may be visible to the player.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Source\\World
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  10:52a                 4,254 Fog.c
\par 04/26/99  10:53a                 3,438 Fog.h
\par 05/06/99  08:15p                35,122 Frustum.c
\par 05/06/99  08:15p                 5,377 FRUSTUM.H
\par 04/26/99  10:52a                18,084 Gbspfile.c
\par 04/26/99  10:53a                10,659 GBSPFILE.H
\par 05/12/99  05:16p                53,541 Light.c
\par 05/11/99  10:24p                 4,655 LIGHT.H
\par 05/06/99  07:17p                 7,487 Plane.c
\par 05/06/99  07:17p                 3,067 PLANE.H
\par 05/04/99  04:03p                17,807 Surface.c
\par 04/26/99  10:53a                 4,337 SURFACE.H
\par 05/04/99  05:02p                63,164 Trace.c
\par 04/26/99  10:53a                 6,002 TRACE.H
\par 04/26/99  10:52a                29,317 User.c
\par 04/26/99  10:53a                 4,491 USER.H
\par 05/04/99  05:02p                15,085 Vis.c
\par 04/26/99  10:53a                 2,687 VIS.H
\par 04/29/99  06:59p                15,853 WBitmap.c
\par 04/26/99  10:53a                 4,244 WBitmap.h
\par 05/12/99  12:57a                92,115 World.c
\par 05/05/99  05:36p                 9,314 WORLD.H
\par               24 File(s)        410,100 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069854}Directory of C:\\Genesis3D\\OpenSource\\Tools*{\*\bkmkend _Toc454069854}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Tools subdirectory is a container for individual subdirectories containing sources for all the to
ols supplied by Eclipse for use with the Genesis3D engine.  There is no source code in the outer directory, in fact, there are no files at all in the outer directory.
\par Note: As an optimization to reduce the compilation speed the Tools each contain their own
 copies of the main Genesis3D headers and compiled versions of the resultant libraries to link to.  This code is replicated for each Tool subdirectory and except where noted it should be identical for each tool.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/17/99  06:33p        <DIR>          ActView
\par 05/17/99  06:33p        <DIR>          Exporters
\par 05/17/99  06:33p        <DIR>          Fusion2
\par 05/17/99  06:34p        <DIR>          GBSPLib
\par 05/17/99  06:34p        <DIR>          GPreview
\par 05/17/99  06:34p        <DIR>          mkactor
\par 05/17/99  06:34p        <DIR>          TPack
\par                9 File(s)              0 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069855}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView*{\*\bkmkend _Toc454069855} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This is the outer subdirectory for the ActView tool, which allows you to view, rotate, zoom, and animate ACT files.  It is useful for verifying the smoothness of an animation, but it does not contain functions for changing animations.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/28/99  10:50a                 6,625 ActView.dsp
\par 03/24/99  09:31p                 6,830 ActView.mak
\par 05/17/99  06:33p        <DIR>          Doc
\par 05/17/99  06:33p        <DIR>          GenesisSDK
\par 05/17/99  06:33p        <DIR>          Main
\par 05/15/99  12:22a                   117 mssccprj.scc
\par 05/17/99  06:33p        <DIR>          res
\par 05/17/99  06:33p        <DIR>          Util
\par               10 File(s)         13,572 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069856}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Doc*{\*\bkmkend _Toc454069856}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains help files and screen shots on how to use the ActView tool.
\par }{\fs20 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Doc
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 09/16/98  10:25a                   663 ActView.CNT
\par 09/16/98  10:40a                47,616 ActView.doc
\par 09/16/98  10:40a                   475 ActView.err
\par 09/16/98  02:34p                16,112 ACTVIEW.HLP
\par 09/16/98  10:40a                 3,580 ActView.hpj
\par 09/14/98  03:13p                   455 ActView.rbh
\par 09/16/98  10:40a                    59 ActView.rta
\par 09/16/98  10:40a                50,231 ActView.rtf
\par 09/16/98  10:40a                 1,093 ActView.rtk
\par 09/16/98  10:40a                 1,633 ActView.rts
\par 09/14/98  11:36a                   246 ffend.bmp
\par 09/14/98  11:51a                   246 ffframe.bmp
\par 09/14/98  12:36p                   438 frame.bmp
\par 09/14/98  12:40p                   566 move.bmp
\par 09/14/98  11:55a                   246 pan.bmp
\par 09/14/98  11:56a                   246 pause.bmp
\par 09/14/98  11:35a                   246 play.bmp
\par 09/14/98  11:59a                   246 rotate.bmp
\par 09/14/98  12:00p                   246 rrframe.bmp
\par 09/14/98  12:01p                   246 rrstart.bmp
\par 09/14/98  12:03p                   246 stop.bmp
\par 09/14/98  12:04p                   246 zoom.bmp
\par               24 File(s)        125,381 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069857}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK*{\*\bkmkend _Toc454069857} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Genesis3D headers and the debug and release libraries.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/17/99  06:33p        <DIR>          include
\par 05/17/99  06:33p        <DIR>          lib
\par                4 File(s)              0 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 \page {\*\bkmkstart _Toc454069858}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK\\include{\*\bkmkend _Toc454069858}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a copy of the header files used by Actview in compilation.  I
t is the same as those in the outer include directory.  They are included here, separately, to speed compilation times and to separate the compilation of the ActView tool from that of the Genesis3D engine.  In a final release of a newly developed product 
they should be identical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK\\include
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  11:26a                23,693 actor.h
\par 05/04/99  01:20p                 3,332 BASETYPE.H
\par 05/04/99  01:20p                23,446 bitmap.h
\par 04/26/99  11:26a                 5,570 body.h
\par 04/27/99  11:53p                11,163 Errorlog.h
\par 04/26/99  11:26a                 4,577 ExtBox.h
\par 04/26/99  11:26a                13,334 font.H
\par 04/26/99  11:26a                26,019 GENESIS.H
\par 04/26/99  11:26a                 3,573 getypes.h
\par 04/26/99  04:04p                 2,772 matrix33.h
\par 04/26/99  11:26a                 9,662 motion.h
\par 04/26/99  11:26a                 6,248 path.h
\par 04/26/99  04:05p                 4,093 PhysicsJoint.h
\par 04/26/99  04:05p                 8,619 PhysicsObject.h
\par 04/26/99  04:04p                 3,183 PhysicsSystem.h
\par 05/04/99  01:20p                 6,342 pixelformat.h
\par 04/26/99  11:26a                 9,519 quatern.h
\par 04/26/99  11:26a                 5,195 RAM.H
\par 04/26/99  11:26a                 3,903 VEC3D.H
\par 04/26/99  11:26a                 8,113 vfile.h
\par 04/26/99  11:26a                 8,740 XFORM3D.H
\par               23 File(s)        191,096 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069859}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK\\lib*{\*\bkmkend _Toc454069859} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
The files in this subdirectory are the libraries used by ActView in compilation.  They are the same as those used in the Gtest game and the outer /lib subdirectory.  They are included here, separately, to speed 
compilation times and to separate the compilation of the ActView tool from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\GenesisSDK\\lib
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/10/99  10:57p             1,182,298 genesis.lib
\par 05/10/99  10:50p             3,630,406 genesisd.lib
\par                4 File(s)      4,812,704 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069860}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Main{\*\bkmkend _Toc454069860}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the main code for the ActView tool.  
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Main
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/28/99  11:24a                58,315 actview.c
\par 12/22/98  09:04p                13,498 ActView.rc
\par 04/26/99  11:26a                54,837 blender.c
\par 04/26/99  11:26a                 2,537 Blender.h
\par 12/22/98  09:04p                 5,800 resource.h
\par                7 File(s)        134,987 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069861}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\res*{\*\bkmkend _Toc454069861} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the resources which are compiled into the ActView tool.  It is primarily a series of small icon files which are used to decorate the buttons with functional repr
esentations. 
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\res
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 09/15/98  01:20p                19,478 actview.bmp
\par 09/17/98  04:40p                   766 blend.ico
\par 09/09/98  02:16p                 1,078 ffend.ico
\par 09/14/98  12:05p                 1,078 ffframe.ico
\par 09/10/98  05:53p                   766 irotate.ico
\par 09/11/98  04:26p                   766 mainicon.ico
\par 09/10/98  05:34p                   326 pan.cur
\par 09/14/98  12:05p                   766 pan.ico
\par 09/09/98  02:26p                 1,078 pause.ico
\par 09/09/98  02:16p                 1,078 play.ico
\par 09/10/98  05:52p                   326 rotate.cur
\par 09/14/98  11:59a                   766 rotate.ico
\par 09/14/98  12:05p                 1,078 rrframe.ico
\par 09/14/98  12:05p                 1,078 rrstart.ico
\par 09/14/98  12:05p                 1,078 stop.ico
\par 09/10/98  05:57p                   326 zoom.cur
\par 09/10/98  05:04p                   766 zoom.ico
\par               19 File(s)         32,598 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069862}Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Util{\*\bkmkend _Toc454069862} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a series of basic utilities used by the ActView tools.  
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\ActView\\Util
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  11:26a                 2,606 About.c
\par 04/26/99  11:26a                 2,030 about.h
\par 04/26/99  11:26a                 6,303 drvlist.c
\par 04/26/99  11:26a                 2,028 drvlist.h
\par 04/26/99  11:26a                 6,282 FilePath.c
\par 04/26/99  11:26a                 3,939 FilePath.h
\par 04/26/99  11:26a                 3,953 InstCheck.c
\par 04/26/99  11:26a                 2,262 InstCheck.h
\par 04/26/99  11:26a                 2,800 rcstring.c
\par 04/26/99  11:26a                 2,444 rcstring.h
\par 04/26/99  11:26a                 2,641 units.h
\par 04/26/99  11:26a                 3,114 WinUtil.c
\par 04/26/99  11:26a                 2,551 WinUtil.h
\par               15 File(s)         42,953 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069863}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Exporters{\*\bkmkend _Toc454069863}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The code in this subdirectory is used for the creation of the two .dle files which are plugged into 3D Studio max to enable it to export .ACT files.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Exporters
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 03/23/99  05:06p                 2,066 3dseres.h
\par 03/23/99  05:06p                15,087 3dsimp.h
\par 03/23/99  05:06p                 2,342 3dsires.h
\par 04/26/99  12:57p                 5,248 3dsmtl.cpp
\par 03/23/99  05:06p                 8,336 Cfile.h
\par 04/26/99  12:58p                98,710 gexp.cpp
\par 03/23/99  05:06p                   122 gexp.def
\par 03/24/99  09:03a                 9,474 gexp.dsp
\par 03/23/99  05:06p                 3,244 gexp.h
\par 03/24/99  09:03a                 9,427 gexp.mak
\par 03/23/99  05:06p                 5,874 gexp.rc
\par 03/23/99  05:06p                 1,316 Kfio.h
\par 05/17/99  06:33p        <DIR>          max2sdk
\par 05/15/99  12:22a                   116 mssccprj.scc
\par 03/23/99  05:06p                 6,160 Mtldef.h
\par 03/23/99  05:06p                 6,887 Ofile.h
\par 04/26/99  12:59p                14,967 Savemli.cpp
\par               19 File(s)        189,376 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069864}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Exporters\\max2sdk*{\*\bkmkend _Toc454069864}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a readme file which directs
 the developer to another text file. That file explains how to place critical files from the 3D Studio Max Software Development Kit into this subdirectory.  This is done in order to be able to create the exporters that are used by 3D Studio Max to generat
e ACT files.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Exporters\\max2sdk
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/15/99  12:24a                    66 readme.txt
\par                3 File(s)             66 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069865}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2{\*\bkmkend _Toc454069865}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This is the outermost level of the Genesis3D editor Gedit.  The name Fusion2 was a code name for the project during development and it remains.  (It probably was not used as the name of the actual editor bec
ause the name is trademarked by another software company for a database product.)  This is a large subdirectory containing virtually all the code for the editor.  There is a documentation subdirectory and the common include and library subdirectories bene
ath it for compilation.  Unlike most of the code, which is in basic C,  this tool is an MFC C++ development effort.  
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:27a                 2,266 about.cpp
\par 04/26/99  11:26a                 2,496 about.h
\par 04/26/99  11:27a                 3,723 ActivationWatch.cpp
\par 04/26/99  11:26a                 2,775 ActivationWatch.h
\par 04/26/99  11:26a                11,958 array.c
\par 04/26/99  11:26a                 4,121 array.h
\par 04/26/99  11:26a                 6,930 box3d.c
\par 04/26/99  11:26a                 4,076 box3d.h
\par 04/26/99  11:26a                87,937 brush.c
\par 04/26/99  11:26a                10,584 brush.h
\par 04/26/99  11:27a                13,155 BrushAttributesDialog.cpp
\par 04/26/99  11:26a                 3,712 BrushAttributesDialog.h
\par 04/26/99  11:27a                16,065 BrushEntityDialog.cpp
\par 04/26/99  11:26a                 4,209 BrushEntityDialog.h
\par 04/26/99  11:27a                15,525 BrushGroupDialog.cpp
\par 04/26/99  11:26a                 3,699 BrushGroupDialog.h
\par 04/26/99  11:26a                41,955 BrushTemplate.c
\par 04/26/99  11:26a                 5,914 BrushTemplate.h
\par 04/26/99  11:27a                 6,032 ChildFrm.cpp
\par 04/26/99  11:26a                 3,031 ChildFrm.h
\par 04/26/99  11:27a                 3,933 ColorBtn.cpp
\par 04/26/99  11:26a                 2,506 ColorBtn.h
\par 04/26/99  11:27a                 8,373 CompileDialog.cpp
\par 04/26/99  11:26a                 3,413 CompileDialog.h
\par 04/26/99  11:27a                13,375 Compiler.cpp
\par 04/26/99  11:26a                 3,526 Compiler.h
\par 04/26/99  11:27a                 6,198 ConsoleTab.cpp
\par 04/26/99  11:26a                 3,823 ConsoleTab.h
\par 04/26/99  11:27a                 5,727 CreateArchDialog.cpp
\par 04/26/99  11:26a                 3,079 CreateArchDialog.h
\par 04/26/99  11:27a                 7,211 CreateBoxDialog.cpp
\par 04/26/99  11:26a                 3,320 CreateBoxDialog.h
\par 04/26/99  11:27a                 4,965 CreateConeDialog.cpp
\par 04/26/99  11:26a                 3,077 CreateConeDialog.h
\par 04/26/99  11:27a                 7,854 CreateCylDialog.cpp
\par 04/26/99  11:26a                 3,166 CreateCylDialog.h
\par 04/26/99  11:27a                 5,699 CreateSpheroidDialog.cpp
\par 04/26/99  11:26a                 3,223 CreateSpheroidDialog.h
\par 04/26/99  11:27a                 4,656 CreateStaircaseDialog.cpp
\par 04/26/99  11:26a                 3,013 CreateStaircaseDialog.h
\par 05/17/99  06:33p        <DIR>          Deliver
\par 05/17/99  06:33p        <DIR>          Doc
\par 04/26/99  11:27a                19,344 EntitiesDialog.cpp
\par 04/26/99  11:26a                 3,565 EntitiesDialog.h
\par 04/26/99  11:27a                24,432 Entity.cpp
\par 04/26/99  11:26a                 6,207 Entity.h
\par 05/11/99  12:13p                24,771 EntityTable.cpp
\par 04/26/99  11:26a                 4,842 EntityTable.h
\par 04/26/99  11:27a                 3,837 EntityVisDlg.cpp
\par 04/26/99  11:26a                 3,284 EntityVisDlg.h
\par 04/26/99  11:26a                 3,670 EntTypeName.c
\par 04/26/99  11:26a                 2,261 EntTypeName.h
\par 04/26/99  11:27a                 5,355 EntView.cpp
\par 04/26/99  11:26a                 2,707 EntView.h
\par 04/26/99  11:26a                38,122 face.c
\par 04/26/99  11:26a                 6,714 face.h
\par 04/26/99  11:27a                30,053 FaceAttributesDialog.cpp
\par 04/26/99  11:26a                 5,228 FaceAttributesDialog.h
\par 04/26/99  11:26a                12,519 FaceList.c
\par 04/26/99  11:26a                 3,858 facelist.h
\par 04/26/99  11:26a                 6,411 FilePath.c
\par 04/26/99  11:26a                 3,946 FilePath.h
\par 12/16/97  01:00p                   221 FUSION.CFG
\par 05/11/99  11:55a                17,093 FUSION.cpp
\par 03/24/99  09:51p                16,818 Fusion.dsp
\par 04/26/99  11:26a                 4,440 FUSION.h
\par 03/24/99  09:51p                19,917 Fusion.mak
\par 12/03/97  01:00a                   768 fusion.pal
\par 05/12/99  03:16p                73,799 FUSION.rc
\par 12/03/97  01:00a               810,244 fusion.wad
\par 05/11/99  12:04p               172,156 FUSIONDoc.cpp
\par 04/26/99  11:26a                15,985 FUSIONDoc.h
\par 04/26/99  11:27a                 8,335 FusionTabControls.cpp
\par 04/26/99  11:26a                 3,674 FusionTabControls.h
\par 04/26/99  11:27a                58,724 FUSIONView.cpp
\par 04/26/99  11:26a                 7,895 FUSIONView.h
\par 04/26/99  11:26a                 8,319 Gbsplib.h
\par 12/09/98  09:41a                   140 gedit.ini
\par 05/17/99  06:33p        <DIR>          GenesisSDK
\par 04/26/99  11:27a                 4,618 GridSizeDialog.cpp
\par 04/26/99  11:26a                 2,969 GridSizeDialog.h
\par 04/26/99  11:27a                20,204 group.cpp
\par 04/26/99  11:26a                 5,250 group.h
\par 04/26/99  11:27a                15,701 KeyEditDlg.cpp
\par 04/26/99  11:26a                 7,818 KeyEditDlg.h
\par 04/26/99  11:27a                41,207 level.cpp
\par 04/26/99  11:26a                 8,229 level.h
\par 04/26/99  11:27a                 3,605 LevelOptions.cpp
\par 04/26/99  11:26a                 3,263 LevelOptions.h
\par 04/26/99  11:26a                19,731 List.c
\par 04/26/99  11:26a                 5,390 list.h
\par 04/26/99  11:27a                25,882 MainFrm.cpp
\par 04/26/99  11:26a                 5,100 MainFrm.h
\par 04/26/99  11:26a                41,878 model.c
\par 04/26/99  11:26a                 6,693 model.h
\par 04/26/99  11:27a                45,056 ModelDialog.cpp
\par 04/26/99  11:26a                 5,394 ModelDialog.h
\par 05/15/99  12:23a                   116 mssccprj.scc
\par 04/26/99  11:26a                 2,214 Mydef.h
\par 04/26/99  11:26a                 7,006 node.c
\par 04/26/99  11:26a                 2,343 node.h
\par 04/26/99  11:26a                17,027 Parse3dt.c
\par 04/26/99  11:26a                 3,302 Parse3dt.h
\par 04/26/99  11:27a                 3,581 PreferencesDialog.cpp
\par 04/26/99  11:26a                 3,329 PreferencesDialog.h
\par 04/26/99  11:26a                 9,972 Prefs.c
\par 04/26/99  11:26a                 3,361 prefs.h
\par 04/26/99  11:26a               293,605 render.c
\par 04/26/99  11:26a                 6,211 render.h
\par 05/17/99  06:33p        <DIR>          res
\par 03/24/99  12:07p                23,939 resource.h
\par 09/23/97  12:21p                   141 resource.hm
\par 04/26/99  11:26a                 4,611 SelBrushList.c
\par 04/26/99  11:26a                 2,698 SelBrushList.h
\par 04/26/99  11:26a                 4,381 SelFaceList.c
\par 04/26/99  11:26a                 2,595 SelFaceList.h
\par 04/26/99  11:27a                10,261 SkyDialog.cpp
\par 04/26/99  11:26a                 4,516 SkyDialog.h
\par 04/26/99  11:26a                 3,271 stack.c
\par 04/26/99  11:26a                 2,718 stack.h
\par 04/26/99  11:26a                 2,855 StdAfx.h
\par 04/30/99  04:35p                14,696 TextureDialog.cpp
\par 04/26/99  05:49p                 3,358 TextureDialog.h
\par 04/26/99  11:26a                10,118 typeio.c
\par 04/26/99  11:26a                 5,381 typeio.h
\par 05/17/99  06:34p        <DIR>          TypeParser
\par 04/26/99  11:27a                 6,869 undostack.cpp
\par 04/26/99  11:26a                 2,808 undostack.h
\par 04/26/99  11:26a                 2,913 units.h
\par 04/26/99  11:26a                 5,241 util.c
\par 04/26/99  11:26a                 2,580 util.h
\par 04/26/99  11:27a                 5,147 WadFile.cpp
\par 04/26/99  11:26a                 2,226 WadFile.h
\par              135 File(s)      2,523,332 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069866}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Deliver*{\*\bkmkend _Toc454069866} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a number of items that are required in order to use the Genesis Editor, includin
g the Texture Packing utility, the gedit.ini file (which establishes the defaults for the program, the txl file for establishing colors, and the font file for creating text.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Deliver
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 06/14/97  07:12p                15,116 font.gfx
\par 12/09/98  09:41a                   140 gedit.ini
\par 05/29/98  05:16p               872,424 gedit.txl
\par 11/20/97  02:53p                 4,876 spot.gfx
\par 08/21/98  10:43a               305,152 tpack.exe
\par                7 File(s)      1,197,708 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069867}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Doc*{\*\bkmkend _Toc454069867} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The doc subdirectory file contains doc, txt and rtf files which document GEdit.  RoboHelp was used to generate the actual Help file and the HTML subdirectory below. 
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Doc
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 07/26/88  10:00a               132,382 AWK.EXE
\par 09/03/98  09:44a                 3,333 CVT.BAT
\par 06/18/98  11:08a                   962 docco.txt
\par 01/22/98  03:44p                 7,809 entities.txt
\par 09/02/98  07:06p                   100 fixfont.awk
\par 07/03/98  01:28p                 1,292 gedit.cnt
\par 07/03/98  01:32p                19,968 gedit.doc
\par 07/28/98  01:45p                   778 gedit.err
\par 09/02/98  07:03p                36,528 GEDIT.HLP
\par 07/03/98  02:22p                 3,475 gedit.hpj
\par 07/03/98  01:33p                   500 gedit.rbh
\par 07/03/98  01:32p                    59 gedit.rta
\par 07/03/98  01:32p                 7,701 gedit.rtf
\par 07/03/98  01:32p                    59 gedit.rtk
\par 07/03/98  01:32p                   599 gedit.rts
\par 07/28/98  01:40p                93,696 gedit2.doc
\par 07/03/98  01:32p                   202 gedit2.rbh
\par 07/28/98  01:40p                    59 gedit2.rta
\par 07/28/98  01:40p               111,110 gedit2.rtf
\par 07/28/98  01:40p                 2,127 gedit2.rtk
\par 07/28/98  01:40p                 3,184 gedit2.rts
\par 07/02/98  04:34p                19,456 howdoi.doc
\par 05/17/99  06:33p        <DIR>          html
\par               25 File(s)        445,379 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069868}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Doc\\html*{\*\bkmkend _Toc454069868}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains an HTML version of the Help file generated by RoboHelp.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\Doc\\html
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 07/03/98  02:13p                   180 cnt0.gif
\par 07/03/98  02:13p                   165 cnt1.gif
\par 07/03/98  02:13p                   254 contents.gif
\par 09/03/98  09:45a                 4,077 defaultgedit.html
\par 07/03/98  02:13p                    60 gedit00090000.gif
\par 09/03/98  09:45a                   906 geditAuto_rebuild.html
\par 09/03/98  09:45a                 2,000 geditBasic_Operation.html
\par 09/03/98  09:45a                 2,044 geditBrushes.html
\par 09/03/98  09:45a                 1,520 geditBrush_and_Face_Modes.html
\par 09/03/98  09:45a                 5,055 geditBrush_Attributes_Dialog.html
\par 09/03/98  09:45a                 1,027 geditBSP_Settings.html
\par 09/03/98  09:45a                 3,042 geditCamera_Mode.html
\par 09/03/98  09:45a                 1,709 geditCompiling_and_Viewing_Your_Level.html
\par 09/03/98  09:45a                   861 geditConsole.html
\par 09/03/98  09:45a                 1,226 geditCut_Brushes_and_Brush_Order.html
\par 09/03/98  09:45a                 1,910 geditEntities.html
\par 09/03/98  09:45a                 1,516 geditEntity_Editor.html
\par 09/03/98  09:45a                 1,402 geditEntity_Visibility_Dialog.html
\par 09/03/98  09:45a                 1,259 geditFaces.html
\par 09/03/98  09:45a                 3,882 geditFace_Attributes_Dialog.html
\par 09/03/98  09:45a                 2,303 geditGeneral_Compile_Options.html
\par 09/03/98  09:45a                 2,908 geditGroups.html
\par 09/03/98  09:45a                 6,098 geditindex.html
\par 09/03/98  09:45a                 2,657 geditLight_Settings.html
\par 09/03/98  09:45a                 3,124 geditModels.html
\par 09/03/98  09:45a                 2,245 geditOverview.html
\par 09/03/98  09:45a                 1,902 geditQuick_Compile.html
\par 09/03/98  09:45a                 3,463 geditSelect_Mode.html
\par 09/03/98  09:45a                 4,779 geditShortcut_Keys.html
\par 09/03/98  09:45a                 1,415 geditSky.html
\par 09/03/98  09:45a                 2,732 geditTemplate.html
\par 09/03/98  09:45a                 2,004 geditTemplate_Mode.html
\par 09/03/98  09:45a                   911 geditTextures.html
\par 09/03/98  09:45a                   982 geditThe_Camera_Entity.html
\par 09/03/98  09:45a                 1,045 geditThe_Grid.html
\par 09/03/98  09:45a                 3,271 geditThe_Initialization_File__GEDITIN.html
\par 09/03/98  09:45a                   756 geditThe_Option_Pages.html
\par 09/03/98  09:45a                 1,357 geditThe_Views.html
\par 09/03/98  09:45a                   274 gedituntitled.html
\par 09/03/98  09:45a                 8,509 geditUser_Defined_Entity_Header_Files.html
\par 09/03/98  09:45a                 1,022 geditUser_Interface_Layout.html
\par 09/03/98  09:45a                 1,105 geditVisibility_Settings.html
\par 07/03/98  02:13p                   237 index.gif
\par 07/03/98  02:13p                   162 index_a.gif
\par 07/03/98  02:13p                   162 index_b.gif
\par 07/03/98  02:13p                   163 index_c.gif
\par 07/03/98  02:13p                   163 index_d.gif
\par 07/03/98  02:13p                   159 index_e.gif
\par 07/03/98  02:13p                   159 index_f.gif
\par 07/03/98  02:13p                   165 index_g.gif
\par 07/03/98  02:13p                   161 index_h.gif
\par 07/03/98  02:13p                   162 index_i.gif
\par 07/03/98  02:13p                   162 index_j.gif
\par 07/03/98  02:13p                   162 index_k.gif
\par 07/03/98  02:13p                   160 index_l.gif
\par 07/03/98  02:13p                   162 index_m.gif
\par 07/03/98  02:13p                   163 index_n.gif
\par 07/03/98  02:13p                   162 index_o.gif
\par 07/03/98  02:13p                   161 index_p.gif
\par 07/03/98  02:13p                   164 index_q.gif
\par 07/03/98  02:13p                   161 index_r.gif
\par 07/03/98  02:13p                   164 index_s.gif
\par 07/03/98  02:13p                   160 index_t.gif
\par 07/03/98  02:13p                   163 index_u.gif
\par 07/03/98  02:13p                   162 index_v.gif
\par 07/03/98  02:13p                   163 index_w.gif
\par 07/03/98  02:13p                   164 index_x.gif
\par 07/03/98  02:13p                   161 index_y.gif
\par 07/03/98  02:13p                   161 index_z.gif
\par 09/03/98  09:45a                   145 logfile.html
\par 07/03/98  02:13p                   188 next0.gif
\par 07/03/98  02:13p                   190 next1.gif
\par 07/03/98  02:13p                   186 prev0.gif
\par 07/03/98  02:13p                   189 prev1.gif
\par               76 File(s)         94,303 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069869}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK*}{\b0\i\fs28 {\*\bkmkend _Toc454069869}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Genesis3D headers and the debug and release libraries.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/17/99  06:33p        <DIR>          include
\par 05/17/99  06:33p        <DIR>          lib
\par                4 File(s)              0 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069870}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK\\include{\*\bkmkend _Toc454069870} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a copy of the header files used by GEdit in compilation.  It is the same as those in the outer include directory.  They are included here, separate
ly, to speed compilation times and to separate the compilation of the GEdit tool from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK\\include
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 04/26/99  11:26a                23,693 actor.h
\par 05/03/99  03:55p                 3,332 BASETYPE.H
\par 05/03/99  04:06p                23,446 bitmap.h
\par 04/26/99  11:26a                 5,570 body.h
\par 04/27/99  11:53p                11,163 Errorlog.h
\par 04/26/99  11:26a                 4,577 ExtBox.h
\par 04/26/99  11:26a                13,334 font.H
\par 04/26/99  11:26a                26,019 GENESIS.H
\par 04/26/99  11:26a                 3,573 getypes.h
\par 04/26/99  11:26a                 9,662 motion.h
\par 04/26/99  11:26a                 6,248 path.h
\par 05/03/99  03:16p                 6,342 pixelformat.h
\par 04/26/99  11:26a                 9,519 quatern.h
\par 04/26/99  11:26a                 5,195 RAM.H
\par 04/26/99  11:26a                 3,903 VEC3D.H
\par 04/26/99  11:26a                 8,113 vfile.h
\par 04/26/99  11:26a                 8,740 XFORM3D.H
\par               19 File(s)        172,429 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069871}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK\\lib*{\*\bkmkend _Toc454069871}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The 
files in this subdirectory are the libraries used by GEdit in compilation.  They are the same as those used in the Gtest game and the outer /lib subdirectory.  They are included here, separately, to speed compilation times and to separate the compilation 
of the GEdit tool from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\GenesisSDK\\lib
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 05/11/99  04:23a             1,182,298 genesis.lib
\par 05/11/99  04:16a             3,630,406 genesisd.lib
\par                4 File(s)      4,812,704 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069872}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\res*}{\b0\i\fs28 {\*\bkmkend _Toc454069872}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains all the resources used by the GEdit program including buttons, cursors and icons.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\res
\par 
\par 05/17/99  06:33p        <DIR>          .
\par 05/17/99  06:33p        <DIR>          ..
\par 09/23/97  12:21p                   766 actor.ico
\par 02/17/98  05:58p                   766 arch.ico
\par 11/07/97  12:57p                   326 arrow.cur
\par 07/22/98  02:11p                 2,102 camera.bmp
\par 02/17/98  05:58p                   766 cone.ico
\par 11/06/97  11:29a                   766 Cross_m.cur
\par 02/17/98  05:58p                   766 cube.ico
\par 09/23/97  12:21p                16,502 cylinder.bmp
\par 02/17/98  05:58p                   766 cylinder.ico
\par 07/23/98  07:25p                 2,102 default.bmp
\par 07/20/98  05:35p                   326 eyedropper.cur
\par 03/17/98  10:10a                 1,078 ffend.ico
\par 03/17/98  10:10a                 1,078 ffframe.ico
\par 09/23/97  12:21p                 1,078 FUSION.ico
\par 09/23/97  12:21p                   398 FUSION.rc2
\par 09/23/97  12:21p                 1,078 FUSIONDoc.ico
\par 04/21/98  05:49p                   958 groupbar.bmp
\par 09/23/97  12:21p                 8,310 hollowbo.bmp
\par 09/23/97  12:21p                 8,310 hollowsp.bmp
\par 03/17/98  09:58a                 1,078 icoPlay.ico
\par 02/17/98  05:58p                   766 libobj.ico
\par 07/30/98  02:13p                 2,102 light.bmp
\par 09/23/97  12:21p                   766 light.ico
\par 07/22/98  02:11p                 2,102 modelorg.bmp
\par 09/23/97  12:21p                   766 playstart.ico
\par 11/06/97  04:15p                   326 pointer.cur
\par 03/17/98  10:10a                 1,078 rrframe.ico
\par 03/17/98  10:11a                 1,078 rrstart.ico
\par 09/23/97  12:21p                 8,310 solidbox.bmp
\par 09/23/97  12:21p                 8,310 solidsph.bmp
\par 02/17/98  05:58p                   766 sphere.ico
\par 07/22/98  02:11p                 2,102 spotlight.bmp
\par 02/17/98  05:58p                   766 stairs.ico
\par 03/17/98  10:10a                 1,078 stop.ico
\par 01/07/99  12:20p                 1,558 Toolbar.bmp
\par 10/13/98  12:52p                 1,318 toolbar1.bmp
\par 11/17/96  12:00a                 1,758 Whoosh.wav
\par               39 File(s)         84,270 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069873}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\TypeParser}{\b0\i\fs28 {\*\bkmkend _Toc454069873}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains all the header and code files for the Genesis Editor parsing routines. Ge
dit can read and parse both its own files and Quake style .map files.  It uses the resulting data to build a BSP tree of the walls, floors, ceilings and objects comprising the game level}{\i .  }{
This data can be used to display the level in a variety of views and allows the level designer to manipulate the varoius objects in the level. 
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\Fusion2\\TypeParser
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                28,444 cparser.c
\par 04/26/99  11:26a                 3,705 cparser.h
\par 04/26/99  11:26a                14,727 cscanner.c
\par 04/26/99  11:26a                 2,338 cscanner.h
\par 04/26/99  11:26a                 2,471 HASH.C
\par 04/26/99  11:26a                 1,950 HASH.H
\par 04/26/99  11:26a                 3,319 iden.C
\par 04/26/99  11:26a                 2,293 iden.H
\par 04/26/99  11:26a                 7,782 scanner.c
\par 04/26/99  11:26a                 3,867 scanner.h
\par 04/26/99  11:26a                 4,125 symtab.c
\par 04/26/99  11:26a                 2,907 symtab.h
\par 04/26/99  11:26a                 7,975 type.c
\par 04/26/99  11:26a                 3,436 type.h
\par               16 File(s)         89,339 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069874}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib{\*\bkmkend _Toc454069874} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the cod
e for building the Binary Space Partition tree used by the Genesis3D game engine.  The code in this library takes the layout of the floors, walls, ceilings and objects in the room and uses it to create a binary tree that can be rapidly searched by the Gen
eis3D engine at game time to determine what objects are visible to the player at any given location.  The Genesis3D engine combines both Binary Space Partitioning and Portal technology to provide very fast search and rendering times.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/06/99  04:57p                33,486 Brush2.cpp
\par 04/26/99  11:26a                 3,817 BRUSH2.H
\par 04/26/99  11:27a                12,486 BSP.CPP
\par 04/26/99  11:26a                 7,944 BSP.H
\par 04/26/99  11:27a                37,771 Bsp2.cpp
\par 03/04/98  03:19p                 1,903 build.bat
\par 04/26/99  11:27a                11,681 Fill.Cpp
\par 04/26/99  11:26a                 1,993 Fill.h
\par 04/26/99  11:27a                18,427 GBSPFILE.CPP
\par 04/26/99  11:26a                11,213 GBSPFILE.H
\par 04/26/99  11:27a                 7,622 Gbsplib.cpp
\par 03/24/99  04:14p                 7,680 GBSPLib.dsp
\par 04/26/99  11:26a                 4,143 Gbsplib.h
\par 03/24/99  04:14p                 8,563 GBSPLib.mak
\par 04/26/99  11:27a                30,268 GBSPPREP.CPP
\par 04/26/99  11:26a                 2,132 GBSPPREP.H
\par 04/26/99  11:27a                17,026 Leaf.cpp
\par 04/26/99  11:26a                 2,314 Leaf.h
\par 05/11/99  12:09a                44,204 LIGHT.CPP
\par 05/10/99  09:15p                 6,411 LIGHT.H
\par 04/26/99  11:27a                20,468 MAP.CPP
\par 04/26/99  11:26a                 4,324 MAP.H
\par 04/26/99  11:27a                 4,545 MATHLIB.CPP
\par 04/26/99  11:26a                 2,709 MATHLIB.H
\par 05/15/99  12:23a                   117 mssccprj.scc
\par 05/10/99  09:15p                43,352 POLY.CPP
\par 04/26/99  11:26a                 3,692 POLY.H
\par 04/26/99  11:27a                18,225 PORTALS.CPP
\par 04/26/99  11:26a                 2,379 PORTALS.H
\par 04/26/99  11:27a                12,020 PortFile.cpp
\par 04/26/99  11:27a                46,179 RAD.CPP
\par 05/17/99  06:34p        <DIR>          SDKShare
\par 04/26/99  11:27a                10,298 TEXTURE.CPP
\par 04/26/99  11:26a                 3,240 TEXTURE.H
\par 04/26/99  11:27a                12,534 TJunct.cpp
\par 04/26/99  11:27a                 4,479 Utils.cpp
\par 04/26/99  11:26a                 2,241 Utils.h
\par 04/26/99  11:27a                18,954 VIS.CPP
\par 04/26/99  11:26a                 3,326 VIS.H
\par 04/26/99  11:27a                16,250 VISFLOOD.CPP
\par               42 File(s)        500,416 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069875}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare*{\*\bkmkend _Toc454069875}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Genesis3D headers and the debug and release libraries.  The header files in this subdirectory do diff
er from the other similar tool subdirectories.  The changes are detailed below.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/17/99  06:34p        <DIR>          Include
\par 05/17/99  06:34p        <DIR>          Lib
\par                4 File(s)              0 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 \page {\*\bkmkstart _Toc454069876}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare\\Include{\*\bkmkend _Toc454069876}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Although the include subdirectory is similar to most of the other include subdirec
tories for the other tools,  this subdirectory lacks the actor.h, body.h, ExtBox.h  and font.h files.  In addition it adds Dcommon.h - a header file of common data routines containing much of the same information found in the previous four files along wit
h special functions for manipulating that data which is only required for this tool.  They are specificially left out of the other tool files and the engine to avoid "code bloat", speed compile times and enhance performance.
\par }{\fs20 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare\\Include
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/03/99  03:55p                 3,332 BASETYPE.H
\par 05/03/99  04:06p                23,446 bitmap.h
\par 05/10/99  03:30p                16,061 Dcommon.h
\par 04/27/99  11:53p                11,163 Errorlog.h
\par 05/13/99  08:27p                26,220 GENESIS.H
\par 04/26/99  10:53a                 3,573 getypes.h
\par 04/26/99  10:53a                 9,662 motion.h
\par 04/26/99  10:53a                 6,248 path.h
\par 05/03/99  03:16p                 6,342 pixelformat.h
\par 04/26/99  10:53a                 9,519 quatern.h
\par 04/26/99  10:53a                 5,195 RAM.H
\par 04/26/99  10:53a                 3,903 VEC3D.H
\par 04/26/99  10:53a                 8,113 vfile.h
\par 04/26/99  10:53a                 8,740 XFORM3D.H
\par               16 File(s)        141,517 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069877}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare\\Lib*{\*\bkmkend _Toc454069877} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The files in this subdirectory are the libraries used by GBSPLib portion of GEdit in compilation.  They are the 
same as those used in the Gtest game and the outer /lib subdirectory.  They are included here, separately, to speed compilation times and to separate the compilation of GBSPLib which is called by the GEdit tool from that of the Gedit itself and the Genesi
s3D engine.  In a final release of a newly developed product they }{\ul must}{ be identical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GBSPLib\\SDKShare\\Lib
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/25/99  12:47p             1,123,596 genesis.lib
\par 03/25/99  12:40p             3,428,610 genesisd.lib
\par                4 File(s)      4,552,206 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069878}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview{\*\bkmkend _Toc454069878}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {Code in this library is used to create a simple Genesis3D level viewer.  
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 01/13/99  02:58p                 1,336 cursor.BMP
\par 04/09/99  02:23p                 5,119 drvlist.c
\par 04/09/99  01:35p                   207 drvlist.h
\par 03/10/99  01:43p                 8,208 function.c
\par 03/16/98  11:55a                 2,145 function.h
\par 05/17/99  06:34p        <DIR>          genesissdk
\par 04/09/99  01:54p                30,474 gpreview.c
\par 04/01/99  04:05p                 4,665 GPreview.dsp
\par 03/17/99  12:57p                 4,995 GPreview.mak
\par 04/09/99  02:19p                 2,302 gpreview.rc
\par 05/15/99  12:23a                   119 mssccprj.scc
\par 03/17/99  12:47p                   627 resource.h
\par 01/13/99  05:32p                 5,303 Spot.bmp
\par               15 File(s)         65,500 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069879}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk*{\*\bkmkend _Toc454069879}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Genesis3D headers and the debug and release libraries.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/17/99  06:34p        <DIR>          include
\par 05/17/99  06:34p        <DIR>          lib
\par                4 File(s)              0 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069880}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk\\include{\*\bkmkend _Toc454069880}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This subdirectory contains a copy of the header files used by GPreview in compilation.  It is the same as those in the outer include directory.  They are included here, separately, to speed compilati
on times and to separate the compilation of the GPreview tool from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical.
\par }{\fs20 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk\\include
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                23,693 actor.h
\par 04/26/99  11:26a                 2,685 BASETYPE.H
\par 04/26/99  11:26a                21,977 bitmap.h
\par 04/26/99  11:26a                 5,570 body.h
\par 04/26/99  11:26a                11,081 Errorlog.h
\par 04/26/99  11:26a                 4,577 ExtBox.h
\par 04/26/99  11:26a                13,334 font.H
\par 04/26/99  11:26a                26,019 GENESIS.H
\par 04/26/99  11:26a                 3,573 getypes.h
\par 04/26/99  11:26a                 9,662 motion.h
\par 04/26/99  11:26a                 6,248 path.h
\par 04/26/99  11:26a                 6,424 pixelformat.h
\par 04/26/99  11:26a                 9,519 quatern.h
\par 04/26/99  11:26a                 5,195 RAM.H
\par 04/26/99  11:26a                 3,903 VEC3D.H
\par 04/26/99  11:26a                 8,113 vfile.h
\par 04/26/99  11:26a                 8,740 XFORM3D.H
\par               19 File(s)        170,313 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069881}Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk\\lib*{\*\bkmkend _Toc454069881}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The files in this sub
directory are the libraries used by GPreview in compilation.  They are the same as those used in the Gtest game and the outer /lib subdirectory.  They are included here, separately, to speed compilation times and to separate the compilation of the GPrevie
w tool from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical.
\par }{\f2\fs16\cgrid0 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\GPreview\\genesissdk\\lib
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/25/99  04:13p             1,123,596 genesis.lib
\par 03/25/99  04:06p             3,428,610 genesisd.lib
\par                4 File(s)      4,552,206 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069882}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor*{\*\bkmkend _Toc454069882}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory is used to create the Gen
esis3D tools, Actor Studio, and ActBuild.  These tools are used to create ACT files from 3D Studio Max files.  Actor Studio is a windows based program for working on a single model.  ActBuild is a batch translation version.
\par 
\par The outer subdirectory contains
 the Microsoft  "dsp" and "make" files for compiling the programs. It should be noted here that the mkactor subdirectory name here is a bit misleading since there is also a mkactor subdirectory beneath this one which contains code for making and parsing a
ctor scripts.  The subdirectory name here should have probably been something else more informative.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/17/99  06:34p        <DIR>          ActBuild
\par 03/22/99  05:44p                 7,898 ActBuild.dsp
\par 03/22/99  05:44p                 9,171 ActBuild.mak
\par 05/17/99  06:34p        <DIR>          AStudio
\par 03/24/99  09:37p                11,460 AStudio.dsp
\par 03/24/99  09:37p                13,792 AStudio.mak
\par 05/17/99  06:34p        <DIR>          common
\par 05/17/99  06:34p        <DIR>          Debug
\par 05/17/99  06:34p        <DIR>          fmtactor
\par 05/17/99  06:34p        <DIR>          GenesisSDK
\par 05/17/99  06:34p        <DIR>          mkactor
\par 05/17/99  06:34p        <DIR>          mkbody
\par 05/17/99  06:34p        <DIR>          mkmotion
\par 05/17/99  06:34p        <DIR>          mop
\par 05/15/99  12:24a                   193 mssccprj.scc
\par 05/17/99  06:34p        <DIR>          Release
\par               18 File(s)         42,514 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069883}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\ActBuild{\*\bkmkend _Toc454069883}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the header and C source for the ActBuild program.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\ActBuild
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                 6,270 ActBuild.c
\par 04/26/99  11:26a                 2,405 ActBuild.h
\par                4 File(s)          8,675 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069884}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio}{\b0\i\fs28 {\*\bkmkend _Toc454069884}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory is the base directory for the Actor Studio application.  Actor Studio is an MFC Windows Application and consists of several header, C and C++ files.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                 5,075 AOptions.c
\par 04/26/99  11:26a                 2,786 AOptions.h
\par 04/26/99  11:26a                43,144 AProject.c
\par 04/26/99  11:26a                 7,231 AProject.h
\par 04/26/99  11:27a                 7,747 AStudio.cpp
\par 04/26/99  11:26a                 3,116 AStudio.h
\par 12/16/98  02:57p                19,223 AStudio.rc
\par 04/26/99  11:27a                 7,428 BodyDlg.cpp
\par 04/26/99  11:26a                 3,486 BodyDlg.h
\par 05/17/99  06:34p        <DIR>          HLP
\par 04/26/99  11:27a                 2,791 LogoPage.cpp
\par 04/26/99  11:26a                 3,079 LogoPage.h
\par 04/26/99  11:26a                49,089 make.c
\par 04/26/99  11:26a                 2,447 make.h
\par 10/22/98  06:39p                 1,632 MakeHelp.bat
\par 04/26/99  11:27a                 6,791 MakeHelp.cpp
\par 04/26/99  11:26a                 2,456 MakeHelp.h
\par 04/26/99  11:27a                17,919 MaterialsDlg.cpp
\par 04/26/99  11:26a                 4,085 MaterialsDlg.h
\par 04/26/99  11:27a                20,668 MotionsDlg.cpp
\par 04/26/99  11:26a                 4,269 MotionsDlg.h
\par 04/26/99  11:26a                 8,684 mxscript.c
\par 04/26/99  11:26a                 2,489 mxscript.h
\par 04/26/99  11:27a                 2,674 MyFileDlg.cpp
\par 04/26/99  11:26a                 1,997 MyFileDlg.h
\par 04/26/99  11:27a                 3,134 NewPrjDlg.cpp
\par 04/26/99  11:26a                 2,985 NewPrjDlg.h
\par 04/26/99  11:27a                 4,324 PathsDlg.cpp
\par 04/26/99  11:26a                 3,368 PathsDlg.h
\par 04/26/99  11:27a                 3,195 PropPage.cpp
\par 04/26/99  11:26a                 3,090 PropPage.h
\par 04/26/99  11:27a                27,468 PropSheet.cpp
\par 04/26/99  11:26a                 5,345 PropSheet.h
\par 05/17/99  06:34p        <DIR>          RES
\par 11/04/98  01:26p                 7,741 resource.h
\par 04/26/99  11:27a                 5,712 SettingsDlg.cpp
\par 04/26/99  11:26a                 3,584 SettingsDlg.h
\par 04/26/99  11:27a                 1,951 StdAfx.cpp
\par 04/26/99  11:26a                 2,672 StdAfx.h
\par 04/26/99  11:27a                 5,661 TargetDlg.cpp
\par 04/26/99  11:26a                 3,455 TargetDlg.h
\par 04/26/99  11:27a                 3,057 TextInputDlg.cpp
\par 04/26/99  11:26a                 3,062 TextInputDlg.h
\par 05/17/99  06:34p        <DIR>          Util
\par               46 File(s)        320,110 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069885}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\HLP*{\*\bkmkend _Toc454069885}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The HLP subdirectory contains the Help files for the Actor Studio Application.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\HLP
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 10/14/98  04:05p                 3,891 AfxDlg.rtf
\par 10/14/98  04:05p                   121 AStudio.cnt
\par 10/22/98  05:44p                 5,992 ASTUDIO.HLP
\par 10/22/98  05:44p                 1,625 AStudio.hm
\par 10/22/98  06:40p                 2,287 AStudio.hpj
\par 10/22/98  05:44p                 1,023 AStudio.LOG
\par 10/14/98  04:11p                     0 AStudio.ph
\par                9 File(s)         14,939 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 \page {\*\bkmkstart _Toc454069886}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\RES*{\*\bkmkend _Toc454069886}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The RES Subdirectory contains the resources - icons and bitmaps - for the Actor Studio Application
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\RES
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 10/14/98  04:29p                19,478 ACTVIEW.BMP
\par 11/16/98  11:08p                   766 AStudio.ico
\par 10/14/98  04:05p                   399 AStudio.rc2
\par                5 File(s)         20,643 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069887}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\Util{\*\bkmkend _Toc454069887}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Util subdirectory contains several general utility routines for use by the Actor Studio application including string routines, and array routines and a file path routine.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\AStudio\\Util
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                12,293 Array.c
\par 04/26/99  11:26a                 4,028 ARRAY.H
\par 04/26/99  11:26a                 6,202 FilePath.c
\par 04/26/99  11:26a                 3,861 FilePath.h
\par 04/26/99  11:26a                 2,806 RCSTRING.C
\par 04/26/99  11:26a                 2,470 RCSTRING.H
\par 04/26/99  11:26a                 5,289 UTIL.C
\par 04/26/99  11:26a                 2,544 UTIL.H
\par               10 File(s)         39,493 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069888}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\common{\*\bkmkend _Toc454069888}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The common subdirectory contains routines that are shared by both the Actor Studio and ActBuild programs.  These include matrix math routines, a set of utilities to issue return codes, and ro
utines to create, build, and destroy an animated model.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\common
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                10,709 maxmath.c
\par 04/26/99  11:26a                 2,287 maxmath.h
\par 04/26/99  11:26a                 8,659 mkutil.c
\par 04/26/99  11:26a                 2,466 mkutil.h
\par 04/26/99  11:26a                 5,313 TDBody.c
\par 04/26/99  11:26a                 2,269 TDBody.h
\par                8 File(s)         31,703 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069889}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\Debug*{\*\bkmkend _Toc454069889}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a single text file stating that the debug versions of the code will be created here.
\par }{\f2\fs16\cgrid0 
\par Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\Debug
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/24/99  09:48p                    40 Debug.txt
\par                3 File(s)             40 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069890}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\fmtactor}{\b0\i\fs28 {\*\bkmkend _Toc454069890}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory cont
ains the header and C code for the functions used by ActBuild and Actor Studio.  It is the basic description of the format of an actor script file and includes routines for creating, destroying and parsing actor script instructions.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\fmtactor
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                10,630 fmtactor.c
\par 04/26/99  11:26a                 2,229 fmtactor.h
\par                4 File(s)         12,859 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069891}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK*}{\b0\i\fs28 {\*\bkmkend _Toc454069891}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Genesis3D headers and the debug and release libraries.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/17/99  06:34p        <DIR>          include
\par 05/17/99  06:34p        <DIR>          lib
\par                4 File(s)              0 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069892}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK\\include{\*\bkmkend _Toc454069892}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
This subdirectory contains a copy of the header files used by both ActBuild and AStudio in compilation.  It is the same as those in the outer include directory.  They are included here, separately, to speed compilation times and to separate the compilati
on of the code from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical. 
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK\\include
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                23,693 actor.h
\par 04/26/99  11:26a                 2,685 BASETYPE.H
\par 04/26/99  11:26a                21,977 bitmap.h
\par 04/26/99  11:26a                 5,570 body.h
\par 04/26/99  11:26a                11,081 Errorlog.h
\par 04/26/99  11:26a                 4,577 ExtBox.h
\par 04/26/99  11:26a                13,334 font.H
\par 04/26/99  11:26a                26,019 GENESIS.H
\par 04/26/99  11:26a                 3,573 getypes.h
\par 04/26/99  11:26a                 9,662 motion.h
\par 04/26/99  11:26a                 6,248 path.h
\par 04/26/99  11:26a                 6,424 pixelformat.h
\par 04/26/99  11:26a                 9,519 quatern.h
\par 04/26/99  11:26a                 5,195 RAM.H
\par 10/28/98  12:53p                 1,232 strblock.h
\par 04/26/99  11:26a                 3,903 VEC3D.H
\par 04/26/99  11:26a                 8,113 VFILE.H
\par 04/26/99  11:26a                 8,740 XFORM3D.H
\par               20 File(s)        171,545 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 \page {\*\bkmkstart _Toc454069893}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK\\lib*{\*\bkmkend _Toc454069893}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The files in this 
subdirectory are the libraries used by both Astudio and ActBuild in compilation.  They are the same as those used in the Gtest game and the outer /lib subdirectory.  They are included here, separately, to speed compilation times and to separate the compil
ation of these tools from that of the Genesis3D engine.  In a final release of a newly developed product they should be identical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\GenesisSDK\\lib
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/25/99  12:47p             1,123,596 genesis.lib
\par 03/25/99  12:40p             3,428,610 genesisd.lib
\par                4 File(s)      4,552,206 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069894}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkactor}{\b0\i\fs28 {\*\bkmkend _Toc454069894}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the header and C code for the functions used by ActBuild and Actor Studio to create, destroy and parse actor scripts.
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkactor
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                 9,717 mkactor.c
\par 04/26/99  11:26a                 2,452 mkactor.h
\par                4 File(s)         12,169 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069895}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkbody}{\b0\i\fs28 {\*\bkmkend _Toc454069895}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the header and C 
code for the functions used by ActBuild and Actor Studio to parse a 3D Studio Max file and a Physique file with the appropriate textures to create an actor body.
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkbody
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:27a                63,821 mkbody.cpp
\par 04/26/99  11:26a                 2,446 mkbody.h
\par 04/26/99  11:26a                12,194 vph.c
\par 04/26/99  11:26a                 1,934 vph.h
\par                6 File(s)         80,395 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069896}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkmotion}{\b0\i\fs28 {\*\bkmkend _Toc454069896}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the header and C code for the functions used by ActBuild and Actor Studio to move and 3D Studio generated ACT file.
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mkmotion
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                30,613 mkmotion.c
\par 04/26/99  11:26a                 2,468 mkmotion.h
\par                4 File(s)         33,081 bytes
\par }{\i 
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069897}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mop}{\b0\i\fs28 {\*\bkmkend _Toc454069897}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the header and C code for the functions used by ActBuild and Actor Studio to create logs of character motions.
\par }{\i 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\mop
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                 7,323 Log.c
\par 04/26/99  11:26a                 2,900 Log.h
\par 04/26/99  11:26a                14,268 mopshell.c
\par 04/26/99  11:26a                 2,452 mopshell.h
\par 04/26/99  11:26a                14,747 pop.c
\par 04/26/99  11:26a                 1,945 pop.h
\par                8 File(s)         43,635 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069898}Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\Release*{\*\bkmkend _Toc454069898}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a single text file stating that Release versions of the code will be created here.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\mkactor\\Release
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/24/99  09:48p                    42 Release.txt
\par                3 File(s)             42 bytes
\par }\pard\plain \s5\sb240\sa60\keepn\widctlpar\tx720\outlinelevel4\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069899}Directory of C:\\Genesis3D\\OpenSource\\Tools\\Tpack*{\*\bkmkend _Toc454069899}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains compile instructions for the texture packing utility, Tpack,
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/10/99  05:09p                 1,283 build.bat
\par 05/17/99  06:34p        <DIR>          GenesisSDK
\par 05/15/99  12:24a                   113 mssccprj.scc
\par 03/10/99  02:12p                   572 pull.bat
\par 05/17/99  06:34p        <DIR>          res
\par 05/17/99  06:34p        <DIR>          Source
\par 03/05/99  03:56p                 5,321 TPack.dsp
\par 03/10/99  01:55p                 5,265 TPack.mak
\par               10 File(s)         12,554 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069900}Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK*{\*\bkmkend _Toc454069900}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Genesis3D headers and the debug and release libraries.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/17/99  06:34p        <DIR>          include
\par 05/17/99  06:34p        <DIR>          lib
\par                4 File(s)              0 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069901}Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK\\include{\*\bkmkend _Toc454069901} 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contai
ns a copy of the header files used by TPack in compilation.  It is the same as those in the outer include directory.  They are included here, separately, to speed compilation times and to separate the compilation of the code from that of the Genesis3D eng
ine.  In a final release of a newly developed product they should be identical. 
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK\\include
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/26/99  11:26a                23,693 actor.h
\par 04/26/99  11:26a                 2,685 BASETYPE.H
\par 04/26/99  11:26a                21,977 bitmap.h
\par 04/26/99  11:26a                 5,570 body.h
\par 04/26/99  11:26a                11,081 Errorlog.h
\par 04/26/99  11:26a                 4,577 ExtBox.h
\par 04/26/99  11:26a                13,334 font.H
\par 04/26/99  11:26a                26,019 GENESIS.H
\par 04/26/99  11:26a                 3,573 getypes.h
\par 04/26/99  11:26a                 9,662 motion.h
\par 04/26/99  11:26a                 6,248 path.h
\par 04/26/99  11:26a                 6,424 pixelformat.h
\par 04/26/99  11:26a                 9,519 quatern.h
\par 04/26/99  11:26a                 5,195 RAM.H
\par 04/26/99  11:26a                 3,903 VEC3D.H
\par 04/26/99  11:26a                 8,113 vfile.h
\par 04/26/99  11:26a                 8,740 XFORM3D.H
\par               19 File(s)        170,313 bytes
\par }\pard\plain \s7\sb240\sa60\keepn\widctlpar\tx720\outlinelevel6\adjustright \f1\cgrid {\fs28 {\*\bkmkstart _Toc454069902}Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK\\lib*{\*\bkmkend _Toc454069902}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The files in this subdirectory are the libraries used by TPack in compilation.  They are the same as those used in the 
Gtest game and the outer /lib subdirectory.  They are included here, separately, to speed compilation times and to separate the compilation of this tool from that of the Genesis3D engine.  In a final release of a newly developed product they should be ide
ntical.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\GenesisSDK\\lib
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/25/99  12:47p             1,123,596 genesis.lib
\par 03/25/99  12:40p             3,428,610 genesisd.lib
\par                4 File(s)      4,552,206 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069903}Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\res}{\b0\i\fs28 *{\*\bkmkend _Toc454069903}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a single icon file that is used when the TPack utility is minimized
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\res
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/09/99  09:44a                   766 mainicon.ico
\par                3 File(s)            766 bytes
\par }\pard\plain \s6\sb240\sa60\keepn\widctlpar\tx720\outlinelevel5\adjustright \b\f1\cgrid {\b0\fs28 {\*\bkmkstart _Toc454069904}Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\Source}{\b0\i\fs28 {\*\bkmkend _Toc454069904}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the resource header file and the C code for the TPack program.
\par \page }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\OpenSource\\Tools\\TPack\\Source
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 03/09/99  10:16a                 6,075 resource.h
\par 04/26/99  11:26a                23,165 TPack.c
\par 03/09/99  10:16a                 3,597 TPack.rc
\par                5 File(s)         32,837 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069905}Directory of C:\\Genesis3D\\Redist*{\*\bkmkend _Toc454069905}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a single Microsoft file, CTL3D32.DLL that is necessary for the running of the example program and is not present on all systems in this version.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\Redist
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 10/31/97  11:40a                27,136 CTL3D32.DLL
\par                3 File(s)         27,136 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069906}Directory of C:\\Genesis3D\\src{\*\bkmkend _Toc454069906}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The src directory contains the entire source in the GTest example program.  It has four subdirectories in addition to the outer directory.  The outer directory contains code
 for Network management, the console, and video selection.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\src
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/29/99  01:02a                 3,949 AutoSelect.c
\par 04/18/99  03:06p                 1,655 AutoSelect.h
\par 07/27/98  07:02p                 2,104 bolt.bmp
\par 05/12/99  02:08p                 7,901 BUFFER.C
\par 05/12/99  02:08p                 3,062 BUFFER.H
\par 07/23/98  09:41p                 2,880 CD.C
\par 08/13/97  08:07p                   517 CD.H
\par 05/14/99  09:14p                96,298 Client.c
\par 05/14/99  08:35p                 8,073 CLIENT.H
\par 05/13/99  02:53p                17,222 CONSOLE.C
\par 05/13/99  12:08p                 3,791 CONSOLE.H
\par 07/30/98  09:57a                 2,104 corona.BMP
\par 05/17/99  06:34p        <DIR>          DrvMenu
\par 05/17/99  06:34p        <DIR>          FX
\par 05/17/99  06:34p        <DIR>          Game
\par 05/13/99  12:55p                41,202 GameMgr.c
\par 05/13/99  12:55p                 6,764 Gamemgr.h
\par 05/14/99  08:05p                31,253 Genvs.c
\par 05/11/99  03:06p                39,973 GMENU.C
\par 04/14/99  01:59p                 3,554 GMENU.H
\par 04/27/99  11:57p                10,621 GTest.dsp
\par 04/27/99  11:57p                13,977 GTest.mak
\par 05/15/99  12:19a                 7,065 GTestd.txt
\par 05/15/99  12:21a                 7,670 GTestr.txt
\par 05/14/99  08:33p                 8,700 Host.c
\par 05/12/99  07:09p                 3,391 HOST.H
\par 04/07/99  12:28a                 2,245 ipaddr.c
\par 04/07/99  12:33a                   169 ipaddr.h
\par 04/14/99  02:33p                34,457 MENU.C
\par 04/14/99  02:33p                 5,086 MENU.H
\par 04/14/99  02:33p                 4,918 MENUITEM.H
\par 05/10/99  12:36p                 7,401 modelist.c
\par 04/23/99  02:57p                 2,220 ModeList.h
\par 05/15/99  12:17a                   105 mssccprj.scc
\par 05/13/99  08:58p                10,096 NetMgr.c
\par 05/13/99  06:03p                 6,399 NetMgr.h
\par 05/17/99  06:34p        <DIR>          Procedurals
\par 05/14/99  11:14p                96,653 Server.c
\par 05/14/99  06:47p                 7,023 Server.h
\par 07/29/98  04:05p                 2,104 Terminus.BMP
\par 04/14/99  12:00a                 8,951 TEXT.C
\par 04/13/99  11:30p                 1,666 TEXT.H
\par 04/16/99  01:48a                 2,033 VidMode.c
\par 04/16/99  01:38a                 1,688 VidMode.h
\par               46 File(s)        516,940 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069907}Directory of C:\\Genesis3D\\src\\DrvMenu{\*\bkmkend _Toc454069907}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {When the sample game begins the user selects, which video driver and which video mode they wish to use.  This code is used to implement the user's selections.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\src\\DrvMenu
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 04/15/99  05:11p                 6,585 DRVLIST.C
\par 04/15/99  05:11p                 1,566 DRVLIST.H
\par 04/15/99  04:10p                   783 genvs.rc
\par 04/15/99  02:44p                   593 RESOURCE.H
\par                6 File(s)          9,527 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069908}Directory of C:\\Genesis3D\\src\\FX{\*\bkmkend _Toc454069908}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains various animated lighting effects including coronas, smoke, and particle trails, electric bolts, and dynamic ligh
ts.  These effects are used in the first two levels of the sample game.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\src\\FX
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 01/13/99  07:05p                 4,992 corona.c
\par 01/05/99  06:56p                 2,242 corona.h
\par 04/28/99  12:12a                 4,838 DynLight.c
\par 01/13/99  07:13p                 1,981 DynLight.h
\par 04/19/99  11:55a                17,198 electric.c
\par 01/05/99  07:09p                 2,628 electric.h
\par 03/18/99  01:31p                21,373 Fx.c
\par 03/18/99  01:31p                 3,736 Fx.h
\par 04/28/99  12:12a                 2,440 ModelCtl.c
\par 01/13/99  07:13p                   614 ModelCtl.h
\par               12 File(s)         62,042 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069909}Directory of C:\\Genesis3D\\src\\Game{\*\bkmkend _Toc454069909}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The game subdirectory contains the main routines for the game as well as the AI code for the "bots" which can be placed into the game, and the code for the individual weapons.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\src\\Game
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 05/04/99  04:01p                 8,788 Attacker.c
\par 11/11/98  11:22p                   609 bit.h
\par 05/05/99  02:39p               163,086 bot.c
\par 04/22/99  02:36p                 1,385 bot.h
\par 10/19/98  11:23a                 1,206 botact.h
\par 10/13/98  12:30p                   384 botmatch.h
\par 03/18/99  01:31p                 2,818 Game.h
\par 05/10/99  06:53p                 5,814 Genvs.h
\par 05/04/99  03:17p                15,520 Genvsi.c
\par 05/04/99  03:17p                12,006 Genvsi.h
\par 05/04/99  03:20p                67,674 GMain.c
\par 04/19/99  02:32p                 7,783 GMain.h
\par 04/28/99  12:29a                 7,354 Gplayer.h
\par 05/05/99  02:40p                28,759 Items.c
\par 05/05/99  02:40p                 7,079 Level.c
\par 01/05/99  06:00p                10,951 PathPt.c
\par 01/05/99  01:55p                 1,755 pathpt.h
\par 01/05/99  06:46p                35,630 Track.c
\par 11/15/98  11:13p                 3,825 track.h
\par 03/23/99  02:13p                32,993 Weapons.c
\par 01/05/99  06:31p                 2,719 _bot.c
\par 11/11/98  11:22p                   799 _bot.h
\par               24 File(s)        418,937 bytes
\par }\pard\plain \s4\sb240\sa60\keepn\widctlpar\tx720\outlinelevel3\adjustright \f1\fs28\cgrid {{\*\bkmkstart _Toc454069910}Directory of C:\\Genesis3D\\src\\Procedurals{\*\bkmkend _Toc454069910}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains code for procedural code for the various special effects, including those in the FX directory.  These effects can be seen in the third demo level of the program.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\src\\Procedurals
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 12/22/98  04:36p                 8,676 bumpmap.c
\par 12/04/98  08:22p                   148 bumpmap.h
\par 03/18/99  01:31p                22,772 ElectricFx.c
\par 03/18/99  01:31p                 1,501 ElectricFx.h
\par 12/04/98  06:48p                   116 example.prc
\par 02/14/99  11:29p                 6,717 fire.c
\par 12/04/98  07:09p                   145 fire.h
\par 05/12/99  01:28a                19,420 gebmutil.c
\par 02/22/99  04:19p                 1,820 gebmutil.h
\par 03/22/99  07:31p                20,910 particles.c
\par 12/05/98  03:34p                   160 particles.h
\par 03/10/99  02:16p                14,454 plasma.c
\par 12/06/98  10:41p                   151 plasma.h
\par 12/22/98  10:47a                 1,523 procedural.h
\par 05/12/99  01:28a                15,122 proceng.c
\par 12/10/98  06:13p                 1,035 proceng.h
\par 01/15/99  05:53p                   813 proceng_tables.c
\par 02/15/99  06:22p                 5,917 procutil.c
\par 02/15/99  06:22p                 2,325 procutil.h
\par 01/15/99  06:11p                 1,901 setformat.c
\par 01/15/99  05:53p                   160 setformat.h
\par 03/18/99  01:31p                17,644 smoke.c
\par 03/18/99  01:31p                 1,490 smoke.h
\par 03/18/99  01:31p                12,676 Water.c
\par 03/18/99  01:31p                 1,490 Water.h
\par               27 File(s)        159,086 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069911}Directory of C:\\Genesis3D\\Tools{\*\bkmkend _Toc454069911}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The Tools subdirectory conta
ins two files, a header and a C source file, which are an example of how to build an "Actor".  The example actor was initially a "drill".  The textures used for this example are created recursively by the drill code and placed in a "maps" subdirectory. Wh
ich has not been included for some time in the download, but the code in the example is still a useful example.  You must simply create a maps subdirectory for the code to be written into if you decide to use the code, or change the location.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\Tools
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 11/18/98  01:18p                16,969 drill.c
\par 09/03/98  12:59a                   466 drill.h
\par                4 File(s)         17,435 bytes
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\b0\i0\f1 {\*\bkmkstart _Toc454069912}Directory of C:\\Genesis3D\\wav*{\*\bkmkend _Toc454069912}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The wav subdirectory contains sound effects used in the demonstration game.
\par 
\par }{\f2\fs16\cgrid0 Directory of C:\\Genesis3D\\wav
\par 
\par 05/17/99  06:34p        <DIR>          .
\par 05/17/99  06:34p        <DIR>          ..
\par 07/27/98  01:26p                84,060 blaster.WAV
\par 07/28/98  04:20p                26,442 blasterbang.WAV
\par 07/26/98  04:26p                12,232 Bounce.wav
\par 07/03/98  04:06p                58,988 die.wav
\par 07/26/98  04:40p               161,748 DoorOpen.wav
\par 07/28/98  04:16p                31,690 grenade.wav
\par 05/15/99  12:17a                18,732 hurt1.wav
\par 05/15/99  12:17a                16,940 hurt2.wav
\par 05/15/99  12:17a                18,732 hurt3.wav
\par 05/15/99  12:17a                16,940 hurt4.wav
\par 07/26/98  04:49p                50,318 itemspwn.wav
\par 07/03/98  04:39p                14,718 jump.wav
\par 04/16/98  12:02p                   786 KeyPress.wav
\par 07/09/98  11:29a                22,858 lockload.wav
\par 07/28/98  04:22p               132,106 loopbzzt.wav
\par 10/02/96  10:44a                41,416 MImpact.wav
\par 12/30/97  04:09p                26,554 MLaunch.wav
\par 07/26/98  06:00p                26,482 onebzzt.wav
\par 07/03/98  03:11p                29,518 PickupHealth.wav
\par 07/26/98  05:41p                67,338 plyrspwn.wav
\par 07/26/98  07:31p                13,654 shredder.wav
\par 07/03/98  03:15p                60,030 WeaponPickup.wav
\par               24 File(s)        932,282 bytes
\par }\pard\plain \s1\qc\sb240\sa60\keepn\widctlpar\tx720\outlinelevel0\adjustright \b\f16\fs36\kerning28\cgrid {\page {\*\bkmkstart _Toc454069913}Genesis3D API Documentation{\*\bkmkend _Toc446558897}{\*\bkmkend _Toc454069913}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {\i 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {{\*\bkmkstart _Toc454069914}Genesis3D API and Tools Documentation{\*\bkmkend _Toc454069914}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
\par }{\i Author's Note: This is one of the earliest of the Genesis3D documents produced by Ecl
ipse.  I have included it here because of the insight it offers into the design process and thinking of the developers when the engine was being created. Readers should view these pages in this light, especially since several of the items mentioned as fut
u
re efforts are actually completed in the 1.0 release. In the original release a series of tables was included describing the various functions in the Include directory.  I have expanded that original table bringing it up to date and adding any information
 provided in the 1.0 Release documentation and included it in the third volume of this series. 
\par 
\par }{The Genesis3D\~Engine APIs and tools make up the programmers half of the SDK for game and application development. This document is intended to provide informati
on about the Tools and APIs to people interested in developing their own applications or extending the demo application that we have provided. The documentation here is being updated frequently, so it is a good idea to check our web site frequently to get
 the latest updates. Also, make sure that you read the readme.txt file in the installation for last minute updates regarding the tools.
\par Please check our web site often for documentation updates: http://www{\*\bkmkstart _Hlt452187683}.{\*\bkmkend _Hlt452187683}Genesis3D.com.
\par }{\cf8 {\*\bkmkstart _Toc446558898}Contents{\*\bkmkend _Toc446558898}
\par }\trowd \clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx1980\clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr
\brdremboss\brdrw15 \cltxlrtb \cellx9359\pard \keepn\widctlpar\intbl\tx720\adjustright {API Over{\*\bkmkstart _Hlt448400232}v{\*\bkmkend _Hlt448400232}iew\cell An area by are
a overview of the engine APIs. Go here to get a description of what we intended for the APIs and to see how they are supposed to fit together.\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl
\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx1980\clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx9359\pard 
\keepn\widctlpar\intbl\tx720\adjustright {{\*\bkmkstart _Hlt446558443}Engine APIs By Area{\*\bkmkend _Hlt446558443}\cell A list of links to the APIs ordered by their areas of functionality. Go here if you want a r
apid index into the function reference manual.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \keepn\widctlpar\intbl\tx720\adjustright {Using The Animation Tools\cell 
A guide to how to use our 3DS Max exporters and conversion utilities for building Actors.\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr
\brdremboss\brdrw15 \cltxlrtb \cellx1980\clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx9359\pard \keepn\widctlpar\intbl\tx720\adjustright {Tool Writer Support\cell 
A description of what you need in order to build Actors using the Actor API.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \keepn\widctlpar\tx720\adjustright {\cf8 {\*\bkmkstart APIOverview}{\*\bkmkend APIOverview}API\~Overview
\par }{
\par The Genesis3D APIs area broken into several areas of functionality. Some of the areas are dependent on one another, but we've made strong efforts to ensure that there is as little dependency as possible. In some cases, we've specifical
ly designed the system to be kept separated. For example, the SoundSystem APIs know nothing about the Engine or World except for one non-critical place. This is to enable people to use their own sound system if they decide that ours is not sufficient for 
their needs.
\par This overview section is intended to communicate what each set of APIs is both capable of doing, and is }{\i supposed}{ to do. APIs live and die by their ease of use and consistency, and we feel that the documentation should provide clear paths for pe
ople to follow. It is very difficult to build an API that has only one way to be used and is still powerful. This can lead to confusion in the workplace about what the APIs are supposed to do.
\par }{\cf8 Basic Data Types
\par }{There are a number of very basic datatypes tha
t Genesis3D defines. These are all implemented in basetype.h, and serve the purpose of clearly defining the size of data fields, and/or isolating machine specific types that might need to change in the future. The types defined there are:
\par geBoolean 
\par geFloat 
\par int32 
\par int16 
\par int8 
\par uint32 
\par uint16 
\par uint8 
\par These datatypes are used throughout all of the other Genesis3D\~APIs.
\par }{\cf8 3D\~Math (geVec3d, geXForm3d and Quaternion)
\par }{Basic 3D\~math operations have been provided in the form of support for vectors, 3D\~transforms and
 quaternions. These three datatypes constitute the bulk of the coordinate system management APIs. Note that in all of the APIs below, we have designed the implementation so that it is safe to pass the same parameter into a source and destination parameter
. For example, if a function is supposed to transform one vector to another, the output vector may be the same as the input vector. \~It is safe to rely upon this behaviour for all of the APIs.
\par geVec3d is a simple 3D vector type with normal vector operations. The reference section provides ample documentation on these APIs.
\par geXForm3d is a transform object designed to convert from one coordinate system to another. Please note that this object is NOT designed to be a generic 4x4 matrix for normal math operation
s. While it can perform in that capacity, the geXForm3d was designed to manage coordinate system transforms, and hence has some restrictions built into it. Also, the debug versions of the APIs include asserts that enforce these restrictions on the transfo
rms.
\par The geXForm3d has most of the standard transform APIs, plus a few additional conventions imposed over the transform. The Genesis3D coordinate system is a right handed coordinate system, and there are some features of the transform that are particularly
 interesting in an application setting. If you take the transpose of the transform, the basis vectors form an orthonormal system with the interesting property that the X vector, when added to a camera position will move the camera subjectively left/right,
 the Y\~
vector will move up/down, and the Z vector will move in/out. These are completely subjective motions, but they are very useful to applications. Consequently, we have provided APIs to extract from the transforms their 'Left', 'Up' and 'In' vectors. Al
so, a transform may be built from an orthonormal system of these vectors directly.
\par Note that the geXForm3d structure is fully defined in the header file. This was done because we felt it critical that developers be able to create the transforms both on the
 stack, and in arrays. This is something we could not accomplish if we had provided create and destroy APIs for the transforms, and made the data types completely opaque.You MUST\~NOT\~use the members of the geXForm3d structure directly. \~
We are likely to ch
ange them in the future, and we will not be supporting direct access to them. Also, you should not write the geXForm3d structures directly to disk. Rather, you should extract the basis vectors and translation, and write those to disk. This will save you f
rom potential structure size differences in future versions of Genesis3D.
\par The Quaternion datatype is a fully featured quaternion. The APIs follow rigidly the mathematical formulations for Quaternions, with the exception of the interpolation and conversion A
PIs. The interpolation APIs are arbitrary, and have no fixed mathematical definition. The conversion APIs convert back and forth from geXForm3d objects, and there is arbitration in the quaternion code to resolve the ambiguities inherent in converting from
 3 dimensional space to 4 dimensional space.
\par }{\cf8 Engine and Driver Systems
\par }{The baseline rendering support is provided through the Engine and Driver systems. These manage the hardware specific parts of rendering, including driver categories\~(Glide, D3D and Softw
are). The Engine APIs include directly exposed 2D decal APIs that are intended to be used for UI elements such as menus. No other drawing APIs are directly exposed through the engine or drivers.
\par The drivers are meta-drivers that are used to encapsulate the 3D\~
drawing support that we are using. Genesis3D currently supports Glide, D3D and software rasterizers. The initialization and functionality of each of these is abstracted into higher levels drivers the Eclipse Entertaiment provides.
\par Before using any othe
r subsystems (except math), you need to create a geEngine object. Once the engine is created, you can get a driver system from it, and query that system for which drivers are supported. Once you've picked a driver, and mode, and told the engine to use the
m, you can begin all drawing operations available.
\par The geEngine API is a frame based API, meaning that you tell the geEngine when to start a render frame, and when to end the frame. In between these calls, you may do all your drawing operations. }{\b Note}{: Textu
re loading operations, including loading and unloading of Actors, }{\b MUST NOT}{\~be done in between a BeginFrame/EndFrame pair.
\par There are currently 3 different main drivers: Glide, D3D and software. Each has its own characteristics that bear some mention.
\par The Gl
ide driver has support for both Voodoo and Voodoo 2 built into it. The driver detects which support you have and adapts accordingly. If you have a Voodoo 2 card, we will use 2 texture mapping units on the card, rendering the world through one unit, and th
e
 light maps through the other. This will give very significant performance benefits. Debugging your applications under the Glide driver is also convenient, as the Glide drivers are enormously forgiving. You can switch from the full screen app back to the 
d
ebugger at any time with Ctrl-F9, without lockups. A caveat to using the Glide driver: on this driver, all world textures are loaded to the card in 8bit palettized form. They are not cached in system memory. Hence, if your world textures (textures used to
 
texture the static geometry of the world) exceed 1.5 megabytes on a 4MB Voodoo card, your performance may suffer. It is also possible that the level will fail to load for lack of texture memory. We have never seen this happen, but it is possible. The ligh
tmaps are not included in the count for this purpose.
\par The D3D drivers support the most cards. There are advantages and disadvantages to the D3D drivers. The D3D drivers are slightly slower than the Glide drivers on comparable cards. The D3D drivers are more
 difficult to debug under, as you tend to lockup when you are in full screen mode. Also, the D3D drivers take longer to initialize for large levels, because of the time involved in creating surfaces for the various textures in the world (lightmap surfaces
 
are numerous). On the plus side, the D3D drivers support many cards, and they do support windowed mode on 3D hardware which supports windowed mode. In addition, we do not load world textures arbitrarily to the video memory; they are cached along with ligh
tmaps, so you do not have the world texture limitation that our Glide driver has.
\par The software driver works on all known hardware, but has limitations. We do not support alpha blending, and the frame rate is slower than that of native hardware drivers. We d
o support RGB lighting. The software driver supports both full screen and windowed mode, and some stretch modes which you can use to dramatically improve performance at the cost of some quality. If you have an AMD machine with 3D-Now technology, the drive
r will take advantage of this for greater performance.
\par When you load the engine, and query the drivers, each driver present on the machine will attempt to determine if it can run. If it passes the tests, then the driver will appear in the enumeration APIs. 
Otherwise, the driver will not appear. For both Glide and software, the tests are trivial. For D3D, however, there is much more flexibility in what is supported in a card, and what is not, so there are a number of tests done before we will accept a card. 
These are the requirements for a D3D driver to be accepted:
\par [requirements here]
\par }{\cf8 Cameras
\par }{Cameras define the context from which rendering is done. When you render a world, you must pass in a camera which is the viewpoint from which the world is rendered.
\par A ge
Camera is created with a clipping rect on the screen to which it is bound. From then on, most applications will only ever need to set the transform of the camera to yield the desired effect. Therefore, most applications will only ever need the following t
hree APIs:
\par geCamera_Create 
\par geCamera_Destroy 
\par geCamera_SetXForm 
\par You can render multiple views of the world in a single frame by rendering the world through two different cameras between a geEngine_BeginFrame/geEngine_EndFrame pair. The two cameras need to 
be using separate clipping rectangles. This can be used to build rearview mirrors, or following cameras.
\par }{\cf8 The World
\par }{The engine renders a geWorld object, which in turn contains a number of things. First and foremost, the geWorld\~object contains the static wo
rld geometry which has been defined by the editor. Beyond this, the world manages textures, Actors, entities and dynamic lights. Anything that is created with the geWorld_\~
APIs is owned by the world and will be managed by the world, including being destroyed with the world is destroyed.
\par To best start the discussion about the world, and what a developer can do with it, we need to define a few terms:
\par }\trowd \clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx2160\clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr
\brdremboss\brdrw15 \cltxlrtb \cellx9359\pard \keepn\widctlpar\intbl\tx720\adjustright {\field{\*\fldinst {PRIVATE}{{\*\datafield 
020203001a020000000001ae01000000000000000100040001000300000000009024000000001a0100000000000000000000000000000000000001000000010000000f000000000000000000000000000000000000c4291700ec2917001b0400000a2a17001c080000eb020000200300008c00000000000000000000000000
00000000000000000000000000001c090000a4210000c05800008c0000000000000000000000000000000000000000000000000000001b050000642a17001c0a0000eb020000e0060000000000000000000000000000000000000000000000000000000000001c0b0000a42100002044000000000000000000000000000000
0000000000000000000000000000001b060000c32a17001c0c0000eb02000040060000000000000000000000000000000000000000000000000000000000001c0d0000a421000080390000000000000000000000000000000000000000000000000000000000001b070000222b17001c0e0000eb020000c003000000000000
0000000000000000000000000000000000000000000000001c0f0000a4210000401500000000000000000000000000000000000000000000000000000000000000}}}{\fldrslt }}{Model\cell A collection of geometry which can be manipulated independently of other models. The Editor cr
eates models. Models may have keyframed motions.\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx2160
\clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx9359\pard \keepn\widctlpar\intbl\tx720\adjustright {Light Style\cell 
A lighting brightness pattern defined by the programmer which is applied to lightmaps tagged with that style.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \keepn\widctlpar\intbl\tx720\adjustright {Entity Set\cell 
A set of entites, grouped by the type of the entity. The types are defined by the developer.\cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr
\brdremboss\brdrw15 \cltxlrtb \cellx2160\clvertalc\clbrdrt\brdremboss\brdrw15 \clbrdrl\brdremboss\brdrw15 \clbrdrb\brdremboss\brdrw15 \clbrdrr\brdremboss\brdrw15 \cltxlrtb \cellx9359\pard \keepn\widctlpar\intbl\tx720\adjustright {Entity\cell 
A developer defined block of data.\cell }\pard \widctlpar\intbl\adjustright {\row }\pard \keepn\widctlpar\tx720\adjustright {\cf8 Static World Data
\par }{The base of the world is the world model. This is static geometry, which has been prelit. This geometry never moves with relation to itself once it has been created. The lev
el designer may build additional models which are prelit, which may or may not have keyframe data. These serve most commonly for doors, and the like. These pieces of geometry can move with respect to each other, and the world model. In general, we refer t
o these models as models, and to the world model as the world, when we are talking about geometry.
\par The world, as edited by the level designer, also contains application specific data. This is data the format of which has been determined by the developer. The editor understands certain keywords in header files, and parses C\~
header files to provide templates for that data in the world editor. Thus the level designer can place entities into the world which match the structures in the header files. The developer
 can then retrieve those entities at runtime through a set of APIs. Treat the data that is in the entities as streamed data. The data can contain pointers to other entities, so the programmer can use the resulting data directly at runtime. The editor and 
engine handle the streaming of the data so that the data structures are consitent when the world is loaded. See the editor documentation for a detailed description of the syntax for defining entity types in header files.
\par When you load a world with geWorld_C
reate, you get a bunch of geometry, plus lighting information, visibility information and entities. The geometry and lighting information are managed almost exclusively be the engine, with the optional exception of geWorld_Model objects and lighting style
s.
\par }{\cf8 Dynamic World Data
\par }{Once loaded in the application, the world becomes a repository for a number of runtime data. Amoung these, are dynamic lights, fog lights, user polygons and actors. These items are all owned by a world, and when the world is destroyed,
 the items are destroyed. These items are also added to the world only at runtime, through the geWorld_ APIs.
\par }{\cf8 Dynamic Lights
\par }{Dynamic lights are an additional lighting pass which is done at runtime. The developer can create up to 32 dynamic lights, and cont
rol the position, radius and color of the light, on a frame by frame basis. The engine updates all of the lightmaps for the world with the dynamic lights, each frame. Dynamic lights are always omni lights.
\par Dynamic lights may optionally cast shadows. The shadows currently are cast only off of static world geometry. Models and actors are not taken into account when casting shadows with dynamic lights.
\par Dynamic lights have a computational cost associated with them that should not be ignored. The larger the ligh
t, the more lightmaps need to be updated each frame, so increasing the size of a light affects performance on an n-squared basis. In addition, shadows are quite expensive to calculate. If you have enabled shadow casting for a dynamic light, you should tak
e additional care about the size of the dynamic light.
\par }{\cf8 Fog
\par }{Fog lights are similar to dynamic lights in terms of control. They have color, size and position, which can be updated on a frame by frame basis. Fog lights are always spherical. Fog lights are an a
dditional update of the lightmaps, with a slight difference: the lightmaps that are updated are affected by your camera position. The engine fogs the lightmaps that are behind the influence of the fog, based on the radius and falloff of the fog light, res
u
lting in the texture being obscured. The result is a good local fog effect. Note that performance of the fog light is n-squared in terms of the size of the fog light. Be careful to keep your fog lights of reasonable radius. If you need to cover a wide are
a, it is better to use several small fog lights, than one large one.
\par }{\cf8 User Polygons
\par }{In addition to the higher level rendering support that the engine provides (world and actors), there are APIs to allow the developer to add arbitrary polygons to a scene. The
re are two types of polygons that the developer may add: textured points, and arbitrary. See the Engine section for a note about decals.
\par Textured points can also be considered sprites. The API takes a texture, and a 3D\~location, and ensures that the textur
e is drawn to face the camera that is being used to render the world. This is basically a convenience API for something that most applications want to do.
\par You may add arbitrary polygons to the world's rendering queue. In this case, you specify a list of ve
rtices in 3D space, along with RGB values and texture coordinates. The APIs let you specify whether or not the polygon should be textured, or gouraud shaded, and whether there should be transparency. The engine handles projection and clipping into the cam
era that is being used to render the scene.
\par }{\cf8 Textures
\par }{There is support for loading your own individual textures for drawing with the user polygon APIs. The APIs currently support loading an Eclipse specific format. See the documentation on the BMP2GFX tool f
or conversion. This support will eventually be replaced with more cohesive texture or material library support, at which point the GFX format will be retired.
\par Textures are loaded into a world, and then drawn with separate APIs. Textures must be 8bit palettized bitmaps for conversion. Palette index 255 is reserved for transparency. \~
Any pixels that are that index will be masked out. Internally the textures are converted to 16bit, depending on the hardware that you are running. Textures must be square, with dimensions being powers of 2.
\par Alpha masks are supported for textures. When loading a texture, you can provide an additional mask texture which is a grey scale mask which will be combined with the texture to form an alpha channel. Hardware which supports alp
ha blending will support this natively. In the software rasterizer, the alpha mask is processed to convert pixels within the low range of transparency to completely transparent, while the other pixels become completely opaque. \~
In otherwords, in the software rasterizer, the alpha mask becomes a ranged transparency mask.
\par }{\b Note}{: Textures }{\b must not}{ be loaded in between calls to geEngine_BeginFrame and geEngine_EndFrame.
\par }{\cf8 Sound and 3D\~Sound
\par }{We have included support for sound in the engine APIs, though we have made
 an attempt to keep these APIs separated from the world APIs so that you can install your own sound system if you so choose. The sound system provided uses Direct Sound for mixing, and provides a simple interface to hide the more bulky DSound interfaces. 
Currently, only WAV files are supported.
\par The APIs provide for loading WAV files as sound definitions, and then playing multiple instances of those sounds efficiently. The sounds can be parameterized at play time with regard to their volume, frequency and pa
nning, and whether or not they should loop.
\par There is separate support for determining the volume, frequency and panning of a sound based upon its location in the world with respect to a camera. We have kept this support distinct from the sound system prope
r so that if you wish you may override the sound system implementation and use our sound positioning API. In the future, we will be adding support to modify a sound's parameters based upon not just position in the world, but the shape of the surrounding g
eometry (echo).
\par }{\cf8 Paths and Motions
\par }{Paths and motions are used internally by two systems:\~Actors and Model keyframing. The Path and Motion APIs allow you to build individual keyframed and blended keyframed sequences, respectively.
\par The Path is an object which 
contains key-frames keyed to time. You have complete freedom to manipulate the key-frames. Two channels are supported: rotation and translation. Several interpolation modes are provided for blending between keys. You can blend with linear interpolation, h
ermite or SQUAD. Internally, Paths use quaternion operations, so there are no problems with singularities.
\par The Motion object is a collection of Paths, Events and sub-motions. Events are just string tags that are assigned to a particular time. They are used 
to annotate Paths so that you can trigger arbitrary events from a motion at a given time, which may be a design dependent time. There are APIs for extracting the event tags at a particular time. The Motion object includes the ability to blend multiple sub
-motions together to get a hierarchical motion. This aspect of the Motion is used to drive the animation system in the Actors.
\par The models in the World Editor are key-framed and stored in Motions. This is done for two reasons: we wanted to have support for E
vents in the model animations, and at some point in time, we anticipate adding hierarchical animation to world geometry in the editor. Hence Paths were not the correct choice for the animation of world models.
\par }{\cf8 Actors
\par }{Actors are skeletal animated meshes. The Actor APIs allow for loading an Actor into the world, cueing motions within an Actor, and doing collision detection against Actors.
\par Actors that are rendered in the world have support for various lighting forms. There is floor lighting, which is taken dir
ectly off the floor point immediately below the actor, and used as an ambient light. There is an arbitrary ambient light, and there is support for taking the light from the nearest dynamic lights in the world. The dynamic lights light the Actors direction
ally, which can be used to great effect.
\par Actors have a range of APIs to be used for animation. At the simplest, you can cue a simple motion, and set the Actor to different poses within that animation. This can be used to make simple Quake-like animation seq
uences. At the other end of the spectrum, you can cue multiple motions within an Actor, and blend them together to get entirely new motions. This can be used to create very organic looking characters with a nearly infinite variety of motions. The second m
ethod is hard to control in your application, but the results are worth it.
\par The complete Actor API supports construction of Actors from the ground up. These APIs can be used by tool makers to build exporters for Actors. A section in this document is dedicat
ed to this purpose, and includes sample code for the Actor APIs to do exactly this.{\*\bkmkstart geCamera_Create}{\*\bkmkstart AnimationTools}{\*\bkmkend geCamera_Create}{\*\bkmkend AnimationTools}
\par }{\cf8  Animation Tools
\par }{Included in the SDK are tools for exporting geometry and animation from 3DS\~Max version 2.x and converting the results to animation data for the engine to consume in the form of Actors. The tools and process are documented here.
\par }{\cf8 Preparing A Mesh For Exporting
\par }{In order to build a mesh for exporting, you must have the following:
\par 3DS\~Max version 2.x 
\par Character Studio 2.0 (Physique/Biped) 
\par Install our plugins for 3DS\~Max. There are two plugins: }{\b keyexp.dle}{ and }{\b nfoexp.dle}{. They have to be placed in the plugins directory for Max.
\par Once you have built your mesh, follow these steps:
\par Build bones (either Max bones or Biped bones) for your mesh
\par Physique the mesh to the bones using rigid vertices. If you don't use rigid attachments, the tools will fail on your model. You must physique the entire mesh.
\par Animate the bones
\par }{\cf8 Exporting Your Animations
\par }{Export a single frame as a reference frame, using the NFO exporter. We recommend a DaVinci pose. This will yield an NFO file.
\par Export each motion individually, using the KEY exporter. This will yield a set of KEY files.
\par Run }{\b mkbody.exe}{ to convert the NFO file to a BDY file.
\par Run }{\b mkmotion.exe}{ on each KEY file to convert them to MOT files. Mkmotion requires you to pass in the BDY file that you created with the last step as a parameter.
\par Optionally, run }{\b mop.exe}{ on your MOT files to optimize them. \~This will radically reduce their size.
\par Run }{\b mkactor.exe}{ with the BDY\~file and any set of the MOT files. This will build your Actor file (ACT). The resulting ACT file is a text format file, and is rather bulky, and slow to load.
\par Create a binary version of the ACT file using }{\b fmtactor.exe}{.
\par The textures for Actors are not packed into the actor file. Instead, the materials that you have referenced in 3DS\~
Max in the materials editor are the names of the bitmaps that will be loaded by the Actor when it loads. The bitmap files must be 8bit palettized, and converted to GFX files with BMP2GFX.EXE. See the discus
sion about textures in the engine API documentation for clarification about the tools, and transparent colors in textures.
\par Motions can be flagged with events. Events are taken from the note track in 3DS\~Max. You can attach a note track to any bone. The tex
t of the note is inserted directly into the motion as the event. It should be a single line of text only. Do not put in any empty line of text as this will confuse the current tools.
\par Smoothing groups are supported in the renderer for Actors, so use them freely to improve the appearance of your models.
\par }{\cf8 {\*\bkmkstart Tool_WriterSupport}{\*\bkmkend Tool_WriterSupport}Tool Writer Support
\par }{This section is intended to provide a very basic overview of what is required to build Actors from the ground up. This is so that 3rd party tool makers can build exporters for their tools to output Actors for Genesis3D to consume.
\par Included in the SDK are the complete Actor APIs, over and above what are found in Genesis.h. The APIs in Genesis.h are intended to be used to manipulate Actors that have already been constructed, and are being used
 in an application. The complete Actor APIs include the APIs for adding elements to the Actors, and writing those Actors to disk.
\par To use the full Actor API, you need to use the following include files:
\par path.h 
\par motion.h 
\par body.h 
\par actor.h 
\par The Path, Motion and Actor headers are more complete versions of those APIs found in Genesis.h, while body.h is a support file needed only to support Actors that are being rendered or constructed.
\par We are not exposing or supporting the internal rendering mechanisms or APIs in the Actor subsystem. These headers have been provided for the express purpose of generating Actors.
\par Included in the SDK is a code fragment that demonstrates how to use the Actor APIs to build an ACT file from the ground up. See the files Tools\\drill.h and Tools\\drill.c in the distribution.
\par 
\par \page 
\par }\pard\plain \s1\qc\sb240\sa60\keepn\widctlpar\tx720\outlinelevel0\adjustright \b\f16\fs36\kerning28\cgrid {{\*\bkmkstart _Toc446558899}{\*\bkmkstart _Toc454069915}Genesis3D Library Header Files{\*\bkmkend _Toc446558899}{\*\bkmkend _Toc454069915}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files here are broken up alphabetically within the subdirectories in which they are found. The purpose of each subdirectory is covered in the Game File Structure Layout section above.

\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i {\*\bkmkstart _Toc454069916}Include Subdirectory{\*\bkmkend _Toc454069916}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {
The header files in this subdirectory comprise the links necessary to create applications using the Genesis3D engine with the pre-created libraries provided by Eclipse.  These are the only include files you need in order to cr
eate an application with Genesis3D if you are not going to attempt to modify the game engine.  For a list of the functions contained in these headers see Volume 3 of this series.
\par 
\par This subdirectory is repeated several times in the individual Tools subdirectories as an aid to speeding the compilation process and to separate the compilation of the Tools from that of the engine and the demonstration game.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558900}{\*\bkmkstart _Toc454069917}Actor.h{\*\bkmkend _Toc446558900}{\*\bkmkend _Toc454069917}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  ACTOR.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                             */
\par /*  Description:  Actor interface                                                  */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par /*   Actor
\par \tab 
\par \tab This object is designed to support character animation.
\par \tab There are two basic objects to deal with.  
\par \tab 
\par \tab Actor Definition (geActor_Def)
\par \tab \tab A geActor_Def embodies the geometry (polygon, and bone information), 
\par \tab \tab and a library of motions that can be applied to that geometry.
\par 
\par \tab Actor
\par \tab \tab A geActor is an instance of an actor definition.  The definition is used for 
\par \tab \tab the geometry, but all additional settings, such as the bone pose, lighting information,
\par \tab \tab and cuing information is unique for a geActor.
\par // GENESIS_PRIVATE_API
\par \tab An Actor Definition is created either from an existing Actor Definition file, or from scratch by 
\par \tab first creating a geBody and geMotions and selecting these into an Actor.  If the Actor Definition
\par \tab is constructed from scratch, the objects selected into it (via SetBody and AddMotion) are
\par \tab then 'owned' by the actor and will be destroyed along with the Actor when it is destroyed.
\par     Of course, when the Actor is loaded from a file, the Body and Motion it creates as it is
\par \tab loaded are cleaned up when the Actor is destroyed.
\par 
\par \tab Once an Actor is created, prepare it for rendering and animating by calling 
\par \tab Actor_RenderPrep().  This must be called (and it must succeed) before any render or
\par \tab pose setting functions can be called.
\par // GENESIS_PUBLIC_API
\par 
\par \tab There are two ways to use an Actor.
\par \tab Direct Control
\par \tab \tab One method is to directly control the skeleton configuration.  Use _SetPose() to set its 
\par \tab \tab skeleton using a geMotion animation.  The pose is positioned in world space relative to the 
\par \tab \tab transform given in SetPose().  Whenever a new skeleton pose is required, call _SetPose() 
\par \tab \tab to reposition the skeleton for a new point in time. 
\par 
\par \tab \tab More complex positioning can be achieved by blending more than one animation.  Use
\par \tab \tab _BlendPose() after a _SetPose() to blend the second geMotion into the first.  Additional
\par \tab \tab blends can be applied by additional _BlendPose() calls.  Each blend is performed on the
\par \tab \tab the existing skeleton (the results of any previous blends).
\par \tab Cuing
\par \tab \tab Another method is to 'cue' up motions that are applied with parameterized blending over time.
\par \tab \tab A cued motion takes effect 'now' in time.  The Actor advances in time and repositions itself
\par \tab \tab according to its currently cued motions with a call to _AnimationStep().  AnimationStep() 
\par \tab \tab redefines what the actor thinks 'now' is.  This causes historical cues to be forgotten, and 
\par \tab \tab motions that are no longer valid are cleaned up.  AnimationTestStep() can be used to position 
\par \tab \tab the actor for potential queries with its currently cued motions at some arbitrary future time 
\par \tab \tab - relative to the last AnimationTestStep() call.  AnimationNudge() applies a given transform 
\par \tab \tab 'instantly' to the current actor's cue list.  This is usefull for moving the actor as a 
\par \tab \tab result of a collision with another object.
\par 
\par \tab If a motion contains joint information that does not exactly match the Actor's skeleton 
\par \tab joints, only the joints that match by name are applied.  So a geMotion can be applied to
\par \tab a portion of the Actor, or a geMotion that has more joint information than the skeleton can
\par \tab be applied and the extra joint information is ignored.  
\par \tab  
\par \tab Examples of this:  If the Actor is a biped and has no tail, but the motion is for a 
\par \tab biped with a tail, the geMotion can be applied, but the tail information will be ignored.
\par \tab Also if there is a geMotion for only a left arm, it can be applied and it will only affect
\par \tab the left arm of the Actor, and consequently its left hand and fingers, but no other 
\par \tab bones that are not children of the affected bones will be changed.
\par 
\par \tab  \tab 
\par */
\par #ifndef GE_ACTOR_H
\par #define GE_ACTOR_H
\par 
\par #include "genesis.h"\tab \tab \tab \tab 
\par #include "basetype.h"
\par #include "extbox.h"
\par #include "bitmap.h"
\par 
\par #include "Motion.h"
\par 
\par #ifdef GE_WORLD_H
\par #include "camera.h"
\par #include "Frustum.h"
\par #endif
\par 
\par #include "Body.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par #ifndef GE_ACTOR_ENUMS
\par #define GE_ACTOR_ENUMS
\par typedef enum 
\par \{
\par \tab \tab GE_ACTOR_BLEND_LINEAR,\tab \tab // Treats the blending amount as a linear value
\par \tab \tab GE_ACTOR_BLEND_HERMITE\tab \tab // Applies a parametric smoothing curve to the blending amount
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab //  so that a linear change in BlendAmount parameters will
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab //  result in a smooth (non-linear) change in blending.
\par \} geActor_BlendingType;
\par 
\par #endif
\par 
\par typedef struct geActor geActor;\tab \tab \tab // an instance of an actor
\par typedef struct geActor_Def geActor_Def;\tab \tab // the deinition of an actor's geometry/bone structure
\par 
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par //---------------------------------------------------------------------------------
\par //   Creation/Destruction functions
\par //---------------------------------------------------------------------------------
\par \tab // Create an 'empty' Actor Definition.
\par GENESISAPI geActor_Def *GENESISCC geActor_DefCreate(void);
\par 
\par \tab // Create an Actor Definition from a file image.
\par GENESISAPI geActor_Def *GENESISCC geActor_DefCreateFromFile(geVFile *pFile);
\par 
\par \tab // Create an additional reference (owner) for the Actor_Definition
\par GENESISAPI void GENESISCC geActor_DefCreateRef(geActor_Def *pActorDefinition);
\par 
\par \tab // Destroy a geActor_Def (its geBody and its geMotions)  Actors that rely on this definition become invalid.
\par \tab // can fail if there are actors still referencing this definition.
\par GENESISAPI geBoolean GENESISCC geActor_DefDestroy(geActor_Def **pActorDefinition);
\par 
\par \tab // Create an Actor instance associated with the given Actor Definition 
\par GENESISAPI geActor *GENESISCC geActor_Create(geActor_Def *ActorDefinition);
\par 
\par \tab // Create an additional reference (owner) for the Actor
\par GENESISAPI void GENESISCC geActor_CreateRef(geActor *Actor);
\par 
\par \tab // Give the Actor Definition a Body.  geActor becomes responsible for its destruction.
\par \tab // sets up default materials as referenced by the Body.
\par GENESISAPI geBoolean GENESISCC geActor_SetBody( geActor_Def *ActorDefinition, geBody *geBodyGeometry);
\par 
\par \tab // Adds a geMotion to the Actor Definition's library.  The ActorDefinition becomes responsible for its destruction.
\par \tab // returns the library index to the new geMotion.
\par GENESISAPI geBoolean GENESISCC geActor_AddMotion(geActor_Def *ActorDefinition, geMotion *M, int *Index);
\par 
\par \tab // Destroy an Actor.  
\par GENESISAPI void GENESISCC geActor_Destroy(geActor **pA);
\par 
\par GENESISAPI geBoolean GENESISCC geActor_DefIsValid(const geActor_Def *A);
\par GENESISAPI geBoolean GENESISCC geActor_IsValid(const geActor *A);
\par 
\par // GENESIS_PUBLIC_APIS
\par //---------------------------------------------------------------------------------
\par //   Queries 
\par //---------------------------------------------------------------------------------
\par // GENESIS_PRIVATE_APIS
\par 
\par \tab // In general: Objects retuned from Get functions should not not be destroyed. 
\par \tab // if ownership is desired, call the objects _CreateRef() function to create another owner. 
\par \tab // (An 'owner' has access to the object regardless of the number of other owners, and 
\par \tab // an owner must call the object's _Destroy() function to relinquish ownership )
\par 
\par \tab // Returns the Actor Definition associated with Actor A
\par GENESISAPI geActor_Def *GENESISCC geActor_GetActorDef(const geActor *A);
\par 
\par \tab // Writes an existing geActor to a file image.  Returns GE_TRUE on success, GE_FALSE on failure.
\par GENESISAPI geBoolean GENESISCC geActor_DefWriteToFile(const geActor_Def *A, geVFile *pFile);
\par \tab 
\par \tab // Returns a geBody pointer from the geActor 
\par GENESISAPI geBody *GENESISCC geActor_GetBody(const geActor_Def *ActorDefinition);
\par 
\par \tab // Returns GE_TRUE if the actor definition has a bone named 'Name'
\par GENESISAPI geBoolean GENESISCC geActor_DefHasBoneNamed(const geActor_Def *Ad, const char *Name );
\par 
\par \tab // Selects a blending type.  BlendingType only affects the meaning of the 
\par \tab // BlendAmount parameter for the blend functions.  Can be changed anytime.
\par GENESISAPI void GENESISCC geActor_SetBlendingType( geActor *A, geActor_BlendingType BlendingType );
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par \tab // Returns the number of geMotions in the geActors geMotion library.
\par GENESISAPI int GENESISCC geActor_GetMotionCount(const geActor_Def *ActorDefinition);
\par 
\par \tab // Returns a geMotion pointer from the geActors geMotion library
\par \tab //   This is an aliased pointer - Not a copy.  Changes to this motion will be reflected
\par \tab //   in the actor.  Destroying this return motion will confuse the actor.
\par \tab // Index must be in range [0..geActor_GetMotionCount-1]
\par GENESISAPI geMotion *GENESISCC geActor_GetMotionByIndex(const geActor_Def *ActorDefinition, int Index );
\par 
\par \tab // Returns a geMotion pointer from the geActors geMotion library
\par \tab //   This is an aliased pointer - Not a copy.  Changes to this motion will be reflected
\par \tab //   in the actor.  Destroying this return motion will confuse the actor.
\par \tab // if there is no motion that matches the given name, the return value will be NULL
\par GENESISAPI geMotion *GENESISCC geActor_GetMotionByName(const geActor_Def *ActorDefinition, const char *Name );
\par 
\par \tab // Returns a motion name given an ActorDef and a motion index.
\par GENESISAPI const char *GENESISCC geActor_GetMotionName(const geActor_Def *ActorDefinition, int Index );
\par 
\par \tab // Returns the number of materials for an instance of an actor.
\par GENESISAPI int GENESISCC geActor_GetMaterialCount(const geActor *A);
\par 
\par \tab // Returns the current material for an instance of an actor
\par GENESISAPI geBoolean GENESISCC geActor_GetMaterial(const geActor *Actor, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap **Bitmap, geFloat *Red, geFloat *Green, geFloat *Blue);
\par 
\par \tab // Allows a material to be overriden in an actor instance
\par GENESISAPI geBoolean GENESISCC geActor_SetMaterial(geActor *Actor, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,  geFloat Red,  geFloat Green,  geFloat Blue);
\par 
\par 
\par 
\par \tab // Gets the current transform for a single bone in A.  (actor space->world space transform)
\par \tab // with a NULL BoneName, this returns the current 'root' transform
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneTransform(const geActor *A, const char *BoneName, geXForm3d *Transform);
\par \tab 
\par \tab // Gets the extent box (axial-aligned bounding box) for a given bone (for the current pose)
\par \tab // if BoneName is NULL, gets the a general bounding box from the body of the actor if it has been set.
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneExtBox(const geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  const char *BoneName,geExtBox *ExtBox);
\par 
\par \tab // Gets the non-axial-aligned bounding box for a given bone (for the current pose)
\par \tab //  The box is specified by a corner, and
\par \tab //  a non-normalized orientation transform.  Add DX,DY,DZ components 
\par \tab //  of the orientation to get other corners of the box
\par \tab // if BoneName is NULL, gets the a general bounding box from the body of the actor if it has been set.
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneBoundingBox(const geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  const char *BoneName,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *Corner,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *DX,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *DY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *DZ);
\par 
\par \tab // Gets the current axial-aligned bounding box for an actor's bone configuration
\par \tab // takes all bones into account
\par GENESISAPI geBoolean GENESISCC geActor_GetDynamicExtBox( const geActor *A, geExtBox *ExtBox);
\par \tab 
\par \tab // Gets an assigned general non changing bounding box from the actor
\par GENESISAPI geBoolean GENESISCC geActor_GetExtBox(const geActor *A, geExtBox *ExtBox);
\par 
\par \tab // Sets an assigned general non changing bounding box from the actor
\par GENESISAPI geBoolean GENESISCC geActor_SetExtBox(geActor *A, const geExtBox *ExtBox,
\par \tab \tab \tab \tab \tab const char *CenterBoxOnThisNamedBone);\tab \tab // NULL uses root position of actor
\par 
\par \tab // Gets the rendering hint bounding box from the actor
\par \tab //   if the RenderHintExtBox is disabled, Enabled is GE_FALSE, and the box returned has zero dimensions, 
\par \tab //   centered at the root position of the actor.  If the RenderHintExtBox is enabled, Enabled is
\par \tab //   GE_TRUE, and the box returned is the one set with _SetRenderHintExtBox, offset by the 
\par \tab //   bone position of the bone named in _SetRenderHintExtBox().
\par GENESISAPI geBoolean GENESISCC geActor_GetRenderHintExtBox(const geActor *A, geExtBox *Box, geBoolean *Enabled);
\par 
\par \tab // Sets a rendering hint bounding box from the actor.  Increases performance by 
\par \tab //   enabling the rendering of the actor to occur only if the box is visible.
\par \tab //   If the box is not visible, a detailed analysis of the actor's current geometry is avoided.
\par \tab //   This does allow errors to occur: 
\par \tab //   If the actor has a bit of geometry that extends outside this box for some
\par \tab //   animation, that extended geometry may not be drawn, if the box if off-screen.   
\par \tab //   If the render hint box is not set, the engine will make no conservative assumptions 
\par \tab //   about the visibility of an actor - it will always be drawn if any portion of it is
\par \tab //   visible.
\par \tab //   To attach the box to the 'root' bone, pass NULL for CenterBoxOnThisNamedBone
\par \tab //   For disabling the hint box: (disabled is default) pass Box with zero mins and maxs
\par GENESISAPI geBoolean GENESISCC geActor_SetRenderHintExtBox(geActor *A, const geExtBox *Box,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *CenterBoxOnThisNamedBone );
\par 
\par 
\par \tab // Returns the pointer which was set with geActor_SetUserData.  NULL if not set.
\par GENESISAPI void *GENESISCC geActor_GetUserData(const geActor *A);
\par 
\par \tab // Sets the actors user data pointer to the given value.  For clients only.
\par GENESISAPI void GENESISCC geActor_SetUserData(geActor *A, void *UserData);
\par 
\par 
\par //--------------------------------------------------------------------------------
\par //   Posing and Rendering
\par //--------------------------------------------------------------------------------
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par #ifdef GE_WORLD_H
\par \tab // Prepares the geActor for rendering and posing.  Call Once once the actor is fully created.
\par \tab // Must be called prior to render/pose/setworldtransform 
\par geBoolean GENESISCC geActor_RenderPrep( geActor *A, geWorld *World);
\par 
\par \tab // Draws the geActor.  (RenderPrep must be called first)
\par geBoolean GENESISCC geActor_RenderThroughFrustum(const geActor *A, geEngine *Engine, geWorld *World, geCamera *Camera, Frustum_Info *FInfo);
\par geBoolean GENESISCC geActor_Render(const geActor *A, geEngine *Engine, geWorld *World, geCamera *Camera);
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par \tab // Poses the actor in its default pose
\par \tab // Transform is where to position the root for this pose.
\par \tab //  if Transform is NULL, the root for the pose is assumed to be the root of the actor.
\par GENESISAPI void GENESISCC geActor_ClearPose(geActor *A, const geXForm3d *Transform);
\par 
\par \tab // Poses the actor using given motion M at a time offset of Time
\par \tab // Transform is where to position the root for this pose.
\par \tab //  if Transform is NULL, the root for the pose is assumed to be the root of the actor.
\par GENESISAPI void GENESISCC geActor_SetPose(geActor *A, const geMotion *Motion, geFloat Time, const geXForm3d *Transform);
\par 
\par \tab // Blends the current pose of the geActor with 
\par \tab //  a new pose using motion M at a time offset of Time
\par \tab // A BlendAmount of 0 will result in the existing pose, A BlendAmount of 1 will
\par \tab // result in the new pose from M.  The BlendingType set by _SetBlendingType() determines
\par \tab // the blending function between 0 and 1
\par \tab // Transform is where to position the root for this pose.
\par \tab //  if Transform is NULL, the root for the pose is assumed to be the root of the actor.
\par GENESISAPI void GENESISCC geActor_BlendPose(geActor *A, const geMotion *Motion, geFloat Time,
\par \tab \tab \tab \tab \tab \tab const geXForm3d *Transform, geFloat BlendAmount);
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneAttachment(const geActor *A, const char *BoneName, geXForm3d *Transform);
\par GENESISAPI geBoolean GENESISCC geActor_SetBoneAttachment(geActor *A, const char *BoneName, geXForm3d *Transform);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par GENESISAPI geBoolean GENESISCC geActor_Attach( geActor *Slave,  const char *SlaveBoneName,
\par \tab \tab \tab \tab \tab \tab const geActor *Master, const char *MasterBoneName, 
\par \tab \tab \tab \tab \tab \tab const geXForm3d *Attachment);
\par 
\par GENESISAPI void GENESISCC geActor_Detach(geActor *Slave);
\par 
\par 
\par // GENESIS_PUBLIC_APIS
\par GENESISAPI geBoolean GENESISCC geActor_SetLightingOptions(geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean UseFillLight,\tab \tab \tab \tab // GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *FillLightNormal,\tab \tab // normalized vector
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat FillLightRed,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat FillLightGreen,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat FillLightBlue,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat AmbientLightRed,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat AmbientLightGreen,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat AmbientLightBlue,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean AmbientLightFromFloor,\tab // GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int MaximumDynamicLightsToUse,\tab \tab // 0 for none
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *LightReferenceBoneName, //NULL for root
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean PerBoneLighting);\tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // if GE_TRUE, then dynamic lighting attenuation and direction is computed
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // for each bone.  if GE_FALSE, then the computations are relative to the 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // single bone named by the LightReferenceBoneName
\par 
\par GENESISAPI geBoolean GENESISCC geActor_GetLightingOptions(const geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean *UseFillLight,\tab \tab \tab // GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *FillLightNormal,\tab \tab \tab // normalized vector
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *FillLightRed,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *FillLightGreen,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *FillLightBlue,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *AmbientLightRed,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *AmbientLightGreen,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *AmbientLightBlue,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean *UseAmbientLightFromFloor,// GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int *MaximumDynamicLightsToUse,\tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const char **LightReferenceBoneName,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean *PerBoneLighting);\tab \tab // NULL for root
\par 
\par 
\par GENESISAPI void GENESISCC geActor_SetScale(geActor *A, geFloat ScaleX,geFloat ScaleY,geFloat ScaleZ);
\par 
\par GENESISAPI geBoolean GENESISCC geActor_SetShadow(geActor *A, 
\par \tab \tab \tab \tab \tab \tab geBoolean DoShadow, 
\par \tab \tab \tab \tab \tab \tab geFloat Radius,
\par \tab \tab \tab \tab \tab \tab const geBitmap *ShadowMap,
\par \tab \tab \tab \tab \tab \tab const char * BoneName);
\par 
\par //  Animation Cuing API:
\par // high level Actor animation:  The principle is that motions can be applied to an actor
\par // and the actor will keep track of which motions are currently appropriate.  Call 
\par //\tab _AnimationStep() to compute a new pose for an elapsed time interval.  The new pose
\par //  will take into account all motions that are 'currently' cued up to be set or blended.
\par 
\par 
\par \tab // cue up a new motion.  The motion begins at the current time.  The motion can be 
\par \tab // blended in or out over time and time scaled.  If the return value is GE_FALSE, the 
\par \tab // animation was not cued up (failure implies Actor is incompletely initialized).
\par GENESISAPI geBoolean GENESISCC geActor_AnimationCue( 
\par \tab \tab geActor *A,\tab \tab \tab \tab \tab \tab // actor to apply animation to
\par \tab \tab geMotion *Motion,\tab \tab \tab \tab // motion to Cue
\par \tab \tab geFloat TimeScaleFactor,\tab \tab // time scale to apply to cued motion
\par \tab \tab geFloat TimeIntoMotion,\tab \tab \tab // time offset to begin motion with (Not TimeScaled)
\par \tab \tab geFloat BlendTime,\tab \tab \tab \tab // time to apply a blend. 
\par \tab \tab geFloat BlendFromAmount,\tab \tab // blend value at current time
\par \tab \tab geFloat BlendToAmount,\tab \tab \tab // blend value after BlendTime time has elapsed
\par \tab \tab const geXForm3d *MotionTransform);\tab // local transform to adjust motion by (NULL implies NO transform)
\par 
\par \tab // removes the last animation cue that was cued up.  Can be called repeatedly to successively
\par \tab // remove older and older cues.  Returns GE_TRUE when a cue was removed, GE_FALSE if there 
\par \tab // are no cues to remove.
\par GENESISAPI geBoolean GENESISCC geActor_AnimationRemoveLastCue( geActor *A );
\par 
\par \tab // applies a time step to actor A.  re-poses the actor according to all currently applicable
\par \tab // Animation Cues. (failure implies Actor is incompletely initialized)
\par GENESISAPI geBoolean GENESISCC geActor_AnimationStep(geActor *A, geFloat DeltaTime );
\par 
\par \tab // applies a 'temporary' time step to actor A.  re-poses the actor according to all 
\par \tab // currently appliciable cues.  (failure implies Actor is incompletely initialized)
\par \tab // DeltaTime is always relative to the the last AnimationStep()
\par GENESISAPI geBoolean GENESISCC geActor_AnimationTestStep(geActor *A, geFloat DeltaTime);
\par 
\par \tab // optimized version of geActor_AnimationStep.  Limits calculations to the bone named BoneName, and it's 
\par \tab // parents.  BoneName will be correctly computed, but the other bones will be wrong.  This is usefull for 
\par \tab // moving and animating an actor that is not actually visible.  Rendering and queries will be 'optimized'
\par \tab // until the actor is given any pose or animation that doesn't go through geActor_AnimationStepBoneOptimized() or 
\par \tab //  geActor_AnimationTestStepBoneOptimized().  BoneName can be NULL to compute only 'root' bone.
\par GENESISAPI geBoolean GENESISCC geActor_AnimationStepBoneOptimized(geActor *A, geFloat DeltaTime, const char *BoneName );
\par 
\par \tab // optimized version of geActor_AnimationTestStep.  Limits calculations to the bone named BoneName, and it's 
\par \tab // parents.  BoneName will be correctly computed, but the other bones will be wrong.  This is usefull for 
\par \tab // moving and animating an actor that is not actually visible.  Rendering and queries will be 'optimized'
\par \tab // until the actor is given any pose or animation that doesn't go through geActor_AnimationStepBoneOptimized() or 
\par \tab //  geActor_AnimationTestStepBoneOptimized().  BoneName can be NULL to compute only 'root' bone.
\par GENESISAPI geBoolean GENESISCC geActor_AnimationTestStepBoneOptimized(geActor *A, geFloat DeltaTime, const char *BoneName);
\par 
\par 
\par \tab // applies an 'immediate' offset to the animated actor
\par GENESISAPI geBoolean GENESISCC geActor_AnimationNudge(geActor *A, geXForm3d *Offset);
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geActor_GetAnimationEvent(geActor *A,\tab \tab \tab \tab \tab \tab 
\par \tab const char **ppEventString);\tab \tab // Return data, if return value is GE_TRUE
\par 
\par \tab // returns number of actors that are currently created.
\par GENESISAPI int GENESISCC geActor_GetCount(void);
\par 
\par // GENESIS_PRIVATE_APIS
\par \tab // call setscale and setshadow after preparing the actor for rendering (renderprep)
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558901}{\*\bkmkstart _Toc454069918}Basetype.h{\*\bkmkend _Toc446558901}{\*\bkmkend _Toc454069918}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BASETYPE.H                                                                          */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Basic type definitions and calling convention defines                  */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_BASETYPE_H
\par #define GE_BASETYPE_H
\par  
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /******** The Genesis Calling Conventions ***********/ 
\par 
\par #define\tab GENESISCC\tab _fastcall
\par 
\par #if\tab defined(BUILDGENESIS) && defined(GENESISDLLVERSION)
\par   #define GENESISAPI\tab _declspec(dllexport)
\par #else
\par   #if\tab defined(GENESISDLLVERSION)
\par     #define GENESISAPI\tab _declspec(dllimport)
\par   #else
\par     #define GENESISAPI
\par   #endif
\par #endif
\par 
\par /******** The Basic Types ****************************/
\par 
\par typedef signed int geBoolean;
\par #define GE_FALSE\tab (0)
\par #define GE_TRUE\tab \tab (1)
\par 
\par typedef float geFloat;
\par 
\par #ifndef NULL
\par #define NULL\tab ((void *)0)
\par #endif
\par 
\par typedef signed long     int32;
\par typedef signed short    int16;
\par typedef signed char     int8 ;
\par typedef unsigned long  uint32;
\par typedef unsigned short uint16;
\par typedef unsigned char  uint8 ;
\par 
\par /******** Macros on Genesis basic types *************/
\par 
\par #define GE_ABS(x)\tab \tab \tab \tab ( (x) < 0 ? (-(x)) : (x) )
\par #define GE_CLAMP(x,lo,hi)\tab \tab ( (x) < (lo) ? (lo) : ( (x) > (hi) ? (hi) : (x) ) )
\par #define GE_CLAMP8(x)\tab \tab \tab GE_CLAMP(x,0,255)
\par #define GE_CLAMP16(x)\tab \tab \tab GE_CLAMP(x,0,65536)
\par #define GE_BOOLSAME(x,y)\tab \tab ( ( (x) && (y) ) || ( !(x) && !(y) ) )
\par 
\par #define GE_EPSILON\tab \tab \tab \tab ((geFloat)0.000797f)
\par #define GE_FLOATS_EQUAL(x,y)\tab ( GE_ABS((x) - (y)) < GE_EPSILON )
\par #define GE_FLOAT_ISZERO(x)\tab \tab GE_FLOATS_EQUAL(x,0.0f)
\par 
\par #define\tab GE_PI\tab \tab \tab \tab \tab ((geFloat)3.14159265358979323846f)
\par 
\par /****************************************************/
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par  
\par  
\par  
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558902}{\*\bkmkstart _Toc454069919}Bitmap.h{\*\bkmkend _Toc446558902}{\*\bkmkend _Toc454069919}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef BITMAP_H
\par #define BITMAP_H
\par 
\par /****************************************************************************************/
\par /*  Bitmap.h                                                                            */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Abstract Bitmap system                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par #include "pixelformat.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /***********************************************************************************/
\par 
\par typedef struct geBitmap\tab \tab \tab geBitmap;
\par typedef struct geBitmap_Palette\tab geBitmap_Palette;
\par 
\par typedef struct geBitmap_Info
\par \{
\par \tab int\tab \tab \tab \tab \tab \tab Width;
\par \tab int\tab \tab \tab \tab \tab \tab Height;
\par \tab int\tab \tab \tab \tab \tab \tab Stride;\tab \tab // stride is in *pixels* ; it is the step to the next line : Stride >= Width
\par \tab gePixelFormat\tab \tab \tab Format;
\par \tab int\tab \tab \tab \tab \tab \tab MinimumMip;\tab //*including* minimumMip == 0 often
\par \tab int\tab \tab \tab \tab \tab \tab MaximumMip;\tab //*including* maximumMip == nummips-1
\par \tab geBoolean\tab \tab \tab \tab HasColorKey;
\par \tab uint32\tab \tab \tab \tab \tab ColorKey;\tab // meaningless unless HasColorKey ; the ColorKey is a Pixel in Format
\par \tab geBitmap_Palette *\tab \tab Palette;
\par \} geBitmap_Info;
\par 
\par /***********************************************************************************/\tab \tab 
\par // Bitmap methods
\par 
\par // see a big comment at the end of this file
\par 
\par /************************************************************************/
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_Create(int Width, int Height, int MipCount, gePixelFormat Format ); 
\par GENESISAPI void\tab \tab \tab GENESISCC\tab geBitmap_CreateRef(geBitmap *Bmp);
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_CreateFromInfo(const geBitmap_Info * pInfo);
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_CreateFromFile( geVFile *F );
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_CreateFromFileName(const geVFile *BaseFS,const char *Name);
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_WriteToFile( const geBitmap *Bmp, geVFile *F );
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_WriteToFileName(const geBitmap * Bmp,const geVFile *BaseFS,const char *Name);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // BaseFS is not really const if it is a virtual file;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //  it *is* const if it is a dos directory
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_Destroy(geBitmap **Bmp);
\par \tab // returns whether Bmp was actually destroyed : not success/failure
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_GetInfo(const geBitmap *Bmp, geBitmap_Info *Info, geBitmap_Info *SecondaryInfo);
\par \tab //LockForWrite returns data in Info's format
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_Blit(const\tab geBitmap *Src, int SrcPositionX, int SrcPositionY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Dst, int DstPositionX, int DstPositionY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int SizeX, int SizeY );
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_BlitMip(const geBitmap * Src, int SrcMip, geBitmap * Dst, int DstMip );
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // don't use this with Src == Dst, use UpdateMips instead !
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_BlitBitmap(const geBitmap * Src, geBitmap * Dst);
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_BlitBestMip(const geBitmap * Src, geBitmap * Dst);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // blits the largest mip from Src that fits in Dst
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_LockForRead(\tab \tab // a non-exclusive lock
\par \tab const geBitmap *\tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip,
\par \tab gePixelFormat \tab \tab Format,
\par \tab geBoolean\tab \tab \tab RespectColorKey,
\par \tab uint32\tab \tab \tab \tab ColorKey);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // not really const, stores lock-count, but *data* is const
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // will do a format conversion!
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_LockForReadNative(
\par \tab const geBitmap *\tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // lock for read in a format that gaurantee no conversions
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // then do GetInfo on the locks to see what you have!
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_LockForWrite(\tab // an exclusive lock
\par \tab geBitmap *\tab \tab \tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip);
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_LockForWriteFormat(
\par \tab geBitmap *\tab \tab \tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip,
\par \tab gePixelFormat \tab \tab Format);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // Format must be one of the two returned in GetInfo !!
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_UnLock(geBitmap *Bmp);\tab // must be done on All locked mips
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_UnLockArray(geBitmap **Locks,int Size);
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetFormat(geBitmap *Bmp, 
\par \tab \tab \tab \tab \tab \tab \tab gePixelFormat NewFormat, 
\par \tab \tab \tab \tab \tab \tab \tab geBoolean RespectColorKey, uint32 ColorKey,
\par \tab \tab \tab \tab \tab \tab \tab const geBitmap_Palette * Palette);
\par \tab // _SetFormat may cause you to lose color information!
\par \tab // SetFormat does a conversion!
\par \tab // if NewFormat is palettized and Palette is NULL, we create a palette for the bitmap!
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetFormatMin(geBitmap *Bmp,gePixelFormat NewFormat);
\par \tab \tab \tab \tab \tab \tab \tab \tab // the Min version keeps colorkey & palette from the old format
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_SetColorKey(geBitmap *Bmp, geBoolean HasColorKey, uint32 ColorKey, geBoolean Smart);
\par \tab // SetColorKey discards old colorkey information!
\par \tab //\tab does not do a conversion (changes the colorkey in the current data
\par \tab // if 'Smart' is on, we don't set HasColorKey to true unless it is actually used!
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_GetAverageColor(const geBitmap *Bmp,int *pR,int *pG,int *pB);
\par \tab // tells you the average color; computes it and caches it out
\par 
\par GENESISAPI geBitmap_Palette * \tab GENESISCC\tab geBitmap_GetPalette(const geBitmap *Bmp);
\par GENESISAPI geBoolean\tab \tab \tab GENESISCC\tab geBitmap_SetPalette(geBitmap *Bmp, const geBitmap_Palette *Palette);
\par \tab // _SetPal tries to _CreateRef your Palette, so no copy occurs & palettes may be shared
\par \tab // you may _Destroy() palette after using it to set (though its bits may not be freed)
\par \tab //\tab (hence Palette is *not* const)
\par \tab // Warning : SetPalette on any mip changes the palette of ALL mips !
\par \tab // see Palette note at _UnLock
\par \tab // _SetPal destroys the bitmap's original palette and refs the new one, 
\par \tab //\tab \tab so if you setpal with the bitmap's palette, there is no net change in ref counts (good!)
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_HasAlpha(const geBitmap * Bmp);
\par \tab // returns true if bitmap has *any* type of alpha
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_GetAlpha(const geBitmap *Bmp);
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetAlpha(geBitmap *Bmp, const geBitmap *AlphaBmp);
\par \tab // we Ref the AlphaBmp, so you may destroy it after calling Set()
\par \tab // it may be NULL
\par \tab // there's only one Alpha per bitmap (for the top Mip) right now
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_SetGammaCorrection(geBitmap *Bmp,geFloat Gamma,geBoolean Apply);
\par \tab // this Gamma does not change the *original* (system/secondary) bits
\par \tab //\tab it only affects the appearance when drawn
\par \tab // note : if you write to the gamma corrected bits, you must gamma correct manually if you
\par \tab //\tab wish to fit in smoothly with the previous data
\par \tab // warning : if you use this function with many different gammas, performance will suffer!
\par \tab //\tab use one global gamma for all bitmaps!  try to let the engine manage gamma for you,
\par \tab //\tab via geEngine_SetGamma !
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_SetPreferredFormat(geBitmap *Bmp,gePixelFormat Format);
\par GENESISAPI gePixelFormat\tab GENESISCC\tab geBitmap_GetPreferredFormat(const geBitmap *Bmp);
\par 
\par GENESISAPI void *\tab \tab GENESISCC\tab geBitmap_GetBits(geBitmap *Bmp);\tab // works only on a Lock()
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_RefreshMips(geBitmap *Bmp);\tab // rebuilds mips; *tries* to be smart & not overwrite manually-fixed mips
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // RefreshMips does *not* build mips that don't exist
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_UpdateMips(geBitmap *Bmp,int SourceMip,int TargetMip);\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // will create the target if it doesn't exist;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // will overwrite manually-fixed mips!
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetMipCount(geBitmap *Bmp,int Count);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // creates or destroys to match the new count
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_ClearMips(geBitmap *Bmp);\tab // Destroy all mips (except the first) !
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // use with care! this is not polite!
\par 
\par // Shortcuts
\par GENESISAPI int\tab \tab \tab GENESISCC\tab geBitmap_Width(const geBitmap *Bitmap);
\par GENESISAPI int\tab \tab \tab GENESISCC\tab geBitmap_Height(const geBitmap *Bitmap);
\par GENESISAPI uint32\tab \tab GENESISCC\tab geBitmap_MipBytes(const geBitmap * Bitmap,int mip);
\par 
\par /**
\par *
\par * if Bitmap is a lock for read, functions that modify it return failure
\par * if Bitmap is a lock for write, functions that modify it attempt to
\par *\tab modify the owner of the lock
\par *
\par * warning : if you lock multiple mips for write, and then modify one of the mips
\par *\tab \tab (such as via SetPalette) it may affect the owner and all sibling mips!
\par *\tab \tab doing different SetPalettes with different palettes on different locked mips 
\par *\tab \tab has undefined behavior!
\par *
\par **/
\par 
\par #ifdef _DEBUG
\par GENESISAPI uint32\tab \tab GENESISCC\tab geBitmap_Debug_GetCount(void);
\par 
\par \tab // assert this is zero before you shutdown !
\par 
\par #endif
\par 
\par /***********************************************************************************/
\par 
\par typedef enum
\par \{
\par \tab GE_BITMAP_STREAMING_ERROR=0,
\par \tab GE_BITMAP_STREAMING_NOT,
\par \tab GE_BITMAP_STREAMING_STARTED,
\par \tab GE_BITMAP_STREAMING_IDLE,
\par \tab GE_BITMAP_STREAMING_CHANGED,
\par \tab GE_BITMAP_STREAMING_DATADONE,
\par \tab GE_BITMAP_STREAMING_DONE,
\par \} geBitmap_StreamingStatus;
\par 
\par GENESISAPI geBitmap_StreamingStatus GENESISCC geBitmap_GetStreamingStatus(const geBitmap *Bmp);
\par 
\par \tab \tab /** on a file which is streaming, the sequence of returns looks like :
\par 
\par \tab \tab \tab GE_BITMAP_STREAMING_IDLE
\par \tab \tab \tab GE_BITMAP_STREAMING_CHANGED
\par \tab \tab \tab GE_BITMAP_STREAMING_IDLE
\par \tab \tab \tab GE_BITMAP_STREAMING_IDLE
\par \tab \tab \tab GE_BITMAP_STREAMING_CHANGED
\par \tab \tab \tab ...
\par \tab \tab \tab GE_BITMAP_STREAMING_DONE
\par \tab \tab \tab GE_BITMAP_STREAMING_NOT
\par \tab \tab \tab GE_BITMAP_STREAMING_NOT
\par \tab \tab \tab GE_BITMAP_STREAMING_NOT
\par \tab \tab \tab ...
\par 
\par \tab \tab Status >= GE_BITMAP_STREAMING_STARTED means streaming has started & is in progress
\par 
\par \tab \tab the user should never see _STARTED or _DATADONE
\par 
\par \tab \tab ***/
\par 
\par /***********************************************************************************/
\par 
\par // palette methods :
\par 
\par GENESISAPI geBitmap_Palette * \tab GENESISCC\tab geBitmap_Palette_Create(gePixelFormat Format,int Size);
\par 
\par GENESISAPI geBitmap_Palette * \tab GENESISCC\tab geBitmap_Palette_CreateCopy(const geBitmap_Palette *Palette);
\par 
\par GENESISAPI geBitmap_Palette *\tab GENESISCC\tab geBitmap_Palette_CreateFromFile(geVFile *F);
\par 
\par GENESISAPI geBitmap_Palette *\tab GENESISCC\tab geBitmap_Palette_CreateFromBitmap(geBitmap * Bmp,geBoolean Slow);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // does GetPalette, and if NULL, then
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // it create an optimal palette for a
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //\tab non-palettized bitmap
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //\tab (this is a create, you must destroy later!)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // put Slow == TRUE for higher quality & slower
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SortColors(geBitmap_Palette * P,geBoolean Slower);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_CreateRef(geBitmap_Palette *Palette);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_Destroy(geBitmap_Palette ** ppPalette);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_WriteToFile(const geBitmap_Palette *Palette,geVFile *F);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetFormat(geBitmap_Palette * Palette,gePixelFormat Format);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_Copy(const geBitmap_Palette * Src,geBitmap_Palette * Target);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetInfo(const\tab geBitmap_Palette *P,geBitmap_Info *Into);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // get the info as if it were a bitmap; Into->Height == 1
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_Lock(geBitmap_Palette *Palette, void **pBits, gePixelFormat *pFormat,int *pSize);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // pFormat & pSize are optional
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_UnLock(geBitmap_Palette *Palette);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // palette unlock does NOT notify the bitmap that the palette has changed.
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // call Bitmap_SetPalette() with the same palette pointer 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // \tab to tell the bitmap that it must to some processing
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // (don't worry, it won't duplicate it or copy it onto itself)
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetData(const geBitmap_Palette *P,      void *Into,gePixelFormat Format,int Colors);
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetData(      geBitmap_Palette *P,const void *From,gePixelFormat Format,int Colors);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // does Lock/UnLock for you
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // From and Into are arrays of Colors*gePixelFormat_BytesPerPel bytes
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetEntryColor(      geBitmap_Palette *P,int Color,int R,int G,int B,int A);
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetEntryColor(const geBitmap_Palette *P,int Color,int *R,int *G,int *B,int *A);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Set/Get does Lock/Unlock for you ; these are slow! do not use these to work on all the colors!
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetEntry(      geBitmap_Palette *P,int Color,uint32 Pixel);
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetEntry(const geBitmap_Palette *P,int Color,uint32 *Pixel);
\par 
\par /***********************************************************************************/
\par 
\par /************************************************************************
\par 
\par A brief tutorial on the Bitmap system, by Charles Bloom, cbloom@eclipsegames.com
\par 
\par The Bitmap is a smart wrapper for complex functionality.  You give it hints to
\par the opaque Bitmap object, and it tries its best to follow those hints, but it
\par may not always do so.  The Bitmap is the owner of its bits; you must Lock the
\par bitmap to get permission to touch those bits, and UnLock to tell the bitmap
\par you are done.  The format may change between two Locks.  Bitmaps can also be
\par multiply owned, so you should account for the fact that others may touch your
\par bitmap between your uses.
\par 
\par The Bitmap contains one or two pixel-sets representing an image.  The "primary" is
\par a fast-blitting version of the image, and the "secondary" is a storage version
\par (eventually wavelet compressed) which can be used to rebuild the primary if it is
\par freed or damaged.  Both cary a generalized format.
\par 
\par Let's do an example.  I want to load a bitmap, set it up for drawing with the
\par genesis Engine, and then blit some interactive stuff into it.
\par 
\par ************************************************************************/
\par 
\par #if 0
\par // \{
\par //-----------------------------------------------------------------------------
\par 
\par void Init(geEngine * Engine);
\par void Shutdown(void);
\par void Draw(void);
\par void DrawPolite(void);
\par 
\par static geBitmap * myBM = NULL;
\par static geEngine * myEngine = NULL;
\par 
\par void Init(geEngine * Engine)
\par \{
\par geBoolean success;
\par geBitmap_Info Info;
\par 
\par \tab myEngine = Engine;\tab // this is not looked well upon; for ease of demonstration only!
\par \tab assert(Engine);
\par 
\par \tab myBM = geBitmap_CreateFromFileName(NULL,"mybitmap.bmp");
\par 
\par \tab // CreateFromFile can load windows BMP files, or custom GeBm files.
\par 
\par \tab assert(myBM);
\par 
\par \tab // get the main info; I don't care about the secondary, so leave it NULL
\par 
\par \tab success = geBitmap_GetInfo(myBM,&Info,NULL);
\par \tab assert(success);
\par 
\par \tab // make sure I loaded a bitmap in the format I understand !
\par 
\par \tab if ( Info.Format == GE_PIXELFORMAT_8BIT_PAL )
\par \tab \{
\par \tab \tab // I want palette index 255 to act as transparency, so I must use SetColorKey
\par 
\par \tab \tab success = geBitmap_SetColorKey(myBM,GE_TRUE,255);
\par \tab \tab assert(success);
\par 
\par \tab \tab // just for fun, let's modify the palette:
\par \tab \tab if (1)
\par \tab \tab \{
\par \tab \tab geBitmap_Palette * Pal;
\par 
\par \tab \tab \tab // get the palette ; I don't care if its primary or secondary, so
\par \tab \tab \tab /// I don't use the Info.Palette field
\par 
\par \tab \tab \tab Pal = geBitmap_GetPalette(myBM);
\par \tab \tab \tab assert(Pal);
\par 
\par \tab \tab \tab // I'm only fiddling one entry, so don't bother with a full Lock() UnLock()
\par \tab \tab \tab //  sequence on the palette
\par 
\par \tab \tab \tab // make palette index zero bright red; we use alpha = 255 for opaque
\par 
\par \tab \tab \tab success = geBitmap_Palette_SetEntryColor(Pal,0,255,0,0,255);
\par \tab \tab \tab assert(success);
\par 
\par \tab \tab \tab // tell the bitmap system you've changed the palette; this function
\par \tab \tab \tab //  is smart enough to not do unecessary copies or whatever.
\par 
\par \tab \tab \tab success = geBitmap_SetPalette(myBM,Pal);
\par \tab \tab \tab assert(success);
\par \tab \tab \}
\par 
\par \tab \}
\par \tab else
\par \tab \{
\par \tab \tab // otherwise, treat black as transparent, in whatever format I have
\par 
\par \tab \tab success = geBitmap_SetColorKey(myBM,GE_TRUE,gePixelFormat_ComposePixel(Info.Format,0,0,0,0));
\par \tab \tab assert(success);
\par \tab \}\tab 
\par 
\par \tab // note that I did NOT use SetFormat.  SetFormat may do a conversion, and since the original
\par \tab //\tab bitmap was created without colorkey, it would have been converted to a new format but
\par \tab //\tab kept its property of having no colorkey!
\par \tab // (SetFormat will fiddle the bits and whatever way necessary to keep bitmaps as visually similar
\par \tab //\tab \tab as possible)
\par 
\par \tab // I want to fiddle the fast format in 565 later, so cue the bitmap to try to give me that format.
\par 
\par \tab success = geBitmap_SetPreferredFormat(myBM,GE_PIXELFORMAT_16BIT_565_RGB);
\par \tab assert(success);
\par 
\par \tab // Add it to the engine so it can be used for drawing.
\par 
\par \tab success = geEngine_AddBitmap(myEngine,myBM);
\par \tab assert(success);
\par \}
\par 
\par void Shutdown(void)
\par \{
\par geBoolean WasDestroyed;
\par 
\par \tab assert(myBM);
\par \tab 
\par \tab // clean up
\par 
\par \tab geEngine_RemoveBitmap(myEngine,myBM);
\par 
\par \tab WasDestroyed = geBitmap_Destroy(&myBM);
\par 
\par \tab // someone else might have done _CreateRef on our bitmap,
\par \tab //  so we can't be sure it's actually destroyed.
\par \tab // this code is still ready to be run again with a new call to Init()
\par 
\par \tab //assert(WasDestroyed);
\par 
\par \tab myBM = NULL;
\par \tab myEngine = NULL;
\par \}
\par 
\par void Draw(void)
\par \{
\par geBitmap * Lock;
\par geBoolean success;
\par geBitmap_Info Info;
\par uint16 *bits,*bptr;
\par int x,y;
\par 
\par \tab // lets fiddle the bits.
\par \tab // we need to lock the bitmap for write.
\par \tab //\tab LockForWrite is an exclusive lock, unlike LockForRead which is non-blocking
\par \tab // request our favorite format, and only lock Mip 0 (the full size bitmap)
\par 
\par \tab success = geBitmap_LockForWriteFormat(myBM,&Lock,0,0,GE_PIXELFORMAT_16BIT_565_RGB);
\par \tab if ( ! success )
\par \tab \{
\par \tab \tab // well, we tried to be nice; if we were very polite, we would do a LockForWrite
\par \tab \tab // here, and try to fiddle the bits in whatever format we got; However, we aren't
\par \tab \tab // that polite, so we just do a _SetFormat
\par \tab \tab //
\par \tab \tab // note that we are destroying the original bitmap by changing its format
\par \tab \tab // we should only do this if we are going to draw into the bitmap
\par 
\par \tab \tab success = geBitmap_SetFormat(myBM,GE_PIXELFORMAT_16BIT_565_RGB,GE_TRUE,0,NULL);
\par \tab \tab assert(success);
\par 
\par \tab \tab // now we should be able to get the bits we want, *but* they may not be the
\par \tab \tab // primary (fast) format; oh well, it's the best we can do...
\par \tab \tab // (if you must have the fastest bits, then use only _LockForWrite, never LockForWriteFormat,
\par \tab \tab // which might have to do a conversion)
\par 
\par \tab \tab success = geBitmap_LockForWriteFormat(myBM,&Lock,0,0,GE_PIXELFORMAT_16BIT_565_RGB);
\par \tab \tab assert(success);
\par \tab \}
\par 
\par \tab // now Lock is our bitmap in 565
\par \tab // we do a GetInfo because the Lock's info could be different than
\par \tab //\tab the original bitmap's (particularly the Palette & the Stride)
\par 
\par \tab success = geBitmap_GetInfo(Lock,&Info,NULL);
\par \tab assert(success);
\par 
\par \tab // you can only call _GetBits on a locked bitmap
\par 
\par \tab bits = geBitmap_GetBits(Lock);
\par \tab assert( bits );
\par 
\par \tab bptr = bits;
\par \tab for(y=0; y < Info.Height; y++)
\par \tab \{
\par \tab \tab for(x=0; x < Info.Width; x++)
\par \tab \tab \{
\par \tab \tab uint16 R,G,B;
\par \tab \tab \tab // make a silly 565 gradient
\par \tab \tab \tab R = x & 0x1F;
\par \tab \tab \tab G = x & 0x3F;
\par \tab \tab \tab B = y & 0x1F;
\par 
\par \tab \tab \tab *bptr++ = (R<<11) + (G<<5) + B;
\par \tab \tab \}
\par 
\par \tab \tab // note that bptr is a word pointer, and Stride is in pixels :
\par 
\par \tab \tab bptr += Info.Stride -  Info.Width;
\par \tab \}
\par \tab bits = bptr = NULL;
\par 
\par \tab // you call Unlock on all the mips you locked - not on the original bitmap!
\par 
\par \tab success = geBitmap_UnLock(Lock);
\par \tab assert(success);
\par 
\par \tab // now, we only fiddled the full-size Mip, and there might be more,
\par \tab //  so lets percolate the changes into the smaller mips:
\par 
\par \tab success = geBitmap_RefreshMips(myBM);
\par \tab assert(success);
\par 
\par \tab // a null rect means use the whole bitmap;
\par \tab // Engine_DrawBitmap blits a 2d decal to the framebuffer (fast)
\par 
\par \tab success = geEngine_DrawBitmap(myEngine,myBM,NULL,0,0);
\par \tab assert(success);
\par 
\par \}
\par 
\par void DrawPolite(void)
\par \{
\par geBitmap * Lock;
\par geBoolean success;
\par geBitmap_Info Info;
\par void *bits;
\par int x,y;
\par 
\par \tab // this function does the same thing as Draw() , but is more polite
\par \tab // lock in the fastest format (whatever it is)
\par \tab // because we did SetPreferred, this should be 565_RGB, but might not be
\par 
\par \tab success = geBitmap_LockForWrite(myBM,&Lock,0,0);
\par \tab assert(success);
\par 
\par \tab success = geBitmap_GetInfo(Lock,&Info,NULL);
\par \tab assert(success);
\par 
\par \tab bits = geBitmap_GetBits(Lock);
\par \tab assert( bits );
\par 
\par \tab if ( Info.Format == GE_PIXELFORMAT_16BIT_565_RGB )
\par \tab \{
\par \tab uint16 *wptr;
\par 
\par \tab \tab // our favorite format
\par 
\par \tab \tab wptr = bits;
\par \tab \tab for(y=0; y < Info.Height; y++)
\par \tab \tab \{
\par \tab \tab \tab for(x=0; x < Info.Width; x++)
\par \tab \tab \tab \{
\par \tab \tab \tab uint16 R,G,B;
\par \tab \tab \tab \tab // make a silly 565 gradient
\par \tab \tab \tab \tab R = x & 0x1F;
\par \tab \tab \tab \tab G = x & 0x3F;
\par \tab \tab \tab \tab B = y & 0x1F;
\par 
\par \tab \tab \tab \tab *wptr++ = (R<<11) + (G<<5) + B;
\par \tab \tab \tab \}
\par \tab \tab \tab wptr += Info.Stride -  Info.Width;
\par \tab \tab \}
\par \tab \}
\par \tab else
\par \tab \{
\par \tab uint8 * bptr;
\par 
\par \tab \tab // oh well, do our best
\par \tab \tab // bitmaps must have had a good reason to not give us the format we preferred,
\par 
\par \tab \tab bptr = bits;
\par \tab \tab for(y=0; y < Info.Height; y++)
\par \tab \tab \{
\par \tab \tab \tab for(x=0; x < Info.Width; x++)
\par \tab \tab \tab \{
\par \tab \tab \tab uint32 R,G,B;
\par 
\par \tab \tab \tab \tab // put a color in any format
\par 
\par \tab \tab \tab \tab R = (x & 0x1F)<<3;
\par \tab \tab \tab \tab G = (x & 0x3F)<<2;
\par \tab \tab \tab \tab B = (y & 0x1F)<<3;
\par 
\par \tab \tab \tab \tab // we use alpha of 255 for opaque
\par 
\par \tab \tab \tab \tab gePixelFormat_PutColor(Info.Format,&bptr,R,G,B,255);
\par \tab \tab \tab \}
\par 
\par \tab \tab \tab bptr += (Info.Stride -  Info.Width) * gePixelFormat_BytesPerPel(Info.Format);
\par \tab \tab \}
\par \tab \}
\par \tab bits = NULL;
\par 
\par \tab // same as before:
\par 
\par \tab success = geBitmap_UnLock(Lock);
\par \tab assert(success);
\par 
\par \tab success = geBitmap_RefreshMips(myBM);
\par \tab assert(success);
\par 
\par \tab success = geEngine_DrawBitmap(myEngine,myBM,NULL,0,0);
\par \tab assert(success);
\par 
\par \}
\par 
\par // end tutorial on the Bitmap system
\par //-----------------------------------------------------------------------------
\par // \}
\par 
\par /***********************************************************************************/
\par 
\par #endif
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par 
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558903}{\*\bkmkstart _Toc454069920}Body.h{\*\bkmkend _Toc446558903}{\*\bkmkend _Toc454069920}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BODY.H                                                                              */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Actor body interface.\tab \tab                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_BODY_H
\par #define GE_BODY_H 
\par 
\par /* This object is for managing the data associated with a skeletal-based mesh, 
\par    a 'body'.
\par    This object holds the geometry for the body and the list of materials needed.
\par */
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par #include "vfile.h"
\par #include "bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define GE_BODY_NUMBER_OF_LOD\tab \tab \tab (4)\tab \tab // 0 is highest detail
\par #define GE_BODY_NO_PARENT_BONE         (-1)   
\par #define GE_BODY_HIGHEST_LOD            (0)
\par 
\par #define GE_BODY_ROOT\tab \tab \tab \tab \tab (-1)\tab // for specifying 'root' bounding box.
\par 
\par typedef struct geBody geBody;
\par 
\par 
\par 
\par geBody *GENESISCC geBody_Create(void);
\par 
\par void GENESISCC geBody_Destroy(geBody **B);
\par 
\par geBoolean GENESISCC geBody_IsValid(const geBody *B);
\par 
\par 
\par geBoolean GENESISCC geBody_GetGeometryStats(const geBody *B, int lod, int *Vertices, int *Faces, int *Normals);
\par 
\par geBoolean GENESISCC geBody_AddFace(\tab geBody *B,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Vertex1, const geVec3d *Normal1, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat U1, geFloat V1, int BoneIndex1,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Vertex2, const geVec3d *Normal2, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat U2, geFloat V2, int BoneIndex2,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Vertex3, const geVec3d *Normal3, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat U3, geFloat V3, int BoneIndex3,
\par \tab \tab \tab \tab \tab \tab \tab \tab int MaterialIndex);
\par 
\par \tab \tab \tab // Bitmap is added to body.  It's reference count is increased.  Caller still owns a pointer
\par \tab \tab \tab // to the bitmap, and is responsible for destroying it.
\par geBoolean GENESISCC geBody_AddMaterial( geBody *B, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *MaterialName, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Red, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Green, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Blue,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int *MaterialIndex);
\par 
\par \tab \tab \tab // returned bitmap is a pointer to the bitmap in the body's list.  It may not be destroyed.
\par \tab \tab \tab // if caller would like to 'own' a copy of that bitmap pointer, it should call geBitmap_CreateRef()
\par geBoolean GENESISCC geBody_GetMaterial(const geBody *Body, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const char **MaterialName,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap **Bitmap, geFloat *Red, geFloat *Green, geFloat *Blue);
\par 
\par \tab \tab \tab // Bitmap is set into the body.  It's reference count is increased.  Caller still owns a pointer
\par \tab \tab \tab // to the bitmap, and is responsible for destroying it.
\par geBoolean GENESISCC geBody_SetMaterial(geBody *Body, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,  geFloat Red,  geFloat Green,  geFloat Blue);
\par 
\par int GENESISCC geBody_GetMaterialCount(const geBody *B);
\par 
\par geBoolean GENESISCC geBody_AddBone( geBody *B, 
\par \tab \tab \tab \tab \tab \tab \tab int ParentBoneIndex,
\par \tab \tab \tab \tab \tab \tab \tab const char *BoneName, 
\par \tab \tab \tab \tab \tab \tab \tab const geXForm3d *AttachmentMatrix,
\par \tab \tab \tab \tab \tab \tab \tab int *BoneIndex);
\par 
\par geBoolean GENESISCC geBody_ComputeLevelsOfDetail( geBody *B ,int Levels);
\par 
\par int GENESISCC geBody_GetBoneCount(const geBody *B);
\par 
\par void GENESISCC geBody_GetBone(\tab const geBody *B, 
\par \tab \tab \tab \tab \tab \tab int BoneIndex, 
\par \tab \tab \tab \tab \tab \tab const char **BoneName,
\par \tab \tab \tab \tab \tab \tab geXForm3d *Attachment, 
\par \tab \tab \tab \tab \tab \tab int *ParentBoneIndex);
\par 
\par int32 GENESISCC geBody_GetBoneNameChecksum(const geBody *B);
\par 
\par void GENESISCC geBody_SetBoundingBox( geBody *B,
\par \tab \tab \tab \tab \tab \tab \tab int BoneIndex,\tab \tab // GE_BODY_ROOT for specifing 'root' bounding box.
\par \tab \tab \tab \tab \tab \tab \tab const geVec3d *MinimumBoxCorner,
\par \tab \tab \tab \tab \tab \tab \tab const geVec3d *MaximumBoxCorner);
\par  
\par 
\par geBoolean GENESISCC geBody_GetBoundingBox( const geBody *B, 
\par \tab \tab \tab \tab \tab \tab \tab int BoneIndex,\tab \tab // GE_BODY_ROOT for specifing 'root' bounding box.
\par \tab \tab \tab \tab \tab \tab \tab geVec3d *MinimumBoxCorner,
\par \tab \tab \tab \tab \tab \tab \tab geVec3d *MaximumBoxCorner);
\par 
\par geBoolean GENESISCC geBody_GetBoneByName(const geBody* B,
\par \tab const char* BoneName,
\par \tab int* pBoneIndex,
\par \tab geXForm3d* Attachment,
\par \tab int* pParentBoneIndex);
\par 
\par geBoolean GENESISCC geBody_WriteToFile(const geBody *B, geVFile *pFile);
\par geBody  *GENESISCC  geBody_CreateFromFile(geVFile *pFile);
\par 
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558904}{\*\bkmkstart _Toc454069921}Errorlog.h{\*\bkmkend _Toc446558904}{\*\bkmkend _Toc454069921}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  ERRORLOG.H                                                                          */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description: Generic error logging system interface                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_ERRORLOG_H
\par #define GE_ERRORLOG_H
\par 
\par #include "basetype.h"
\par 
\par #ifndef NDEBUG 
\par \tab #define ERRORLOG_FULL_REPORTING
\par #endif
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum
\par \{
\par \tab GE_ERR_INVALID_DRIVER_HANDLE,\tab \tab \tab // Driver not supported
\par \tab GE_ERR_INVALID_MODE_HANDLE,\tab \tab \tab \tab // Mode not supported
\par \tab GE_ERR_DRIVER_INIT_FAILED,\tab \tab \tab \tab // Could not init Driver
\par \tab GE_ERR_DRIVER_ALLREADY_INITIALIZED,\tab \tab // Driver init failure
\par \tab GE_ERR_DRIVER_NOT_FOUND,\tab \tab \tab \tab // File open error for driver
\par \tab GE_ERR_DRIVER_NOT_INITIALIZED,\tab \tab \tab // Driver shutdown failure
\par \tab GE_ERR_INVALID_DRIVER,\tab \tab \tab \tab \tab // Wrong driver version, or bad driver
\par \tab GE_ERR_DRIVER_BEGIN_SCENE_FAILED,
\par \tab GE_ERR_DRIVER_END_SCENE_FAILED,
\par \tab GE_ERR_CREATE_SOUND_MANAGER_FAILED,
\par \tab GE_ERR_CREATE_SOUND_BUFFER_FAILED,
\par \tab GE_ERR_DS_ERROR,
\par \tab GE_ERR_INVALID_WAV,
\par \tab GE_ERR_NO_PERF_FREQ,
\par \tab GE_ERR_FILE_OPEN_ERROR,
\par \tab GE_ERR_FILE_READ_ERROR,
\par \tab GE_ERR_FILE_WRITE_ERROR,
\par \tab GE_ERR_PALETTE_LOAD_FAILURE,
\par \tab GE_ERR_GBSP_LOAD_FAILURE,
\par \tab GE_ERR_INVALID_PARMS,
\par \tab GE_ERR_INVALID_CAMERA,
\par \tab GE_ERR_RENDER_WORLD_FAILED,
\par \tab GE_ERR_BEGIN_WORLD_FAILED,
\par \tab GE_ERR_END_WORLD_FAILED,
\par \tab GE_ERR_BEGIN_MODELS_FAILED,
\par \tab GE_ERR_END_MODELS_FAILED,
\par \tab GE_ERR_BEGIN_MESHES_FAILED,
\par \tab GE_ERR_END_MESHES_FAILED,
\par \tab GE_ERR_RENDER_MESH_FAILED,
\par \tab GE_ERR_BAD_LMAP_EXTENTS,
\par \tab GE_ERR_INVALID_TEXTURE,
\par \tab GE_ERR_REGISTER_WORLD_TEXTURE_FAILED,
\par \tab GE_ERR_REGISTER_LIGHTMAPS_FAILED,
\par \tab GE_ERR_REGISTER_WORLD_PALETTE_FAILED,
\par \tab GE_ERR_REGISTER_MISC_TEXTURE_FAILED,
\par \tab GE_ERR_INVALID_MESH_FILE,
\par \tab GE_ERR_LOAD_BITMAP_FAILED,
\par \tab GE_ERR_MAX_MESH_DEFS,
\par \tab GE_ERR_MESH_MAX_NODES,
\par \tab GE_ERR_INVALID_MESH_MATERIAL,
\par \tab GE_ERR_MAX_MESH_MATERIALS,
\par \tab GE_ERR_MAX_MESH_CLIP_PLANES,
\par \tab GE_ERR_RENDERQ_OVERFLOW,
\par \tab GE_ERR_INVALID_LTYPE,
\par \tab GE_ERR_MAX_ENTITIES,
\par \tab GE_ERR_GET_ENTITY_DATA_ERROR,
\par \tab GE_ERR_INVALID_ENTITY_FIELD_TYPE,
\par \tab GE_ERR_MODEL_NOT_FOUND,
\par \tab GE_ERR_MODEL_NOT_IN_ENTITY,
\par \tab GE_ERR_MAX_TEXTURES,
\par \tab GE_ERR_MAX_DECALS,
\par \tab GE_ERR_MAX_VERTS,
\par \tab GE_ERR_OUT_OF_MEMORY,
\par \tab GE_ERR_INVALID_BSP_TAG,
\par \tab GE_ERR_INVALID_BSP_VERSION,
\par \tab GE_ERR_ERROR_READING_BSP_CHUNK,
\par \tab ERR_PATH_CREATE_ENOMEM,\tab \tab \tab \tab // failure to create a path (memory allocation failed)
\par \tab ERR_PATH_INSERT_R_KEYFRAME,\tab \tab \tab // failure to insert a rotation keyframe
\par \tab ERR_PATH_INSERT_T_KEYFRAME,\tab \tab \tab // failure to insert a translation keyframe
\par \tab ERR_PATH_DELETE_R_KEYFRAME,\tab \tab \tab // failure to delete a rotation keyframe
\par \tab ERR_PATH_DELETE_T_KEYFRAME,\tab \tab \tab // failure to delete a translation keyframe
\par \tab ERR_PATH_FILE_READ,\tab \tab \tab \tab \tab // failure to read from file
\par \tab ERR_PATH_FILE_VERSION,\tab \tab \tab \tab // tried to create path from file with wrong/bad version
\par \tab ERR_PATH_FILE_PARSE,\tab \tab \tab \tab // failure to parse file (unexpected format problem)
\par \tab ERR_PATH_FILE_WRITE,\tab \tab \tab \tab // failure to read from file
\par \tab ERR_MOTION_CREATE_ENOMEM,\tab \tab \tab // failure to create (memory allocation failed)
\par \tab ERR_MOTION_ADDPATH_ENOMEM,\tab \tab \tab // failure to add path into motion (memory allocation failed)
\par \tab ERR_MOTION_ADDPATH_PATH,\tab \tab \tab // failure to add path into motion (path creation failed)
\par \tab ERR_MOTION_ADDPATH_BAD_NAME,\tab \tab // failure to add path into motion due to name conflict
\par \tab ERR_MOTION_INSERT_EVENT,\tab \tab \tab // failure to insert event (memory allocation failed or duplicate key)
\par \tab ERR_MOTION_DELETE_EVENT,\tab \tab \tab // failure to insert event
\par \tab ERR_MOTION_FILE_READ,\tab \tab \tab \tab // failure to read from file
\par \tab ERR_MOTION_FILE_WRITE,\tab \tab \tab \tab // failure to write to file
\par \tab ERR_MOTION_FILE_PARSE,\tab \tab \tab \tab // failure to parse file (unexpected format problem)
\par \tab ERR_TKARRAY_INSERT_IDENTICAL,\tab \tab // failure to insert into list because of existing identical key
\par \tab ERR_TKARRAY_INSERT_ENOMEM,\tab \tab \tab // failure to insert into list because of memory allocation failure
\par \tab ERR_TKARRAY_DELETE_NOT_FOUND,\tab \tab // failure to delete from list because key was not found
\par \tab ERR_TKARRAY_CREATE,\tab \tab \tab \tab \tab // failure to create TKArray object (out of memroy)
\par \tab ERR_TKARRAY_TOO_BIG,\tab \tab \tab \tab // TKArray object can't be added to - it's list is as big as it can get
\par \tab ERR_VKARRAY_INSERT,\tab \tab \tab \tab \tab // insertion to VKArray failed
\par \tab ERR_QKARRAY_INSERT,\tab \tab \tab \tab \tab // insertion to QKArray failed
\par \tab ERR_POSE_CREATE_ENOMEM,\tab \tab \tab \tab // Motion object failed to create (memory allocation failed)
\par \tab ERR_POSE_ADDJOINT_ENOMEM,\tab \tab \tab // Motion_AddJoint failed to allocate/reallocate memory for new joint
\par \tab ERR_TKEVENTS_CREATE_ENOMEM,\tab \tab \tab // failure to create TKEvents object (memory allocation failed)
\par \tab ERR_TKEVENTS_DELETE_NOT_FOUND,\tab \tab // failure to delete from list because key was not found
\par \tab ERR_TKEVENTS_INSERT_ENOMEM,\tab \tab \tab // failure to insert into list because of memory allocation failure
\par \tab ERR_TKEVENTS_INSERT,\tab \tab \tab \tab // failure to insert into list 
\par \tab ERR_TKEVENTS_FILE_READ,\tab \tab \tab \tab // failure to read from data file
\par \tab ERR_TKEVENTS_FILE_WRITE,\tab \tab \tab // failure to write to data file
\par \tab ERR_TKEVENTS_FILE_VERSION,\tab \tab \tab // failure to read tkevents object: file has wrong version
\par \tab ERR_TKEVENTS_FILE_PARSE,\tab \tab \tab // failure to parse file (unexpected format problem)
\par \tab ERR_STRBLOCK_ENOMEM,\tab \tab \tab \tab // failure to create, insert, or append (memory allocation failed)
\par \tab ERR_STRBLOCK_STRLEN,\tab \tab \tab \tab // string too long to insert or append
\par \tab ERR_STRBLOCK_FILE_READ,\tab \tab \tab \tab // failure to read from data file
\par \tab ERR_STRBLOCK_FILE_WRITE,\tab \tab \tab // failure to write to data file
\par \tab ERR_STRBLOCK_FILE_PARSE,\tab \tab \tab // failure to parse reading from input file (unexpected format problem)
\par \tab ERR_BODY_ENOMEM,\tab \tab \tab \tab \tab // failure to create, or add (memory allocation failed)
\par \tab ERR_BODY_FILE_PARSE,\tab \tab \tab \tab // failure to parse reading from input file (unexpected format problem)
\par \tab ERR_BODY_FILE_READ,\tab \tab \tab \tab \tab // failure to read from data file
\par \tab ERR_BODY_FILE_WRITE,\tab \tab \tab \tab // failure to write to data file
\par \tab ERR_BODY_BONEXFARRAY,\tab \tab \tab \tab // XFArray object failed to return array, or array size doesn't match bone count
\par \tab ERR_XFARRAY_ENOMEM,\tab \tab \tab \tab \tab // failure to create. (memory allocation failure)
\par \tab ERR_PUPPET_ENOMEM,\tab \tab \tab \tab \tab // failure to create. (memory allocation failure)
\par \tab ERR_PUPPET_RENDER,\tab \tab \tab \tab \tab // failure to render. 
\par \tab ERR_PUPPET_NO_MATERIALS,\tab \tab \tab // failure to create: associated body has no materials.
\par \tab ERR_PUPPET_LOAD_TEXTURE,\tab \tab \tab // failure to load texture 
\par \tab ERR_TEXPOOL_ENOMEM,\tab \tab \tab \tab \tab // failure to create or add to. (memory allocation/reallocation failure)
\par \tab ERR_TEXPOOL_TOO_BIG,\tab \tab \tab \tab // failure to add to pool, pool is too large.
\par \tab ERR_TEXPOOL_LOAD_TEXTURE,\tab \tab \tab // failure to load texture into pool
\par \tab ERR_TEXPOOL_TEXTURE_NOT_FREE,\tab \tab // texture pool destroyed without first freeing all it's shared textures
\par \tab ERR_ACTOR_ENOMEM,\tab \tab \tab \tab \tab // failure to create. (memory allocation failure)
\par \tab ERR_ACTOR_RENDER_PREP,\tab \tab \tab \tab // failure to prepare actor for rendering (bad Body or allocation failure)
\par \tab ERR_ACTOR_RENDER_FAILED,\tab \tab \tab // failure to render.  failure to get geometry from Body 
\par \tab ERR_ACTOR_TOO_MANY_MOTIONS,\tab \tab \tab // failure to add motion. too many.
\par \tab ERR_ACTOR_FILE_READ,\tab \tab \tab \tab // failure to read from data file.
\par \tab ERR_ACTOR_FILE_PARSE,\tab \tab \tab \tab // failure to parse reading from input file(unexpected format problem)
\par \tab ERR_ACTOR_FILE_WRITE,\tab \tab \tab \tab // failure to write to data file.
\par \tab GE_ERR_INVALID_MODEL_MOTION_FILE,\tab // Bad model motion file (for bsp files)
\par \tab GE_ERR_BAD_BSP_FILE_CHUNK_SIZE,\tab \tab // Chunk size does not match structure size of kind
\par \} geErrorLog_ErrorIDEnumType;
\par 
\par 
\par typedef enum 
\par \{
\par \tab GE_ERR_MEMORY_RESOURCE,
\par \tab GE_ERR_DISPLAY_RESOURCE,
\par \tab GE_ERR_SOUND_RESOURCE,
\par \tab GE_ERR_SYSTEM_RESOURCE,
\par \tab GE_ERR_INTERNAL_RESOURCE,
\par \tab 
\par \tab GE_ERR_FILEIO_OPEN,
\par \tab GE_ERR_FILEIO_CLOSE,
\par \tab GE_ERR_FILEIO_READ,
\par \tab GE_ERR_FILEIO_WRITE,
\par \tab GE_ERR_FILEIO_FORMAT,
\par \tab GE_ERR_FILEIO_VERSION,
\par \tab 
\par \tab GE_ERR_LIST_FULL,
\par \tab GE_ERR_DATA_FORMAT,
\par \tab GE_ERR_SEARCH_FAILURE,
\par \} geErrorLog_ErrorClassType;
\par 
\par GENESISAPI void geErrorLog_Clear(void);
\par \tab // clears error history
\par 
\par GENESISAPI int  geErrorLog_Count(void);
\par \tab // reports size of current error log
\par 
\par GENESISAPI void geErrorLog_AddExplicit(geErrorLog_ErrorClassType,
\par \tab const char *ErrorIDString,
\par \tab const char *ErrorFileString,
\par \tab int LineNumber,
\par \tab const char *UserString,
\par \tab const char *Context);
\par \tab // not intended to be used directly: use ErrorLog_Add or ErrorLog_AddString
\par 
\par 
\par #ifdef ERRORLOG_FULL_REPORTING
\par \tab // 'Debug' version includes a textual error id, and the user string
\par 
\par \tab #define geErrorLog_Add(Error, Context) geErrorLog_AddExplicit(Error, #Error, __FILE__, __LINE__,"", Context)
\par \tab \tab // logs an error.  
\par 
\par \tab #define geErrorLog_AddString(Error,String, Context) geErrorLog_AddExplicit(Error, #Error, __FILE__,__LINE__, String, Context)
\par \tab \tab // logs an error with additional identifing string.  
\par \tab 
\par GENESISAPI\tab geBoolean geErrorLog_AppendStringToLastError(const char *String);// use geErrorLog_AppendString
\par 
\par \tab #define geErrorLog_AppendString(XXX) geErrorLog_AppendStringToLastError(XXX)
\par \tab \tab // adds text to the previous logged error
\par 
\par #else
\par \tab // 'Release' version does not include the textual error id, or the user string
\par 
\par \tab #define geErrorLog_Add(Error, Context) geErrorLog_AddExplicit(Error, "", __FILE__, __LINE__,"", Context)
\par \tab \tab // logs an error.  
\par 
\par \tab #define geErrorLog_AddString(Error,String, Context) geErrorLog_AddExplicit(Error, "", __FILE__,__LINE__, "", Context)
\par \tab \tab // logs an error with additional identifing string.  
\par \tab 
\par \tab #define geErrorLog_AppendString(XXX)
\par \tab \tab // adds text to the previous logged error
\par 
\par #endif
\par 
\par GENESISAPI geBoolean geErrorLog_Report(int History, geErrorLog_ErrorClassType *Error, const char **UserString);
\par \tab // reports from the error log.  
\par \tab // history is 0 for most recent,  1.. for second most recent etc.
\par \tab // returns GE_TRUE if report succeeded.  GE_FALSE if it failed.
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558905}{\*\bkmkstart _Toc454069922}ExtBox.h{\*\bkmkend _Toc446558905}{\*\bkmkend _Toc454069922}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  EXTBOX.H                                                                            */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Axial aligned bounding box (extent box) support                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_EXTBOX_H
\par #define GE_EXTBOX_H
\par 
\par #include "basetype.h"
\par #include "vec3d.h"
\par 
\par #ifdef __cplusplus
\par \tab extern "C" \{
\par #endif
\par 
\par typedef struct geExtBox
\par \{
\par \tab geVec3d Min;
\par \tab geVec3d Max;
\par \} geExtBox;
\par 
\par // Set the values in a box
\par void GENESISCC geExtBox_Set (  geExtBox *B,
\par \tab \tab \tab \tab   geFloat X1,\tab   geFloat Y1,\tab   geFloat Z1,
\par \tab \tab \tab \tab   geFloat X2,\tab   geFloat Y2,\tab   geFloat Z2 );
\par 
\par // Test a box for validity ( non NULL and max >= min )
\par geBoolean GENESISCC geExtBox_IsValid(  const geExtBox *B );
\par 
\par // Set box Min and Max to the passed point
\par void GENESISCC geExtBox_SetToPoint ( geExtBox *B, const geVec3d *Point );
\par 
\par // Extend a box to encompass the passed point
\par void GENESISCC geExtBox_ExtendToEnclose( geExtBox *B, const geVec3d *Point );
\par 
\par // Return result of box intersection.
\par // If no intersection, returns GE_FALSE and bResult is not modified.
\par // If intersection, returns GE_TRUE and fills bResult (if not NULL)
\par // with the intersected box,
\par // bResult may be one of b1 or b2.
\par // 
\par geBoolean GENESISCC geExtBox_Intersection ( const geExtBox *B1, const geExtBox *B2, geExtBox *Result\tab );
\par 
\par // computes union of b1 and b2 and returns in bResult.
\par void GENESISCC geExtBox_Union ( const geExtBox *B1, const geExtBox *B2, geExtBox *Result );
\par 
\par geBoolean GENESISCC geExtBox_ContainsPoint ( const geExtBox *B, const geVec3d  *Point );
\par 
\par void GENESISCC geExtBox_GetTranslation ( const geExtBox *B,       geVec3d *pCenter );
\par void GENESISCC geExtBox_SetTranslation (       geExtBox *B, const geVec3d *pCenter );
\par void GENESISCC geExtBox_Translate      (       geExtBox *B, geFloat DX, geFloat DY, geFloat DZ );
\par 
\par void GENESISCC geExtBox_GetScaling     ( const geExtBox *B,       geVec3d *pScale );
\par void GENESISCC geExtBox_SetScaling     (       geExtBox *B, const geVec3d *pScale );
\par void GENESISCC geExtBox_Scale          (       geExtBox *B, geFloat DX, geFloat DY,geFloat DZ );
\par 
\par //  Creates a box that encloses the entire area of a box that moves along linear path
\par void GENESISCC geExtBox_LinearSweep(\tab const geExtBox *BoxToSweep, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *StartPoint, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *EndPoint, 
\par \tab \tab \tab \tab \tab \tab geExtBox *EnclosingBox );
\par 
\par // Collides a ray with box B.  The ray is directed, from Start to End.  
\par //   Only returns a ray hitting the outside of the box.  
\par //     on success, GE_TRUE is returned, and 
\par //       if T is non-NULL, T is returned as 0..1 where 0 is a collision at Start, and 1 is a collision at End
\par //       if Normal is non-NULL, Normal is the surface normal of the box where the collision occured.
\par geBoolean GENESISCC geExtBox_RayCollision( const geExtBox *B, const geVec3d *Start, const geVec3d *End, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat *T, geVec3d *Normal );
\par 
\par #ifdef __cplusplus
\par \tab \}
\par #endif
\par 
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558906}{\*\bkmkstart _Toc454069923}Font.h{\*\bkmkend _Toc446558906}{\*\bkmkend _Toc454069923}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  FONT.H                                                                              */
\par /*                                                                                      */
\par /*  Author: Thom Robertson                                                              */
\par /*  Description: Bitmapped font support interface                                       */
\par /*               This implementation supports any TrueType fonts provided by Windows    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_FONT_H
\par #define GE_FONT_H
\par 
\par // includes
\par #include "genesis.h"
\par #include "basetype.h"
\par #include "bitmap.h"
\par // **************************
\par // to use this API:
\par 
\par // 2.  geFont_CreateFont().
\par 
\par // 3.  (Optionally) geFont_AddCharacters().
\par // 3A. Otherwise, IF you intend to use geFont_DrawText(), call geFont_AddBitmapBuffer().
\par 
\par // 4.  Between geEngine_BeginFrame() and geEngine_EndFrame(), and after geEngine_RenderWorld(),
\par //       geFont_DrawText(). You may call geFont_DrawTextToBitmap() anytime, though.
\par 
\par // 5.  When finished, geFont_Destroy().
\par 
\par 
\par 
\par //*************************************************************************************** 
\par // these are bit flags for _DrawText(). Currently only _WORDWRAP is implemented, and without
\par // it, the function will still wrap, just not on word boundaries.
\par // Note that these will fail for non ascii fonts.
\par #define GE_FONT_WRAP                0x00000001  // wrap to fit inside the drawing rect
\par #define GE_FONT_WORDWRAP            0x00000002  // wrap on word boundaries
\par #define GE_FONT_JUST_RETURN_FIT     0x00000004  // returns number of characters that fit in drawing rectangle, WITHOUT drawing anything.
\par #define GE_FONT_JUSTIFY_RIGHT       0x00000008
\par #define GE_FONT_JUSTIFY_CENTER      0x00000010
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // opaque structure headers.
\par typedef struct geFont geFont;\tab \tab \tab // an instance of a font
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI geFont *GENESISCC geFont_Create(const geEngine *Engine, const char *fontNameString, 
\par                                                const int fontSize,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab    const int fontWeight , const geBoolean antialiased) ;
\par    // Creates a font, and returns a pointer to it.
\par    // Pass in the string name of the TrueType font (case sensitive), and the height in pixels.
\par    
\par    // ARGUMENTS:
\par    // fontNameString - char pointer to a string containing the case sensitive name of the font.
\par    // fontSize - the pixel height of the requested font.
\par 
\par    // RETURNS:
\par    // success: pointer to the newly created font.
\par    // failure: NULL.
\par 
\par    // NOTE: the new font set has NO actual characters in it at first.  You must add characters
\par    // to it with the _AddCharacters() function before you can use the font.
\par    // NOTE: all fonts start out with a grayscale palette, with the range 0 to 128.
\par 
\par //*************************************************************************************** 
\par GENESISAPI void GENESISCC geFont_CreateRef(geFont *font);
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI void GENESISCC geFont_Destroy(geFont **font);
\par    // destroys a font.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to be destroyed.
\par 
\par    // RETURNS:
\par    // nothing.
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_AddCharacters(geFont *font, 
\par                                                   unsigned char leastIndex, 
\par                                                   unsigned char mostIndex
\par                                                   );
\par    // Adds a set of characters to the font defined by the ascii range passed in 
\par    // (leastIndex and mostIndex, inclusive).
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to add characters to.
\par    // e - pointer to a valid geEngine.
\par    // leastIndex and mostIndex - the ASCII range of characters to add.
\par    // cellBuffer - an allocated hunk of ram to temproarily store the character image
\par    // bufferSize - length of the above buffer
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // This is the function that actually uses the
\par    // Win32 GetGlyphOutline() function to draw the character onto a geBitmap, which can be
\par    // blitted to the screen.
\par 
\par 
\par //*******************************************************************************
\par GENESISAPI void GENESISCC geFont_DestroyBitmapBuffer( geFont *font );
\par    // destroys any valid "scratch-pad" buffer attached to the geFont.
\par    // ARGUMENTS:
\par    // font - pointer to the geFont.
\par    //
\par    // NOTES:
\par    // you'll rarely need to call this function; it's called by geFont_Destroy() anyway.
\par    // Calling this function with a geFont that has no initialized buffer doesn't
\par    // hurt anything.
\par 
\par //*******************************************************************************
\par GENESISAPI geBoolean GENESISCC geFont_AddBitmapBuffer(
\par                                   geFont *font, const uint32 width, const uint32 height);
\par    // Adds a geBitmap to the geFont, to be used as a temporary "scratch-pad".  This is
\par    // required for using geFont_DrawText() when no characters have been added.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the geFont to add a buffer to.
\par    // width and height - the size of the buffer to create.  Make sure this size is >=
\par    // the biggest rectagle of text you'll want to write to the screen using this geFont
\par    // and DrawText().
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // You don't need to call this function IF you _AddCharacters() to this geFont.
\par    // You call this function for each geFont you need to use.  geFont's don't share buffers.
\par    // if you call this function on a geFont that already has a valid buffer, the buffer is
\par    // destroyed, and replaced by the new one.
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_DrawText(geFont *font, const char *textString, 
\par                                            const GE_Rect *Rect, const GE_RGBA *Color, 
\par                                            uint32 flags, const GE_Rect *clipRect);
\par    // This is the function you put between geEngine_BeginFrame() and _EndFrame(), the function
\par    // that draws text to the screen.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to draw with.  IF the font has NO characters in it
\par    //  (added by geFont_AddCharacters() ) then a different, more windows-intensive way is
\par    //  used to draw out the characters.
\par    // textString - pointer to the text string to output to the screen.
\par    // Rect - screen rectangle to place the text within.
\par    // Color - RGB color the text should be.
\par    // flags - a bitfield of GE_FONT_ values.
\par    // clipRect - pointer to a screen rectangle to clip the text to.  MAY BE NULL, in which
\par    // case the text is only clipped by the boundaries of the screen.
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // Assuming you've added characters to the font, characters which have NOT been added
\par    // WILL cause an assert if you try to draw them.  
\par    // Only GE_FONTSET_WORDWRAP is meaningfull right now.  Using any other flags will cause
\par    // an assert.
\par    // As stated above, you can use an entirely different way of creating a string, by
\par    // making a font with no characters in it.  This
\par    // jumps through Windows DIB hoops, and draws the text in a non-anti-aliased, but
\par    // (hopefully) more unicode-tolerant way (DrawText() ).
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_DrawTextToBitmap(geFont *font, const char *textString, 
\par                                            const GE_Rect *Rect, const GE_RGBA *Color, 
\par                                            uint32 flags, const GE_Rect *clipRect,
\par                                            geBitmap *targetBitmap);
\par    // This is the function you put between geEngine_BeginFrame() and _EndFrame(), the function
\par    // that draws text to the screen.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to draw with.  IF the font has NO characters in it
\par    //  (added by geFont_AddCharacters() ) then a different, more windows-intensive way is
\par    //  used to draw out the characters.
\par    // textString - pointer to the text string to output to the screen.
\par    // Rect - screen rectangle to place the text within.
\par    // Color - RGB color the text should be.
\par    // flags - a bitfield of GE_FONT_ values.
\par    // clipRect - pointer to a screen rectangle to clip the text to.  MAY BE NULL, in which
\par    // case the text is only clipped by the boundaries of the screen.
\par    // targetBitmap - pointer to a target bitmap to draw the text into.  MAY NOT BE NULL,
\par    // and MUST BE GE_PIXELFORMAT_8BIT.
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // Assuming you've added characters to the font, characters which have NOT been added
\par    // WILL cause an assert if you try to draw them.  
\par    // Only GE_FONTSET_WORDWRAP is meaningfull right now.  Using any other flags will cause
\par    // an assert.
\par    // As stated above, you can use an entirely different way of creating a string, by
\par    // making a font with no characters in it.  This
\par    // jumps through Windows DIB hoops, and draws the text in a non-anti-aliased, but
\par    // (hopefully) more unicode-tolerant way (DrawText() ).
\par    // The Color argument is will be used to modify the existing palette of the targetBitmap
\par    // passed in.  Therefore, you won't be able to _DrawTextToBitmap() a red piece of text,
\par    // then a green piece, then a blue piece.  You'll end up with three lines of blue text.
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI int32 GENESISCC geFont_GetStringPixelWidth (geFont *font, const char *textString);
\par GENESISAPI int32 GENESISCC geFont_GetStringPixelHeight(geFont *font, const char *textString);
\par    // These two functions return the pixel width and height of the string passed in.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to draw with.
\par    // textString - pointer to the text string to output to the screen.
\par 
\par    // RETURNS:
\par    // success: a positive value in pixels.  IF the text passed in contains characters
\par    //          which haven't been added to the font yet, BUT other characters HAVE
\par    //          been added, the function asserts.
\par    // failure: -1.
\par    // NOTES:
\par    // these two functions assume no text wrapping!
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBitmap* GENESISCC geFont_GetBuffer(geFont *font);
\par    // This function returns a pointer to the drawing buffer contained by the font.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font.
\par 
\par    // RETURNS:
\par    // a valid pointer to a geBitmap, OR NULL, signifying that the buffer wasn't initialized.
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_GetCharMap(geFont *font, uint8 character, GE_Rect *Rect, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geBitmap **targetBitmap, int32 *fullWidth, int32 *fullHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  int32 *offsetX, int32 *offsetY);
\par 
\par //*************************************************************************************** 
\par GENESISAPI void GENESISCC geFont_EnableAntialiasing(geFont *font, const geBoolean anti);
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_IsAntialiased(geFont *font);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558907}{\*\bkmkstart _Toc454069924}Genesis.h{\*\bkmkend _Toc446558907}{\*\bkmkend _Toc454069924}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Genesis.h                                                                           */
\par /*                                                                                      */
\par /*  Description: The master header for Genesis                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GENESIS_H
\par #define GENESIS_H
\par 
\par #include "BaseType.h"
\par #include "Vec3d.h"
\par #include "XForm3d.h"
\par #include "GETypes.h"
\par #include "ExtBox.h"
\par #include "vfile.h"
\par #include "Bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //================================================================================
\par //\tab Constants / Defines / TypDefs
\par //================================================================================
\par 
\par typedef struct\tab \tab geEngine\tab \tab \tab geEngine;
\par 
\par typedef struct\tab \tab geDriver_System\tab \tab geDriver_System;
\par typedef struct\tab \tab geDriver\tab \tab \tab geDriver;
\par typedef struct\tab \tab geDriver_Mode\tab \tab geDriver_Mode;
\par 
\par typedef struct\tab \tab geSound_System\tab \tab geSound_System;
\par typedef struct\tab \tab geSound_Cfg\tab \tab \tab geSound_Cfg;
\par typedef struct\tab \tab geSound_Def\tab \tab \tab geSound_Def;
\par typedef struct\tab \tab geSound\tab \tab \tab \tab geSound;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par typedef struct\tab \tab geActor\tab \tab \tab \tab geActor;
\par typedef struct\tab \tab geActor_Def\tab \tab \tab geActor_Def;\tab \tab // the definition of an actor's geometry/bone structure
\par 
\par typedef struct\tab \tab geWorld\tab \tab \tab \tab geWorld;
\par 
\par typedef struct\tab \tab geWorld_Model\tab \tab geWorld_Model;
\par 
\par typedef struct\tab \tab geEntity\tab \tab \tab geEntity;
\par typedef struct\tab \tab geEntity_EntitySet\tab geEntity_EntitySet;
\par 
\par typedef struct\tab \tab geCamera\tab \tab \tab geCamera;
\par 
\par typedef struct\tab \tab geCSNetMgr\tab \tab \tab geCSNetMgr;
\par 
\par typedef struct\tab \tab gePoly\tab \tab \tab \tab gePoly;
\par 
\par typedef struct\tab \tab geLight\tab \tab \tab \tab geLight;\tab \tab \tab 
\par 
\par typedef struct\tab \tab geFog\tab \tab \tab \tab geFog;
\par 
\par typedef struct\tab \tab geMesh_Def\tab \tab \tab geMesh_Def;\tab \tab \tab // Mesh def
\par typedef struct\tab \tab geMesh\tab \tab \tab \tab geMesh;\tab \tab \tab \tab 
\par 
\par #define GE_VERSION_MAJOR\tab \tab (1UL)
\par #define GE_VERSION_MINOR\tab \tab (3UL)
\par #define GE_VERSION_MINOR_MIN\tab (3UL)
\par 
\par #define GE_VERSION_MAJOR_SHIFT\tab (16)
\par #define GE_VERSION_MAJOR_MASK\tab ((uint32)0xFFFF0000)
\par 
\par #define GE_VERSION\tab \tab \tab \tab ( (GE_VERSION_MAJOR << GE_VERSION_MAJOR_SHIFT) + GE_VERSION_MINOR )
\par 
\par // From here down, still needs to be fixed up for July4
\par typedef\tab struct\tab \tab GE_ModelMotion\tab \tab GE_ModelMotion;
\par typedef float\tab \tab GE_TimeType;
\par 
\par // Polys
\par typedef enum
\par \{
\par \tab GE_TEXTURED_POLY,
\par \tab GE_GOURAUD_POLY,
\par \tab GE_TEXTURED_POINT\tab \tab \tab \tab \tab 
\par \} gePoly_Type;
\par 
\par // Poly Fx flags
\par #define\tab GE_RENDER_DO_NOT_OCCLUDE_OTHERS\tab (1<<0)\tab \tab \tab // Poly will not occlude others
\par #define GE_RENDER_DO_NOT_OCCLUDE_SELF\tab (1<<1)\tab \tab \tab // Renders under any condition.  Useful for halos, etc...
\par #define\tab GE_RENDER_BACKFACED\tab \tab \tab \tab (1<<2)\tab \tab \tab // Poly should be backfaced from the Camera's Pov
\par #define GE_RENDER_DEPTH_SORT_BF\tab \tab \tab (1<<3)\tab \tab \tab // Sorts relative to camera position, from back to front
\par #define GE_RENDER_CLAMP_UV\tab \tab \tab \tab (1<<4)\tab \tab \tab // Clamp UV's in both directions
\par 
\par // World Add flags
\par #define GE_WORLD_RENDER\tab \tab \tab \tab (1<<0)
\par #define GE_WORLD_COLLIDE\tab \tab \tab (1<<1)
\par 
\par 
\par 
\par #ifndef GE_CONTENTS_TYPES
\par #define GE_CONTENTS_TYPES
\par 
\par //
\par // Content types in GE_Contents structure (multiple contents can be mixed...)
\par //
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par //\tab IF THESE FLAGS CHANGE, THEY MUST CHANGE IN GBSPFILE.H in Genesis AND GBSPLIB, and Genesis.H!!!!!
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par #define GE_CONTENTS_SOLID\tab \tab \tab (1<<0)\tab \tab // Solid (Visible)
\par #define GE_CONTENTS_WINDOW\tab \tab \tab (1<<1)\tab \tab // Window (Visible)
\par #define GE_CONTENTS_EMPTY\tab \tab \tab (1<<2)\tab \tab // Empty but Visible (water, lava, etc...)
\par 
\par #define GE_CONTENTS_TRANSLUCENT\tab \tab (1<<3)\tab \tab // Vis will see through it
\par #define GE_CONTENTS_WAVY\tab \tab \tab (1<<4)\tab \tab // Wavy (Visible)
\par #define GE_CONTENTS_DETAIL\tab \tab \tab (1<<5)\tab \tab // Won't be included in vis oclusion
\par 
\par #define GE_CONTENTS_CLIP\tab \tab \tab (1<<6)\tab \tab // Structural but not visible
\par #define GE_CONTENTS_HINT\tab \tab \tab (1<<7)\tab \tab // Primary splitter (Non-Visible)
\par #define GE_CONTENTS_AREA\tab \tab \tab (1<<8)\tab \tab // Area seperator leaf (Non-Visible)
\par 
\par #define GE_CONTENTS_FLOCKING\tab \tab (1<<9)
\par #define GE_CONTENTS_SHEET\tab \tab \tab (1<<10)
\par #define GE_CONTENTS_AIR\tab \tab \tab \tab (1<<11)\tab \tab // No brush lives in this leaf
\par #define GE_RESERVED4\tab \tab \tab \tab (1<<12)
\par #define GE_RESERVED5\tab \tab \tab \tab (1<<13)
\par #define GE_RESERVED6\tab \tab \tab \tab (1<<14)
\par #define GE_RESERVED7\tab \tab \tab \tab (1<<15)
\par 
\par // 16-31 reserved for user contents
\par #define GE_CONTENTS_USER1\tab \tab \tab (1<<16)
\par #define GE_CONTENTS_USER2\tab \tab \tab (1<<17)
\par #define GE_CONTENTS_USER3\tab \tab \tab (1<<18)
\par #define GE_CONTENTS_USER4\tab \tab \tab (1<<19)
\par #define GE_CONTENTS_USER5\tab \tab \tab (1<<20)
\par #define GE_CONTENTS_USER6\tab \tab \tab (1<<21)
\par #define GE_CONTENTS_USER7\tab \tab \tab (1<<22)
\par #define GE_CONTENTS_USER8\tab \tab \tab (1<<23)
\par #define GE_CONTENTS_USER9\tab \tab \tab (1<<24)
\par #define GE_CONTENTS_USER10\tab \tab \tab (1<<25)
\par #define GE_CONTENTS_USER11\tab \tab \tab (1<<26)
\par #define GE_CONTENTS_USER12\tab \tab \tab (1<<27)
\par #define GE_CONTENTS_USER13\tab \tab \tab (1<<28)
\par #define GE_CONTENTS_USER14\tab \tab \tab (1<<29)
\par #define GE_CONTENTS_USER15\tab \tab \tab (1<<30)
\par #define GE_CONTENTS_USER16\tab \tab \tab (1<<31)
\par // 16-31 reserved for user contents
\par 
\par 
\par // These contents are all solid types
\par #define GE_CONTENTS_SOLID_CLIP\tab \tab (GE_CONTENTS_SOLID | GE_CONTENTS_WINDOW | GE_CONTENTS_CLIP)
\par #define GE_CONTENTS_CANNOT_OCCUPY\tab GE_CONTENTS_SOLID_CLIP
\par 
\par // These contents are all visible types
\par #define GE_VISIBLE_CONTENTS\tab \tab \tab (\tab GE_CONTENTS_SOLID | \\
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CONTENTS_EMPTY | \\
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CONTENTS_WINDOW | \\
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CONTENTS_WAVY)
\par 
\par #endif
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par 
\par // NOTES - Fills in first Model/Mesh hit
\par // Exceptions:
\par //\tab \tab Returns the last solid model hit...
\par typedef struct
\par \{
\par \tab geMesh\tab \tab \tab *Mesh;
\par \tab geWorld_Model\tab *Model;
\par \tab geActor\tab \tab \tab *Actor;
\par \tab int32\tab \tab \tab Contents;
\par \} GE_Contents;
\par 
\par typedef geBoolean GE_CollisionCB(geWorld_Model *Model, geActor *Actor, void *Context);
\par 
\par // Collision
\par typedef struct
\par \{
\par \tab geVec3d\tab Normal;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Orientation of plane
\par \tab float\tab Dist;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Distance from origin
\par \} GE_Plane;
\par 
\par typedef struct
\par \{
\par \tab geWorld_Model\tab *Model;\tab \tab \tab \tab \tab \tab \tab // Pointer to what model was hit (if any)
\par \tab geMesh\tab \tab \tab *Mesh;\tab \tab \tab \tab \tab \tab \tab // Pointer to what mesh was hit (if any)
\par \tab geActor\tab \tab \tab *Actor;\tab \tab \tab \tab \tab \tab \tab // Pointer to what actor was hit (if any)\tab 
\par \tab geVec3d\tab \tab \tab Impact;\tab \tab \tab \tab \tab \tab \tab // Impact Point
\par \tab float\tab \tab \tab Ratio;\tab \tab \tab \tab \tab \tab \tab // Percent from 0 to 1.0, how far along the line for the impact point
\par \tab GE_Plane\tab \tab Plane;\tab \tab \tab \tab \tab \tab \tab // Impact Plane
\par \} GE_Collision;
\par 
\par // If these render states change, they must change in DCommon.h too!!!
\par // These are still under construction, and are for debug purposes only.
\par // They are merely means of overriding ways the engine normally renders primitives, etc...
\par //
\par //\tab RenderState States
\par //
\par #define GE_RENDERSTATE_ZWRITE\tab \tab 0\tab \tab // Z Writes
\par #define GE_RENDERSTATE_ZCMP\tab \tab \tab 1\tab \tab // Z Compares
\par #define GE_RENDERSTATE_BILINEAR\tab \tab 2\tab \tab // Bilinear filtering
\par #define\tab GE_RENDERSTATE_ANTI_ALIAS\tab 3\tab \tab // Anti-Aliasing
\par #define GE_RENDERSTATE_POLYMODE\tab \tab 4\tab \tab // Normal, Gouraud only, Lines only, etc
\par 
\par //
\par //\tab RenderState Flags
\par //
\par #define GE_RENDERFLAG_OFF\tab \tab 0
\par #define GE_RENDERFLAG_ON\tab \tab 1
\par 
\par //
\par //  PolyMode flags\tab (A method to override how polys are drawn for debugging purposes...)
\par //
\par #define GE_POLYMODE_NORMAL\tab \tab 1\tab \tab \tab // Draw as is
\par #define GE_POLYMODE_GOURAUD\tab \tab 2\tab \tab \tab // Gouraud only
\par #define GE_POLYMODE_LINES\tab \tab 3\tab \tab \tab // Outlines only
\par 
\par //================================================================================
\par //\tab Engine Management functions
\par //================================================================================
\par 
\par 
\par #ifdef _INC_WINDOWS\tab 
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par \tab 
\par 
\par GENESISAPI\tab geEngine\tab *geEngine_CreateWithVersion(HWND hWnd, const char *AppName, const char *DriverDirectory, uint32 Version);
\par \tab \tab \tab \tab \tab \tab \tab // use geEngine_Create, rather than calling this directly.
\par 
\par #define geEngine_Create( hWnd, AppName, DriverDirectory)   geEngine_CreateWithVersion(hWnd,AppName,DriverDirectory,GE_VERSION)
\par 
\par #endif
\par 
\par GENESISAPI void\tab \tab \tab geEngine_Free(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_AddWorld(geEngine *Engine, geWorld *World);
\par GENESISAPI geBoolean\tab geEngine_RemoveWorld(geEngine *Engine, geWorld *World);
\par 
\par GENESISAPI geBoolean\tab geEngine_AddBitmap(geEngine *Engine, geBitmap *Bitmap);
\par GENESISAPI geBoolean\tab geEngine_RemoveBitmap(geEngine *Engine, geBitmap *Bitmap);
\par 
\par GENESISAPI geDriver_System *geEngine_GetDriverSystem(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_SetDriverAndMode(\tab geEngine *Engine, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geDriver *Driver, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geDriver_Mode *DriverMode);
\par 
\par GENESISAPI geBoolean\tab geEngine_ShutdownDriver(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_BeginFrame(geEngine *Engine, geCamera *Camera, geBoolean ClearScreen);
\par GENESISAPI geBoolean\tab geEngine_EndFrame(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_RenderWorld(geEngine *Engine, geWorld *World, geCamera *Camera, geFloat Time);
\par GENESISAPI geBoolean\tab geEngine_Printf(geEngine *Engine, int32 x, int32 y, const char *String, ...);
\par 
\par GENESISAPI void\tab \tab \tab GENESISCC geEngine_RenderPoly(const geEngine *Engine, const GE_TLVertex *Points, int NumPoints, const geBitmap *Texture, uint32 Flags);
\par \tab \tab \tab \tab \tab \tab \tab //RenderPoly : if Texture is null, we Gouraud shade
\par 
\par GENESISAPI void\tab \tab \tab GENESISCC geEngine_RenderPolyArray(const geEngine *Engine, const GE_TLVertex ** pPoints, int * pNumPoints, int NumPolys, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geBitmap *Texture, uint32 Flags);
\par 
\par GENESISAPI geBoolean\tab GENESISCC geEngine_DrawBitmap(const geEngine *Engine,const geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geRect * Source, uint32 x, uint32 y);
\par \tab \tab \tab \tab \tab \tab \tab //DrawBitmap & RenderPoly : must Engine_AddBitmap first!
\par 
\par 
\par GENESISAPI void\tab \tab \tab geEngine_FillRect(geEngine *Engine, const GE_Rect *Rect, const GE_RGBA *Color);
\par 
\par GENESISAPI geBoolean\tab geEngine_SetGamma(geEngine *Engine, float Gamma);
\par GENESISAPI geBoolean\tab geEngine_GetGamma(geEngine *Engine, float *Gamma);
\par 
\par GENESISAPI geBoolean\tab geEngine_ScreenShot(geEngine *Engine, const char *FileName);
\par 
\par GENESISAPI void\tab \tab \tab geEngine_EnableFrameRateCounter(geEngine *Engine, geBoolean Enabled);
\par 
\par GENESISAPI geBoolean\tab geEngine_Activate(geEngine *Engine, geBoolean bActive);
\par 
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par GENESISAPI geBoolean\tab geEngine_UpdateWindow(geEngine *Engine);
\par #endif
\par 
\par // geDriver
\par GENESISAPI geDriver\tab \tab *geDriver_SystemGetNextDriver(geDriver_System *DriverSystem, geDriver *Start);
\par GENESISAPI geDriver_Mode *geDriver_GetNextMode(geDriver *Driver, geDriver_Mode *Start);
\par GENESISAPI geBoolean\tab geDriver_GetName(geDriver *Driver, const char **Name);
\par GENESISAPI geBoolean\tab geDriver_ModeGetName(geDriver_Mode *Mode, const char **Name);
\par GENESISAPI geBoolean\tab geDriver_ModeGetWidthHeight(geDriver_Mode *Mode, int32 *Width, int32 *Height);
\par 
\par //================================================================================
\par //\tab Sound Management functions
\par //================================================================================
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par GENESISAPI \tab geSound_System *geSound_CreateSoundSystem(HWND hWnd);
\par #endif
\par 
\par 
\par GENESISAPI void\tab \tab \tab geSound_DestroySoundSystem(geSound_System *Sound);
\par 
\par 
\par GENESISAPI geSound_Def\tab    *geSound_LoadSoundDef(geSound_System *SoundS, geVFile *File);
\par GENESISAPI void\tab \tab \tab \tab geSound_FreeSoundDef(geSound_System *SoundS, geSound_Def *SoundDef);
\par 
\par GENESISAPI geSound\tab \tab    *geSound_PlaySoundDef(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound_Def *SoundDef, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Volume, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Pan, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Frequency, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean Loop);
\par GENESISAPI geBoolean\tab \tab geSound_StopSound(geSound_System *SoundS, geSound *Sound);
\par GENESISAPI geBoolean\tab \tab geSound_ModifySound(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound *Sound, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Volume, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Pan, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Frequency);
\par GENESISAPI geBoolean\tab \tab geSound_SoundIsPlaying(geSound_System *SoundS, geSound *Sound);
\par GENESISAPI geBoolean\tab \tab geSound_SetMasterVolume( geSound_System *SoundS, geFloat Volume );
\par 
\par GENESISAPI void geSound3D_GetConfig(
\par \tab \tab \tab const geWorld *World, 
\par \tab \tab \tab const geXForm3d *CameraTransform, 
\par \tab \tab \tab const geVec3d *SoundPos, 
\par \tab \tab \tab geFloat Min, 
\par \tab \tab \tab geFloat Ds,
\par \tab \tab \tab geFloat *Volume,
\par \tab \tab \tab geFloat *Pan,
\par \tab \tab \tab geFloat *Frequency);
\par 
\par //================================================================================
\par //  Path Support
\par //================================================================================
\par #include "Path.h"
\par //================================================================================
\par //  Motion Support
\par //================================================================================
\par #include "Motion.h"
\par //================================================================================
\par //  Actor Support
\par //================================================================================
\par #include "Actor.h"
\par 
\par 
\par 
\par //================================================================================
\par //\tab World Management functions
\par //================================================================================
\par GENESISAPI geWorld\tab \tab *geWorld_Create(geVFile *File);
\par GENESISAPI void\tab \tab \tab geWorld_Free(geWorld *World);
\par 
\par // World Actors
\par GENESISAPI geBoolean\tab geWorld_RemoveActor    (geWorld *World, geActor *Actor);
\par GENESISAPI geBoolean    geWorld_AddActor       (geWorld *World, geActor *Actor, uint32 Flags, uint32 UserFlags);
\par GENESISAPI geBoolean\tab geWorld_SetActorFlags  (geWorld *World, geActor *Actor, uint32 Flags);
\par 
\par // World Bitmaps
\par GENESISAPI geBoolean\tab geWorld_AddBitmap(\tab \tab geWorld *World, geBitmap *Bitmap);
\par GENESISAPI geBoolean\tab geWorld_RemoveBitmap(\tab geWorld *World, geBitmap *Bitmap);
\par GENESISAPI geBoolean\tab geWorld_HasBitmap(const geWorld *World, const geBitmap *Bitmap);
\par GENESISAPI geBitmap\tab \tab *geWorld_GetBitmapByName(geWorld *World, const char *BitmapName);
\par GENESISAPI geBoolean\tab geWorld_BitmapIsVisible(geWorld *World, const geBitmap *Bitmap);
\par 
\par // World BModels
\par GENESISAPI geWorld_Model\tab *geWorld_GetNextModel(geWorld *World, geWorld_Model *Start);
\par GENESISAPI geBoolean\tab \tab geWorld_SetModelXForm(geWorld *World, geWorld_Model *Model, const geXForm3d *XForm);
\par GENESISAPI geBoolean\tab \tab geWorld_GetModelXForm(const geWorld *World, const geWorld_Model *Model, geXForm3d *XForm);
\par GENESISAPI geBoolean\tab \tab geWorld_OpenModel(geWorld *World, geWorld_Model *Model, geBoolean Open);
\par GENESISAPI geBoolean\tab \tab geWorld_GetModelRotationalCenter(const geWorld *World, const geWorld_Model *Model, geVec3d *Center);
\par GENESISAPI geBoolean\tab \tab geWorld_ModelGetBBox(const geWorld *World, const geWorld_Model *Model, geVec3d *Mins, geVec3d *Maxs);
\par GENESISAPI geMotion *\tab \tab geWorld_ModelGetMotion(geWorld_Model *Model);
\par 
\par GENESISAPI void\tab \tab \tab *geWorld_ModelGetUserData(const geWorld_Model *Model);
\par GENESISAPI void\tab \tab \tab geWorld_ModelSetUserData(geWorld_Model *Model, void *UserData);
\par GENESISAPI void\tab \tab \tab geWorld_ModelSetFlags(geWorld_Model *Model, uint32 ModelFlags);
\par GENESISAPI uint32\tab \tab geWorld_ModelGetFlags(geWorld_Model *Model);
\par 
\par // World Lights
\par GENESISAPI geLight\tab \tab *geWorld_AddLight(geWorld *World);
\par GENESISAPI void\tab \tab \tab geWorld_RemoveLight(geWorld *World, geLight *Light);
\par GENESISAPI geBoolean\tab geWorld_SetLightAttributes(\tab geWorld *World,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geLight\tab \tab *Light, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab geVec3d *Pos, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab GE_RGBA *RGBA, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab Radius,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean\tab CastShadow);
\par GENESISAPI geBoolean\tab geWorld_SetLTypeTable(geWorld *World, int32 LType, const char *Table);
\par 
\par // World fog
\par GENESISAPI geFog\tab \tab *geWorld_AddFog(geWorld *World);
\par GENESISAPI geBoolean\tab geWorld_RemoveFog(geWorld *World, geFog *Fog);
\par 
\par GENESISAPI geBoolean geFog_SetAttributes(\tab geFog\tab \tab \tab *Fog, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *Pos, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_RGBA\tab \tab \tab *Color,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab LightBrightness, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab VolumeBrightness, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab VolumeRadius);
\par 
\par // World Classes/Entities
\par GENESISAPI geEntity_EntitySet *geWorld_GetEntitySet(geWorld *World, const char *ClassName);
\par GENESISAPI geEntity\tab \tab *geEntity_EntitySetGetNextEntity(geEntity_EntitySet *EntitySet, geEntity *Entity);
\par GENESISAPI void\tab \tab \tab *geEntity_GetUserData(geEntity *Entity);
\par GENESISAPI void\tab \tab \tab geEntity_GetName(const geEntity *Entity, char *Buff, int MaxLen);
\par 
\par // World collision
\par GENESISAPI geBoolean\tab geWorld_ModelCollision(\tab geWorld\tab \tab \tab *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model\tab *Model, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d\tab *DXForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_Collision\tab *Collision);
\par GENESISAPI geBoolean geWorld_TestModelMove(\tab geWorld\tab \tab \tab *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model\tab *Model, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d\tab *DXForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *Mins, const geVec3d *Maxs,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *In, geVec3d *Out);
\par 
\par GENESISAPI geBoolean geWorld_Collision(\tab geWorld *World,\tab \tab \tab \tab // World to collide with
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Mins,\tab \tab // Mins of object (in object-space).  This CAN be NULL
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Maxs,\tab \tab // Maxs of object (in object-space).  This CAN be NULL
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Front,\tab \tab // Front of line (in world-space)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Back,\tab \tab // Back of line (in world-space)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 Contents,\tab \tab \tab // Contents to collide with (use GE_CONTENTS_SOLID_CLIP for default)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 CollideFlags,\tab \tab // To mask out certain object types (GE_COLLIDE_ALL, etc...)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 UserFlags,\tab \tab \tab // To mask out actors (refer to geActor_SetUserFlags)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CollisionCB *CollisionCB, // A callback to allow user to reject collisions with certain objects)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab void *Context,\tab \tab \tab \tab // User data passed through above callback
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_Collision *Col);\tab \tab \tab // Structure filled with info about what was collided with
\par \tab // NOTE - Mins/Maxs CAN be NULL.  If you are just testing a point, then use NULL (it's faster!!!).
\par 
\par GENESISAPI geBoolean geWorld_GetContents(geWorld *World, const geVec3d *Pos, const geVec3d *Mins, const geVec3d *Maxs, uint32 Flags, uint32 UserFlags, GE_CollisionCB *CollisionCB, void *Context, GE_Contents *Contents);
\par 
\par // World Polys
\par GENESISAPI\tab gePoly *geWorld_AddPolyOnce(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *Verts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab gePoly_Type Type, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 RenderFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float Scale);
\par GENESISAPI\tab gePoly *geWorld_AddPoly(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *Verts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab gePoly_Type Type,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 RenderFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab float Scale);
\par 
\par GENESISAPI\tab void geWorld_RemovePoly(geWorld *World, gePoly *Poly);
\par GENESISAPI\tab geBoolean gePoly_GetLVertex(gePoly *Poly, int32 Index, GE_LVertex *LVert);
\par GENESISAPI\tab geBoolean gePoly_SetLVertex(gePoly *Poly, int32 Index, const GE_LVertex *LVert);
\par 
\par // World visibility
\par GENESISAPI geBoolean\tab geWorld_GetLeaf(const geWorld *World, const geVec3d *Pos, int32 *Leaf);
\par GENESISAPI geBoolean\tab geWorld_MightSeeLeaf(const geWorld *World, int32 Leaf);
\par 
\par GENESISAPI geBoolean\tab geWorld_LeafMightSeeLeaf(const geWorld *World, int32 Leaf1, int32 Leaf2, uint32 VisFlags);
\par \tab // Checks to see if Leaf1 can see Leaf2
\par \tab // Currently VisFlags is not used yet.  It could be used for checking against areas, etc...
\par \tab // Eventually you could also pass in a VisObject, that is manipulated with a camera...
\par 
\par GENESISAPI geBoolean GENESISCC geWorld_IsActorPotentiallyVisible(const geWorld *World, const geActor *Actor, const geCamera *Camera);
\par 
\par 
\par //================================================================================
\par //\tab Camera Management functions
\par //================================================================================
\par 
\par GENESISAPI geCamera\tab \tab \tab *GENESISCC geCamera_Create(geFloat Fov, const geRect *Rect);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_Destroy(geCamera **pCamera);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_SetZScale(geCamera *Camera, geFloat ZScale);
\par GENESISAPI geFloat\tab \tab \tab GENESISCC geCamera_GetZScale(const geCamera *Camera);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_SetAttributes(geCamera *Camera,geFloat Fov, const geRect *Rect);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_GetClippingRect(const geCamera *Camera, geRect *Rect);
\par 
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_ScreenPointToWorld(const geCamera\tab *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32\tab \tab \tab  ScreenX,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32\tab \tab \tab  ScreenY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d\tab \tab \tab *Vector\tab );
\par GENESISAPI void\tab GENESISCC geCamera_Project(const geCamera\tab *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *PointInCameraSpace, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d\tab \tab \tab *ProjectedPoint);
\par GENESISAPI void GENESISCC geCamera_Transform(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePoint, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   geVec3d *CameraSpacePoint);
\par 
\par GENESISAPI void GENESISCC geCamera_TransformArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab       geVec3d *CameraSpacePointPtr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int count);
\par 
\par GENESISAPI void GENESISCC geCamera_TransformAndProject(const geCamera *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab geVec3d *Point, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *ProjectedPoint);
\par 
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab       geVec3d *ProjectedSpacePointPtr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int count);
\par \tab 
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectL(const geCamera *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const GE_LVertex *Point, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_TLVertex *ProjectedPoint);
\par \tab \tab 
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectLArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const GE_LVertex *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab       GE_TLVertex *ProjectedSpacePointPtr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int count);
\par 
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC geCamera_SetWorldSpaceXForm(geCamera *Camera, const geXForm3d *XForm);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCamera_SetWorldSpaceVisXForm(geCamera *Camera, const geXForm3d *XForm);
\par GENESISAPI const geXForm3d\tab *GENESISCC geCamera_GetWorldSpaceXForm( const geCamera *Camera);
\par GENESISAPI const geXForm3d * GENESISCC geCamera_GetWorldSpaceVisXForm( const geCamera *Camera);
\par GENESISAPI geBoolean GENESISCC geCamera_ConvertWorldSpaceToCameraSpace(const geXForm3d *WXForm, geXForm3d *CXForm);
\par 
\par 
\par //================================================================================
\par // NetPlay Management functions
\par //================================================================================
\par 
\par typedef uint32\tab \tab \tab \tab geCSNetMgr_NetID;
\par #define\tab MAX_CLIENT_NAME\tab \tab 256
\par 
\par // Types for messages received from GE_ReceiveSystemMessage
\par typedef enum 
\par \{
\par \tab NET_MSG_NONE,\tab \tab \tab \tab \tab // No msg
\par \tab NET_MSG_USER,\tab \tab \tab \tab \tab // User message
\par \tab NET_MSG_CREATE_CLIENT,\tab \tab \tab // A new client has joined in
\par \tab NET_MSG_DESTROY_CLIENT,\tab \tab \tab // An existing client has left
\par \tab NET_MSG_HOST,\tab \tab \tab \tab \tab // We are the server now
\par \tab NET_MSG_SESSIONLOST,\tab \tab \tab // Connection was lost
\par \tab NET_MSG_SERVER_ID,\tab \tab \tab \tab // Internal, for hand shaking process
\par \} geCSNetMgr_NetMsgType;
\par 
\par 
\par typedef struct
\par \{
\par \tab char\tab \tab \tab \tab Name[MAX_CLIENT_NAME];
\par \tab geCSNetMgr_NetID\tab Id;
\par \} geCSNetMgr_NetClient;
\par 
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par \tab typedef struct geCSNetMgr_NetSession
\par \tab \{
\par \tab \tab char\tab \tab SessionName[200];\tab \tab \tab \tab \tab // Description of Service provider
\par \tab \tab GUID\tab \tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab // Service Provider GUID
\par \tab \} geCSNetMgr_NetSession;
\par GENESISAPI \tab geBoolean\tab \tab GENESISCC geCSNetMgr_FindSession(geCSNetMgr *M, const char *IPAdress, geCSNetMgr_NetSession **SessionList, int32 *SessionNum );
\par GENESISAPI \tab geBoolean\tab \tab GENESISCC geCSNetMgr_JoinSession(geCSNetMgr *M, const char *Name, const geCSNetMgr_NetSession* Session);
\par #endif
\par 
\par 
\par GENESISAPI geCSNetMgr\tab *\tab GENESISCC geCSNetMgr_Create(void);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCSNetMgr_Destroy(geCSNetMgr **ppM);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveFromServer(geCSNetMgr *M, geCSNetMgr_NetMsgType *Type, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveFromClient(geCSNetMgr *M, geCSNetMgr_NetMsgType *Type, geCSNetMgr_NetID *IdClient, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveSystemMessage(geCSNetMgr *M, geCSNetMgr_NetID IdFor, geCSNetMgr_NetMsgType *Type, geCSNetMgr_NetClient *Client);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveAllMessages(geCSNetMgr *M, geCSNetMgr_NetID *IdFrom, geCSNetMgr_NetID *IdTo, geCSNetMgr_NetMsgType *Type, int32 *Size, uint8 **Data);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetServerID(geCSNetMgr *M);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetOurID(geCSNetMgr *M);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetAllPlayerID(geCSNetMgr *M);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_WeAreTheServer(geCSNetMgr *M);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_StartSession(geCSNetMgr *M, const char *SessionName, const char *PlayerName );
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_StopSession(geCSNetMgr *M);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_SendToServer(geCSNetMgr *M, geBoolean Guaranteed, uint8 *Data, int32 DataSize);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_SendToClient(geCSNetMgr *M, geCSNetMgr_NetID To, geBoolean Guaranteed, uint8 *Data, int32 DataSize);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558908}{\*\bkmkstart _Toc454069925}Getypes.h{\*\bkmkend _Toc446558908}{\*\bkmkend _Toc454069925}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GeTypes.h                                                                           */
\par /*                                                                                      */
\par /*  Description: Genesis Types (not primitive enough for basetype)                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_TYPES_H
\par #define GE_TYPES_H
\par 
\par #include "BaseType.h"
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //
\par //\tab Collision defines (for geWorld_Collision)
\par //
\par #define GE_COLLIDE_MESHES\tab \tab \tab (1<<0)
\par #define GE_COLLIDE_MODELS\tab \tab \tab (1<<1)
\par #define GE_COLLIDE_ACTORS\tab \tab \tab (1<<2)
\par #define GE_COLLIDE_NO_SUB_MODELS\tab (1<<3)
\par #define GE_COLLIDE_ALL\tab \tab \tab \tab (GE_COLLIDE_MESHES | GE_COLLIDE_MODELS | GE_COLLIDE_ACTORS)
\par 
\par //
\par // Actor flags (geWorld_AddActor)
\par //
\par #define GE_ACTOR_RENDER_NORMAL\tab \tab \tab (1<<0)\tab \tab // Render in normal views
\par #define GE_ACTOR_RENDER_MIRRORS\tab \tab \tab (1<<1)\tab \tab // Render in mirror views
\par #define GE_ACTOR_RENDER_ALWAYS\tab \tab \tab (1<<2)\tab \tab // Render always, skipping all visibility tests
\par #define GE_ACTOR_COLLIDE\tab \tab \tab \tab (1<<3)\tab \tab // Collide when calling geWorld_Collision
\par 
\par //
\par //\tab Model flags (geWorld_ModelSetFlags)
\par //
\par #define GE_MODEL_RENDER_NORMAL\tab \tab \tab (1<<0)\tab \tab // Render in normal views
\par #define GE_MODEL_RENDER_MIRRORS\tab \tab \tab (1<<1)\tab \tab // Render in mirror views
\par #define GE_MODEL_RENDER_ALWAYS\tab \tab \tab (1<<2)\tab \tab // Render always, skipping all visibility tests
\par #define GE_MODEL_COLLIDE\tab \tab \tab \tab (1<<3)\tab \tab // Collide when calling geWorld_Collision
\par 
\par typedef struct
\par \{
\par \tab float r, g, b, a;
\par \} GE_RGBA;
\par 
\par typedef struct
\par \{
\par \tab int32\tab Left;
\par \tab int32\tab Right;
\par \tab int32\tab Top;
\par \tab int32\tab Bottom;
\par \} GE_Rect;
\par 
\par typedef struct
\par \{
\par \tab geFloat MinX,MaxX;
\par \tab geFloat MinY,MaxY;
\par \} geFloatRect;
\par 
\par // Lit vertex
\par typedef struct
\par \{
\par \tab // FIXME:  Convert 3d X,Y,Z to geVec3d
\par \tab float X, Y, Z;\tab \tab \tab \tab \tab \tab \tab \tab \tab // 3d vertex
\par \tab float u, v;\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Uv's
\par \tab // FIXME:  Convert r,g,b,a to GE_RGBA
\par \tab float r, g, b, a;\tab \tab \tab \tab \tab \tab \tab \tab // color
\par \} GE_LVertex;
\par 
\par // Transformed Lit vertex
\par typedef struct
\par \{
\par \tab float x, y, z;\tab \tab \tab \tab \tab \tab \tab \tab \tab // screen points
\par \tab float u, v;\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Uv's
\par \tab float r, g, b, a;\tab \tab \tab \tab \tab \tab \tab \tab // color
\par \} GE_TLVertex;
\par 
\par typedef GE_Rect geRect;
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif GETYPES_H
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558909}{\*\bkmkstart _Toc454069926}Matrix33.h{\*\bkmkend _Toc446558909}{\*\bkmkend _Toc454069926}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  MATRIX33.H                                                                          */
\par /*                                                                                      */
\par /*  Author: Jason Wood                                                                  */
\par /*  Description: Pure 3x3 matrix                                                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab MATRIX33_H
\par #define MATRIX33_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct
\par \{
\par \tab float x[3][3];
\par \}\tab Matrix33;
\par 
\par void Matrix33_Copy(const Matrix33* m, Matrix33* c);
\par void Matrix33_SetIdentity(Matrix33* m);
\par void Matrix33_Add(const Matrix33* m1, const Matrix33* m2, Matrix33* res);
\par void Matrix33_Subtract(const Matrix33* m1, const Matrix33* m2, Matrix33* res);
\par void Matrix33_MultiplyVec3d(const Matrix33* m, const geVec3d* v, geVec3d* res);
\par void Matrix33_Multiply(const Matrix33* m1, const Matrix33* m2, Matrix33* res);
\par void Matrix33_MultiplyScalar(float s, const Matrix33* m, Matrix33* res);
\par void Matrix33_GetTranspose(const Matrix33* m, Matrix33* t);
\par void Matrix33_GetInverse(const Matrix33* m, Matrix33* inv);
\par void Matrix33_MakeCrossProductMatrix33(const geVec3d* v, Matrix33* m);
\par void Matrix33_ExtractFromXForm3d(const geXForm3d* xform, Matrix33* m);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558910}{\*\bkmkstart _Toc454069927}Motion.h{\*\bkmkend _Toc446558910}{\*\bkmkend _Toc454069927}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  MOTION.H\tab                                                                         */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Motion interface.\tab \tab \tab \tab \tab                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_MOTION_H
\par #define GE_MOTION_H
\par 
\par /*\tab motion
\par 
\par \tab This object is a list of named Path objects
\par 
\par */
\par 
\par #include <stdio.h>
\par #include "basetype.h"
\par #include "path.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par typedef struct geMotion geMotion;
\par 
\par GENESISAPI geMotion *GENESISCC geMotion_Create(geBoolean ManageNames);
\par 
\par GENESISAPI void GENESISCC geMotion_Destroy(geMotion **PM);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_IsValid(const geMotion *M);
\par 
\par \tab // AddPath adds a reference of P to the motion M.  Ownership is shared - The caller must destroy P.
\par GENESISAPI geBoolean GENESISCC geMotion_AddPath(geMotion *M, gePath *P,const char *Name,int *Index);
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_HasNames(const geMotion *M);
\par GENESISAPI int32 GENESISCC geMotion_GetNameChecksum(const geMotion *M);
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_RemoveNames(geMotion *M);
\par 
\par GENESISAPI void GENESISCC geMotion_SampleChannels(const geMotion *M, int PathIndex, geFloat Time, geQuaternion *Rotation, geVec3d *Translation);
\par GENESISAPI geBoolean GENESISCC geMotion_SampleChannelsNamed(const geMotion *M, const char *PathName, geFloat Time, geQuaternion *Rotation, geVec3d *Translation);
\par 
\par GENESISAPI void GENESISCC geMotion_Sample(const geMotion *M, int PathIndex, geFloat Time, geXForm3d *Transform);
\par GENESISAPI geBoolean GENESISCC geMotion_SampleNamed(const geMotion *M, const char *PathName, geFloat Time, geXForm3d *Transform);
\par 
\par \tab // the returned Paths from _Get functions should not be destroyed.  
\par \tab // if ownership is desired, call gePath_CreateRef() to create another owner. 
\par \tab // an 'owner' has access to the object regardless of the number of other owners, and 
\par \tab // an owner must call the object's destroy method to relinquish ownership
\par GENESISAPI gePath *GENESISCC geMotion_GetPathNamed(const geMotion *M,const char *Name);
\par GENESISAPI const char *GENESISCC geMotion_GetNameOfPath(const geMotion *M, int Index);
\par 
\par // GENESIS_PUBLIC_APIS
\par GENESISAPI gePath *GENESISCC geMotion_GetPath(const geMotion *M,int Index);
\par GENESISAPI int GENESISCC geMotion_GetPathCount(const geMotion *M);
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_SetName(geMotion *M, const char * Name);
\par GENESISAPI const char *GENESISCC geMotion_GetName(const geMotion *M);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par \tab // support for compound motions.  A motion can either have sub-motions, or be single motion.
\par \tab // these functions support motions that have sub-motions.
\par GENESISAPI int GENESISCC geMotion_GetSubMotionCount(const geMotion*M);
\par 
\par \tab // the returned motions from these _Get functions should not be destroyed.  
\par \tab // if ownership is desired, call geMotion_CreateRef() to create another owner. 
\par \tab // an 'owner' has access to the object regardless of the number of other owners, and 
\par \tab // an owner must call the object's destroy method to relinquish ownership
\par GENESISAPI geMotion *GENESISCC geMotion_GetSubMotion(const geMotion *M,int Index);
\par GENESISAPI geMotion *GENESISCC geMotion_GetSubMotionNamed(const geMotion *M,const char *Name);
\par GENESISAPI geBoolean GENESISCC geMotion_AddSubMotion(
\par \tab \tab \tab \tab \tab \tab \tab \tab geMotion *ParentMotion,
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat TimeScale,\tab \tab \tab // Scale factor for this submotion
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat TimeOffset,\tab \tab \tab // Time in parent motion when submotion should start
\par \tab \tab \tab \tab \tab \tab \tab \tab geMotion *SubMotion,
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat StartTime,\tab \tab \tab // Blend start time (relative to submotion)
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat StartMagnitude,\tab \tab // Blend start magnitude (0..1)
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat EndTime,\tab \tab \tab // Blend ending time (relative to submotion)
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat EndMagnitude,\tab \tab // Blend ending magnitude (0..1)
\par \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d *Transform,\tab // Base transform to apply to this submotion
\par \tab \tab \tab \tab \tab \tab \tab \tab int *Index);\tab \tab \tab \tab // returned motion index
\par 
\par GENESISAPI geMotion *GENESISCC  geMotion_RemoveSubMotion(geMotion *ParentMotion, int SubMotionIndex);
\par 
\par // Get/Set submotion time offset.  The time offset is the offset into the 
\par // compound (parent) motion at which the submotion should start.
\par GENESISAPI geFloat   GENESISCC  geMotion_GetTimeOffset( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetTimeOffset( geMotion *M,int SubMotionIndex,geFloat TimeOffset );
\par 
\par // Get/Set submotion time scale.  Time scaling is applied to the submotion after the TimeOffset
\par // is applied.  The formula is:  (CurrentTime - TimeOffset) * TimeScale
\par GENESISAPI geFloat   GENESISCC  geMotion_GetTimeScale( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetTimeScale( geMotion *M,int SubMotionIndex,geFloat TimeScale );
\par 
\par // Get blending amount for a particular submotion.  The Time parameter is parent-relative.
\par GENESISAPI geFloat    GENESISCC geMotion_GetBlendAmount( const geMotion *M, int SubMotionIndex, geFloat Time);
\par 
\par // Get/Set blending path.  The keyframe times in the blend path are relative to the submotion.
\par GENESISAPI gePath    *GENESISCC geMotion_GetBlendPath( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetBlendPath( geMotion *M,int SubMotionIndex, gePath *Blend );
\par 
\par GENESISAPI const geXForm3d *GENESISCC geMotion_GetBaseTransform( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetBaseTransform( geMotion *M,int SubMotionIndex, geXForm3d *BaseTransform );
\par GENESISAPI geBoolean  GENESISCC geMotion_GetTransform(const geMotion *M, geFloat Time, geXForm3d *Transform);
\par // GENESIS_PUBLIC_APIS
\par 
\par \tab // gets time of first key and time of last key (as if motion did not loop)
\par \tab // if there are no paths in the motion: returns GE_FALSE and times are not set
\par \tab // otherwise returns GE_TRUE
\par \tab //
\par \tab // For a compound motion, GetTimeExtents will return the extents of the scaled submotions.
\par \tab // For a single motion, no scaling is applied.
\par GENESISAPI geBoolean GENESISCC geMotion_GetTimeExtents(const geMotion *M,geFloat *StartTime,geFloat *EndTime);
\par 
\par // Only one event is allowed per time key.
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_InsertEvent(geMotion *M, geFloat tKey, const char* String);
\par \tab // Inserts the new event and corresponding string.
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_DeleteEvent(geMotion *M, geFloat tKey);
\par \tab // Deletes the event
\par 
\par GENESISAPI void GENESISCC geMotion_SetupEventIterator(
\par \tab geMotion *M,
\par \tab geFloat StartTime,\tab \tab \tab \tab // Inclusive search start
\par \tab geFloat EndTime);\tab \tab \tab \tab // Non-inclusive search stop
\par \tab // For searching or querying the array for events between two times
\par \tab // times are compaired [StartTime,EndTime), '[' is inclusive, ')' is 
\par \tab // non-inclusive.  This prepares the geMotion_GetNextEvent() function.
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_GetNextEvent(
\par \tab geMotion *M,\tab \tab \tab \tab \tab \tab // Event list to iterate
\par \tab geFloat *pTime,\tab \tab \tab \tab // Return time, if found
\par \tab const char **ppEventString);\tab // Return data, if found
\par \tab // Iterates from StartTime to EndTime as setup in geMotion_SetupEventIterator()
\par \tab // and for each event between these times [StartTime,EndTime)
\par \tab // this function will return Time and EventString returned for that event
\par \tab // and the iterator will be positioned for the next search.  When there 
\par \tab // are no more events in the range, this function will return GE_FALSE (Time
\par \tab // will be 0 and ppEventString will be empty).
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_GetEventExtents(const geMotion *M,
\par \tab \tab \tab geFloat *FirstEventTime,
\par \tab \tab \tab geFloat *LastEventTime);
\par \tab // returns the time associated with the first and last events 
\par \tab // returns GE_FALSE if there are no events (and Times are not set)
\par 
\par 
\par // GENESIS_PRIVATE_APIS
\par GENESISAPI geMotion *GENESISCC geMotion_CreateFromFile(geVFile *f);
\par GENESISAPI geBoolean GENESISCC geMotion_WriteToFile(const geMotion *M, geVFile *f);
\par GENESISAPI geBoolean GENESISCC geMotion_WriteToBinaryFile(const geMotion *M,geVFile *pFile);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558911}{\*\bkmkstart _Toc454069928}Path.h{\*\bkmkend _Toc446558911}{\*\bkmkend _Toc454069928}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PATH.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Time-indexed keyframe creation, maintenance, and sampling.\tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_PATH_H
\par #define GE_PATH_H
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par #include "quatern.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par \tab extern "C" \{
\par #endif
\par 
\par 
\par // GENESIS_PUBLIC_APIS
\par typedef struct _gePath gePath;
\par 
\par #define GE_PATH_ROTATION_CHANNEL    1
\par #define GE_PATH_TRANSLATION_CHANNEL 2
\par 
\par #define GE_PATH_ALL_CHANNELS (GE_PATH_ROTATION_CHANNEL | GE_PATH_TRANSLATION_CHANNEL)
\par 
\par #ifndef GE_PATH_ENUMS
\par \tab #define GE_PATH_ENUMS
\par \tab typedef enum 
\par \tab \{
\par \tab \tab GE_PATH_INTERPOLATE_LINEAR  = 0,\tab // linear blend for translation or rotation channel
\par \tab \tab GE_PATH_INTERPOLATE_HERMITE,\tab \tab // hermite cubic spline for translation channel
\par \tab \tab GE_PATH_INTERPOLATE_SLERP,\tab \tab \tab // spherical-linear blend for rotation channel
\par \tab \tab GE_PATH_INTERPOLATE_SQUAD,\tab \tab \tab // higher order blend for rotation channel 'G1' continuity
\par \tab \tab //GE_PATH_INTEROPLATE_TRIPOD,\tab \tab  // not supported yet.
\par \tab \tab GE_PATH_INTERPOLATE_HERMITE_ZERO_DERIV = 7\tab // hermite cubic with zero derivative at keyframes ('easing' curve)
\par \tab \}gePath_Interpolator;
\par #endif
\par 
\par GENESISAPI void GENESISCC gePath_CreateRef( gePath *P );
\par 
\par GENESISAPI gePath *GENESISCC gePath_Create(
\par \tab gePath_Interpolator TranslationInterpolation,\tab // type of interpolation for translation channel
\par \tab gePath_Interpolator RotationInterpolation,\tab // type of interpolation for rotation channel
\par \tab geBoolean Looped);\tab \tab \tab \tab // True if end of path is connected to head
\par \tab // creates new gePath
\par \tab //  A looping path should have the same first & last point.  The path
\par \tab //  generator will choose arbitrarily between these points for a 
\par \tab //  sample exactly at the end of the loop.
\par 
\par GENESISAPI gePath *GENESISCC gePath_CreateCopy( const gePath *P );
\par \tab 
\par GENESISAPI void GENESISCC gePath_Destroy(gePath **PP);\tab \tab 
\par \tab // destroys path *PP
\par 
\par //------------------ time based keyframe operations
\par GENESISAPI geBoolean GENESISCC gePath_InsertKeyframe(
\par \tab gePath *P, 
\par \tab int ChannelMask, 
\par \tab geFloat Time, 
\par \tab const geXForm3d *Matrix); 
\par \tab // inserts a keyframe at a specific time.
\par \tab 
\par GENESISAPI geBoolean GENESISCC gePath_DeleteKeyframe(
\par \tab gePath *P,
\par \tab int Index,
\par \tab int ChannelMask); 
\par \tab // deletes the nth keyframe
\par 
\par GENESISAPI geBoolean GENESISCC gePath_GetTimeExtents(
\par \tab const gePath *P,
\par \tab geFloat *StartTime, 
\par \tab geFloat *EndTime);
\par \tab // gets the time for the first and last keys in the path (ignoring looping)
\par \tab // if there are no keys, return GE_FALSE and times are not set.
\par \tab // returns GE_TRUE if there are keys.
\par 
\par //----------------- index based keyframe operations
\par GENESISAPI void GENESISCC gePath_GetKeyframe(
\par \tab const gePath *P, 
\par \tab int Index,\tab \tab \tab \tab // gets keyframe[index]
\par \tab int Channel,\tab \tab \tab // for this channel
\par \tab geFloat *Time,\tab \tab \tab // returns the time of the keyframe
\par \tab geXForm3d *Matrix);\tab \tab // returns the matrix of the keyframe
\par \tab // retrieves keyframe[index], and it's time
\par 
\par GENESISAPI int GENESISCC gePath_GetKeyframeCount(const gePath *P,int Channel);
\par \tab // retrieves count of keyframes for a specific channel
\par 
\par GENESISAPI int GENESISCC gePath_GetKeyframeIndex(const gePath *P, int Channel, geFloat Time);
\par \tab // retrieves the index of the keyframe at a specific time for a specific channel
\par 
\par //----------------- sampling a path  (time based)
\par GENESISAPI void GENESISCC gePath_Sample(const gePath *P, geFloat Time,geXForm3d *Matrix);
\par \tab // returns a transform matrix sampled at 'Time'.
\par \tab // p is not const because information is cached in p for next sample
\par 
\par // GENESIS_PRIVATE_APIS
\par void GENESISCC gePath_SampleChannels(
\par \tab const gePath *P, 
\par \tab geFloat Time, 
\par \tab geQuaternion *Rotation, 
\par \tab geVec3d *Translation);
\par \tab // returns a rotation and a translation for the path at 'Time'
\par \tab // p is not const because information is cached in p for next sample
\par 
\par GENESISAPI geBoolean GENESISCC gePath_OffsetTimes(gePath *P, 
\par \tab int StartingIndex, int ChannelMask, geFloat TimeOffset );
\par \tab \tab // slides all samples in path starting with StartingIndex down by TimeOffset
\par 
\par GENESISAPI geBoolean GENESISCC gePath_ModifyKeyframe(
\par \tab gePath *P,
\par \tab int Index,
\par \tab int ChannelMask,
\par \tab const geXForm3d *Matrix);
\par \tab 
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par //------------------ saving/loading a path
\par GENESISAPI gePath* GENESISCC gePath_CreateFromFile(geVFile *F);
\par \tab // loads a file  (binary or ascii)
\par 
\par GENESISAPI geBoolean GENESISCC gePath_WriteToFile(const gePath *P, geVFile *F);
\par \tab // dumps formatted ascii to the file.  
\par 
\par GENESISAPI geBoolean GENESISCC gePath_WriteToBinaryFile(const gePath *P, geVFile *F);
\par \tab // dumps a minimal binary image for fastest reading
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \tab \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558912}{\*\bkmkstart _Toc454069929}PhysicsJoint.h{\*\bkmkend _Toc446558912}{\*\bkmkend _Toc454069929}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PHYSICSJOINT.H                                                                      */
\par /*                                                                                      */
\par /*  Author: Jason Wood                                                                  */
\par /*  Description: Rigid body joint interface                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab PHYSICSJOINT_H
\par #define PHYSICSJOINT_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum
\par \{
\par \tab JT_WORLD = 0,
\par \tab JT_SPHERICAL,
\par \tab JT_PTTOPATH,
\par \tab JT_PTTOSURFACE
\par \}\tab gePhysicsJoint_Kind;
\par 
\par typedef struct gePhysicsJoint gePhysicsJoint;
\par 
\par ////////////////////////////////////////////////////////////////////////////////////////////////////
\par // ctor / dtor
\par 
\par //gePhysicsJoint* gePhysicsJoint_Create(ItemJoint* pItemJoint);
\par GENESISAPI gePhysicsJoint * GENESISCC gePhysicsJoint_Create(gePhysicsJoint_Kind Kind, const geVec3d *Location, 
\par \tab float assemblyRate, gePhysicsObject *PS1, gePhysicsObject *PS2, float physicsScale);
\par GENESISAPI geBoolean GENESISCC gePhysicsJoint_Destroy(gePhysicsJoint** ppPhysjnt);
\par 
\par ////////////////////////////////////////////////////////////////////////////////////////////////////////////
\par // functions
\par 
\par GENESISAPI gePhysicsJoint_Kind GENESISCC gePhysicsJoint_GetType(const gePhysicsJoint* pPhysjnt);
\par GENESISAPI void GENESISCC gePhysicsJoint_GetLocationA(const gePhysicsJoint* pPhysjnt, geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_GetLocationB(const gePhysicsJoint* pPhysjnt, geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_SetLocationA(gePhysicsJoint* pPhysjnt, const geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_SetLocationB(gePhysicsJoint* pPhysjnt, const geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_GetLocationAInWorldSpace(const gePhysicsJoint* pPhysjnt, geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_GetLocationBInWorldSpace(const gePhysicsJoint* pPhysjnt, geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_SetLocationAInWorldSpace(gePhysicsJoint* pPhysjnt, const geVec3d* pLoc);
\par GENESISAPI void GENESISCC gePhysicsJoint_SetLocationBInWorldSpace(gePhysicsJoint* pPhysjnt, const geVec3d* pLoc);
\par GENESISAPI gePhysicsObject* GENESISCC gePhysicsJoint_GetObject1(const gePhysicsJoint* pPhysjnt);
\par GENESISAPI gePhysicsObject* GENESISCC gePhysicsJoint_GetObject2(const gePhysicsJoint* pPhysjnt);
\par GENESISAPI float GENESISCC gePhysicsJoint_GetAssemblyRate(const gePhysicsJoint* pPhysjnt);
\par GENESISAPI void GENESISCC gePhysicsJoint_SetAssemblyRate(gePhysicsJoint* pPhysjnt, float assemblyRate);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558913}{\*\bkmkstart _Toc454069930}PhysicsObject.h{\*\bkmkend _Toc446558913}{\*\bkmkend _Toc454069930}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PHYSICSOBJECT.H                                                                     */
\par /*                                                                                      */
\par /*  Author: Jason Wood                                                                  */
\par /*  Description: Constrained rigid body interface                                       */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab PHYSICSOBJECT_H
\par #define PHYSICSOBJECT_H
\par 
\par #include "matrix33.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define PHYSICSOBJECT_GRAVITY\tab \tab \tab \tab (-3.9f)
\par 
\par typedef struct gePhysicsObject gePhysicsObject;
\par 
\par ////////////////////////////////////////////////////////////////////////////////////////////////////////////
\par // ctor/dtor
\par 
\par GENESISAPI gePhysicsObject * GENESISCC gePhysicsObject_Create(
\par \tab const geVec3d *StartLocation,
\par \tab float mass,
\par \tab geBoolean IsAffectedByGravity,
\par \tab geBoolean RespondsToForces,
\par \tab float linearDamping,
\par \tab float angularDamping,
\par \tab const geVec3d *\tab Mins,
\par \tab const geVec3d *\tab Maxs,
\par \tab float physicsScale);
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_Destroy(gePhysicsObject** pPhysob);
\par 
\par ////////////////////////////////////////////////////////////////////////////////////////////////////////////
\par // functions
\par 
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_ApplyGlobalFrameForce(gePhysicsObject* pod, geVec3d* force, geVec3d* radiusVector, geBoolean isAppliedForce,
\par \tab int configIndex);
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_ApplyGlobalFrameImpulse(gePhysicsObject* pPhysob, geVec3d* pImpulse, geVec3d* pRadVec, int configIndex);
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_ComputeForces(gePhysicsObject* pod, int configIndex);
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_Integrate(gePhysicsObject* pod, float deltaTime, int SourceConfigIndex);
\par 
\par GENESISAPI float GENESISCC gePhysicsObject_GetMass(const gePhysicsObject* po);
\par GENESISAPI void GENESISCC gePhysicsObject_SetMass(gePhysicsObject* po, float mass);
\par 
\par GENESISAPI float GENESISCC gePhysicsObject_GetOneOverMass(const gePhysicsObject* po);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetXForm(const gePhysicsObject* po, geXForm3d* xform, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetXForm(gePhysicsObject* po, const geXForm3d* xform, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetXFormInEditorSpace(const gePhysicsObject* po, geXForm3d* xform, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetOriginalLocation(const gePhysicsObject* po, geVec3d* loc);
\par GENESISAPI void GENESISCC gePhysicsObject_SetOriginalLocation(gePhysicsObject* po, const geVec3d* loc);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetLocation(const gePhysicsObject *po, geVec3d *Location, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_GetLocationInEditorSpace(const gePhysicsObject* po, geVec3d* loc, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetLinearVelocity(const gePhysicsObject* po, geVec3d* vel, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetLinearVelocity(gePhysicsObject* po, const geVec3d* vel, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetAngularVelocity(const gePhysicsObject* po, geVec3d* vel, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetAngularVelocity(gePhysicsObject* po, const geVec3d* vel, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetForce(const gePhysicsObject* po, geVec3d* force, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetForce(gePhysicsObject* po, const geVec3d* force, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetTorque(const gePhysicsObject* po, geVec3d* torque, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetTorque(gePhysicsObject* po, const geVec3d* torque, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetAppliedForce(const gePhysicsObject* po, geVec3d* force, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetAppliedForce(gePhysicsObject* po, const geVec3d* force, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetAppliedTorque(const gePhysicsObject* po, geVec3d* torque, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetAppliedTorque(gePhysicsObject* po, const geVec3d* torque, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_ClearForce(gePhysicsObject* po, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_ClearTorque(gePhysicsObject* po, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_ClearAppliedForce(gePhysicsObject* po, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_ClearAppliedTorque(gePhysicsObject* po, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_IncForce(gePhysicsObject* po, const geVec3d* forceInc, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_IncTorque(gePhysicsObject* po, const geVec3d* torqueInc, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_IncAppliedForce(gePhysicsObject* po, const geVec3d* forceInc, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_IncAppliedTorque(gePhysicsObject* po, const geVec3d* torqueInc, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetOrientation(const gePhysicsObject* po, geQuaternion* orient, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_SetOrientation(gePhysicsObject* po, const geQuaternion* orient, int configIndex);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetInertiaTensor(const gePhysicsObject* po, Matrix33* iTensor);
\par GENESISAPI void GENESISCC gePhysicsObject_GetInertiaTensorInverse(const gePhysicsObject* po, Matrix33* iTensorInv);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_GetInertiaTensorInPhysicsSpace(const gePhysicsObject* pPhysob, Matrix33* pITensor, int configIndex);
\par GENESISAPI void GENESISCC gePhysicsObject_GetInertiaTensorInverseInPhysicsSpace(const gePhysicsObject* pPhysob, Matrix33* pITensorInv, int configIndex);
\par 
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_IsAffectedByGravity(const gePhysicsObject* po);
\par GENESISAPI void GENESISCC gePhysicsObject_SetIsAffectedByGravity(gePhysicsObject* po, geBoolean flag);
\par 
\par GENESISAPI geBoolean GENESISCC gePhysicsObject_RespondsToForces(const gePhysicsObject* po);
\par GENESISAPI void GENESISCC gePhysicsObject_SetRespondsToForces(gePhysicsObject* po, geBoolean flag);
\par 
\par GENESISAPI float GENESISCC gePhysicsObject_GetLinearDamping(const gePhysicsObject* po);
\par GENESISAPI void GENESISCC gePhysicsObject_SetLinearDamping(gePhysicsObject* po, float linearDamping);
\par 
\par GENESISAPI float GENESISCC gePhysicsObject_GetAngularDamping(const gePhysicsObject* po);
\par GENESISAPI void GENESISCC gePhysicsObject_SetAngularDamping(gePhysicsObject* po, float angularDamping);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_SetActiveConfig(gePhysicsObject* pPhysob, int configIndex);
\par GENESISAPI int GENESISCC gePhysicsObject_GetActiveConfig(gePhysicsObject* pPhysob);
\par 
\par GENESISAPI void GENESISCC gePhysicsObject_SetPhysicsScale(gePhysicsObject* pPhysob, float scale);
\par GENESISAPI float GENESISCC gePhysicsObject_GetPhysicsScale(gePhysicsObject* pPhysob);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558914}{\*\bkmkstart _Toc454069931}PhysicsSystem.h{\*\bkmkend _Toc446558914}{\*\bkmkend _Toc454069931}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PHYSICSSYSTEM.H                                                                     */
\par /*                                                                                      */
\par /*  Author: Jason Wood                                                                  */
\par /*  Description: Rigid body, constraint based physics system interface                  */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #if !defined (PHYSICSSYSTEM_H)
\par #define PHYSICSSYSTEM_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct gePhysicsSystem gePhysicsSystem;
\par 
\par ////////////////////////////////////////////////////////////////////////////////////////////////////
\par // ctor / dtor
\par 
\par GENESISAPI gePhysicsSystem *GENESISCC gePhysicsSystem_Create(void);
\par GENESISAPI geBoolean GENESISCC gePhysicsSystem_Destroy(gePhysicsSystem** ppSys);
\par 
\par GENESISAPI geBoolean GENESISCC gePhysicsSystem_Iterate(gePhysicsSystem* psPtr, float Time);
\par 
\par GENESISAPI geBoolean GENESISCC gePhysicsSystem_AddJoint(gePhysicsSystem *psPtr, gePhysicsJoint *Joint);
\par GENESISAPI geBoolean GENESISCC gePhysicsSystem_AddObject(gePhysicsSystem *psPtr, gePhysicsObject *Object);
\par 
\par GENESISAPI int GENESISCC gePhysicsSystem_GetSourceConfigIndex(const gePhysicsSystem* pSys);
\par GENESISAPI gePhysicsObject** GENESISCC gePhysicsSystem_GetPhysobs(const gePhysicsSystem* pSys);
\par GENESISAPI gePhysicsJoint** GENESISCC gePhysicsSystem_GetPhysjnts(const gePhysicsSystem* pSys);
\par GENESISAPI int GENESISCC gePhysicsSystem_GetNumPhysobs(const gePhysicsSystem* pSys);
\par GENESISAPI int GENESISCC gePhysicsSystem_GetNumPhysjnts(const gePhysicsSystem* pSys);
\par GENESISAPI int GENESISCC gePhysicsSystem_GetSumOfConstraintDimensions(const gePhysicsSystem* pSys);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558915}{\*\bkmkstart _Toc454069932}Pixelformat.h{\*\bkmkend _Toc446558915}{\*\bkmkend _Toc454069932}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef\tab PIXELFORMAT_H
\par #define\tab PIXELFORMAT_H
\par 
\par /****************************************************************************************/
\par /*  PixelFormat.h                                                                       */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  The abstract Pixel primitives                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum\tab \tab // all supported formats (including shifts)
\par \{
\par \tab GE_PIXELFORMAT_NO_DATA = 0,
\par \tab GE_PIXELFORMAT_8BIT,\tab \tab \tab \tab // PAL
\par \tab GE_PIXELFORMAT_8BIT_GRAY,\tab \tab // no palette (intensity from bit value)
\par \tab GE_PIXELFORMAT_16BIT_555_RGB,
\par \tab GE_PIXELFORMAT_16BIT_555_BGR,
\par \tab GE_PIXELFORMAT_16BIT_565_RGB,\tab // #5
\par \tab GE_PIXELFORMAT_16BIT_565_BGR, 
\par \tab GE_PIXELFORMAT_16BIT_4444_ARGB, // #7
\par \tab GE_PIXELFORMAT_16BIT_1555_ARGB, 
\par \tab GE_PIXELFORMAT_24BIT_RGB,\tab \tab // #9
\par \tab GE_PIXELFORMAT_24BIT_BGR,
\par \tab GE_PIXELFORMAT_24BIT_YUV,\tab \tab // * see note below
\par \tab GE_PIXELFORMAT_32BIT_RGBX, 
\par \tab GE_PIXELFORMAT_32BIT_XRGB, 
\par \tab GE_PIXELFORMAT_32BIT_BGRX, 
\par \tab GE_PIXELFORMAT_32BIT_XBGR,
\par \tab GE_PIXELFORMAT_32BIT_RGBA, 
\par \tab GE_PIXELFORMAT_32BIT_ARGB,\tab \tab // #17
\par \tab GE_PIXELFORMAT_32BIT_BGRA, 
\par \tab GE_PIXELFORMAT_32BIT_ABGR,
\par \tab 
\par \tab GE_PIXELFORMAT_WAVELET,\tab \tab \tab // #20 , Wavelet Compression
\par 
\par \tab GE_PIXELFORMAT_COUNT
\par \} gePixelFormat;
\par \tab 
\par /******
\par 
\par there's something wacked out about these format names :
\par 
\par \tab for 16 bit & 32 bit , the _RGB or _BGR refers to their order
\par \tab \tab *in the word or dword* ; since we're on intel, this means
\par \tab \tab the bytes in the data file have the *opposite* order !!
\par \tab \tab (for example the 32 bit _ARGB is actually B,G,R,A in raw bytes)
\par \tab for 24 bit , the _RGB or _BGR refers to their order in the
\par \tab \tab actual bytes, so that windows bitmaps actually have
\par \tab \tab _RGB order in a dword !!
\par 
\par * YUV : the pixelformat ops here are identical to those of 24bit_RGB ;
\par \tab \tab this is just a place-keeper to notify you that you should to a YUV_to_RGB conversion
\par 
\par *********/
\par 
\par #define GE_PIXELFORMAT_8BIT_PAL GE_PIXELFORMAT_8BIT
\par 
\par typedef uint32\tab (*gePixelFormat_Composer   )(int R,int G,int B,int A);
\par typedef void\tab (*gePixelFormat_Decomposer )(uint32 Pixel,int *R,int *G,int *B,int *A);
\par 
\par typedef void\tab (*gePixelFormat_ColorGetter)(uint8 **ppData,int *R,int *G,int *B,int *A);
\par typedef void\tab (*gePixelFormat_ColorPutter)(uint8 **ppData,int  R,int  G,int  B,int  A);
\par 
\par typedef uint32\tab (*gePixelFormat_PixelGetter)(uint8 **ppData);
\par typedef void\tab (*gePixelFormat_PixelPutter)(uint8 **ppData,uint32 Pixel);
\par 
\par typedef struct gePixelFormat_Operations
\par \{
\par \tab uint32\tab RMask;
\par \tab uint32\tab GMask;
\par \tab uint32\tab BMask;
\par \tab uint32\tab AMask;
\par 
\par \tab int\tab \tab RShift;
\par \tab int\tab \tab GShift;
\par \tab int\tab \tab BShift;
\par \tab int\tab \tab AShift;
\par 
\par \tab int\tab \tab RAdd;
\par \tab int\tab \tab GAdd;
\par \tab int\tab \tab BAdd;
\par \tab int\tab \tab AAdd;
\par 
\par \tab int\tab \tab \tab BytesPerPel;
\par \tab geBoolean\tab HasPalette;
\par \tab char *\tab \tab Description;
\par \tab 
\par \tab gePixelFormat_Composer\tab \tab ComposePixel;
\par \tab gePixelFormat_Decomposer\tab DecomposePixel;
\par 
\par \tab gePixelFormat_ColorGetter\tab GetColor;
\par \tab gePixelFormat_ColorPutter\tab PutColor;
\par 
\par \tab gePixelFormat_PixelGetter\tab GetPixel;
\par \tab gePixelFormat_PixelPutter\tab PutPixel;
\par \} gePixelFormat_Operations;
\par 
\par \tab // the Masks double as boolean "HaveAlpha" .. etc..
\par 
\par GENESISAPI const gePixelFormat_Operations * GENESISCC gePixelFormat_GetOperations( gePixelFormat Format );
\par 
\par \tab // quick accessors to _GetOps
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_IsValid(\tab \tab gePixelFormat Format);
\par GENESISAPI unsigned int GENESISCC gePixelFormat_BytesPerPel(\tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_HasPalette(\tab \tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_HasAlpha(\tab \tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_HasGoodAlpha(\tab gePixelFormat Format ); // more than 1 bit of alpha
\par GENESISAPI const char * GENESISCC gePixelFormat_Description(\tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_IsRaw(\tab \tab \tab gePixelFormat Format );
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // 'Raw' means pixels can be made with the Compose operations
\par 
\par GENESISAPI uint32\tab \tab GENESISCC gePixelFormat_ComposePixel(\tab gePixelFormat Format,int R,int G,int B,int A);
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_DecomposePixel(\tab gePixelFormat Format,uint32 Pixel,int *R,int *G,int *B,int *A);
\par \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // these four functions move ppData to the next pixel
\par 
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_GetColor(gePixelFormat Format,uint8 **ppData,int *R,int *G,int *B,int *A);
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_PutColor(gePixelFormat Format,uint8 **ppData,int R,int G,int B,int A);
\par 
\par GENESISAPI uint32\tab \tab GENESISCC gePixelFormat_GetPixel(gePixelFormat Format,uint8 **ppData);
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_PutPixel(gePixelFormat Format,uint8 **ppData,uint32 Pixel);
\par \tab 
\par GENESISAPI uint32\tab \tab GENESISCC gePixelFormat_ConvertPixel(gePixelFormat Format,uint32 Pixel,gePixelFormat ToFormat);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558916}{\*\bkmkstart _Toc454069933}Quatern.h{\*\bkmkend _Toc446558916}{\*\bkmkend _Toc454069933}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  QUATERN.H                                                                           */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description: Quaternion mathematical system interface                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_QUATERNION_H
\par #define GE_QUATERNION_H
\par 
\par /***************************************************************************
\par 
\par \tab The quatern module contains basic support for a quaternion object.
\par 
\par \tab quaternions are an extension of complex numbers that allows an
\par \tab expression for rotation that can be easily interpolated.  geQuaternion_s are also 
\par \tab more numericaly stable for repeated rotations than matrices.
\par 
\par \tab 
\par \tab A quaternion is a 4 element 'vector'  [w,x,y,z] where:
\par 
\par \tab q = w + xi + yj + zk
\par \tab i*i = -1
\par \tab j*j = -1
\par \tab k*k = -1
\par \tab i*j = -j*i = k
\par \tab j*k = -k*j = i
\par \tab k*i = -i*k = j
\par \tab q' (conjugate) = w - xi - yj - zk
\par \tab ||q|| (magnitude) = sqrt(q*q') = sqrt(w*w + x*x + y*y + z*z)
\par \tab unit quaternion ||q|| == 1; this implies  q' == qinverse 
\par \tab quaternions are associative (q1*q2)*q3 == q1*(q2*q3)
\par \tab quaternions are not commutative  q1*q2 != q2*q1
\par \tab qinverse (inverse (1/q) ) = q'/(q*q')
\par \tab 
\par \tab q can be expressed by w + xi + yj + zk or [w,x,y,z] 
\par \tab or as in this implementation (s,v) where s=w, and v=[x,y,z]
\par 
\par \tab quaternions can represent a rotation.  The rotation is an angle t, around a 
\par \tab unit vector u.   q=(s,v);  s= cos(t/2);   v= u*sin(t/2).
\par 
\par \tab quaternions can apply the rotation to a point.  let the point be p [px,py,pz],
\par \tab and let P be a quaternion(0,p).  Protated = q*P*qinverse 
\par \tab ( Protated = q*P*q' if q is a unit quaternion)
\par 
\par \tab concatenation rotations is similar to matrix concatenation.  given two rotations
\par \tab q1 and q2,  to rotate by q1, then q2:  let qc = (q2*q1), then the combined 
\par \tab rotation is given by qc*P*qcinverse (= qc*P*qc' if q is a unit quaternion)
\par 
\par \tab multiplication: 
\par \tab q1 = w1 + x1i + y1j + z1k
\par \tab q2 = w2 + x2i + y2j + z2k
\par \tab q1*q2 = q3 =
\par \tab \tab \tab (w1*w2 - x1*x2 - y1*y2 - z1*z2)     \{w3\}
\par \tab         (w1*x2 + x1*w2 + y1*z2 - z1*y2)i\tab \{x3\}
\par \tab \tab \tab (w1*y2 - x1*z2 + y1*w2 + z1*x2)j    \{y3\}
\par \tab \tab \tab (w1*z2 + x1*y2 + y1*x2 + z1*w2)k\tab \{z3\}
\par 
\par \tab also, 
\par \tab q1 = (s1,v1) = [s1,(x1,y1,z1)]
\par \tab q2 = (s2,v2) = [s2,(x2,y2,z2)]
\par \tab q1*q2 = q3\tab =\tab (s1*s2 - dot_product(v1,v2),\tab \tab \tab \{s3\}
\par \tab \tab \tab \tab \tab (s1*v2 + s2*v1 + cross_product(v1,v2))\tab \{v3\}
\par 
\par 
\par \tab interpolation - it is possible (and sometimes reasonable) to interpolate between
\par \tab two quaternions by interpolating each component.  This does not quarantee a 
\par \tab resulting unit quaternion, and will result in an animation with non-linear 
\par \tab rotational velocity.
\par 
\par \tab spherical interpolation: (slerp) treat the quaternions as vectors 
\par \tab find the angle between them (w = arccos(q1 dot q2) ).
\par \tab given 0<=t<=1,  q(t) = q1*(sin((1-t)*w)/sin(w) + q2 * sin(t*w)/sin(w).
\par \tab since q == -q, care must be taken to rotate the proper way.  
\par 
\par \tab this implementation uses the notation quaternion q = (quatS,quatV) 
\par \tab   where quatS is a scalar, and quatV is a 3 element vector.
\par 
\par ********************************************/
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct 
\par \{
\par \tab geFloat\tab W;
\par \tab geFloat   X,Y,Z;
\par \tab //geVec3d   QuatV;
\par \} geQuaternion;
\par 
\par 
\par #define\tab QUATERNION_PI\tab (GE_PI)
\par 
\par geBoolean GENESISCC geQuaternion_IsValid( const geQuaternion *Q );
\par \tab // return GE_TRUE if Q is non null and for has no NAN's in its components
\par 
\par void GENESISCC geQuaternion_Set( geQuaternion *Q, geFloat W, geFloat X, geFloat Y, geFloat Z);
\par \tab // set quaternion components.  Doesn't normalize
\par void GENESISCC geQuaternion_SetVec3d( geQuaternion *Q, geFloat W, const geVec3d *V);
\par \tab // set quaternion components.  Doesn't normalize
\par GENESISAPI void GENESISCC geQuaternion_SetFromAxisAngle(geQuaternion *Q, const geVec3d *Axis, geFloat Theta);
\par \tab // set a quaternion from an axis and a rotation around the axis
\par geBoolean GENESISCC geQuaternion_GetAxisAngle(const geQuaternion *Q, geVec3d *Axis, geFloat *Theta);
\par \tab // gets an axis and angle of rotation around the axis from a quaternion
\par \tab // returns GE_TRUE if there is an axis.  
\par \tab // returns GE_FALSE if there is no axis (and Axis is set to 0,0,0, and Theta is 0)
\par 
\par void GENESISCC geQuaternion_Get( const geQuaternion *Q, 
\par \tab \tab \tab \tab \tab geFloat *W, geFloat *X, geFloat *Y, geFloat *Z);
\par \tab // get quaternion components into W,X,Y,Z
\par void GENESISCC geQuaternion_GetVec3d( const geQuaternion *Q, geFloat *W, geVec3d *V);
\par \tab // get quaternion components into W and V
\par 
\par void GENESISCC geQuaternion_FromMatrix(
\par \tab const geXForm3d\tab \tab *RotationMatrix,
\par \tab       geQuaternion\tab *QDest);
\par \tab // takes upper 3 by 3 portion of matrix (rotation sub matrix) 
\par \tab // and generates a quaternion
\par 
\par GENESISAPI void GENESISCC geQuaternion_ToMatrix(
\par \tab const geQuaternion\tab *Q, 
\par \tab \tab   geXForm3d\tab \tab *RotationMatrixDest);
\par \tab // takes a unit quaternion and makes RotationMatrixDest an equivelant rotation xform.
\par \tab // (any translation in RotationMatrixDest will be list)
\par 
\par void GENESISCC geQuaternion_Slerp(
\par \tab const geQuaternion\tab \tab *Q0, 
\par \tab const geQuaternion\tab \tab *Q1, 
\par \tab geFloat\tab \tab \tab \tab \tab T,\tab \tab 
\par \tab geQuaternion\tab \tab \tab *QT);
\par \tab // spherical interpolation between q0 and q1.   0<=t<=1 
\par \tab // resulting quaternion is 'between' q0 and q1
\par \tab // with t==0 being all q0, and t==1 being all q1.
\par \tab // returns a quaternion with a positive W - always takes shortest route
\par \tab // through the positive W domain.
\par 
\par void GENESISCC geQuaternion_SlerpNotShortest(
\par \tab const geQuaternion\tab \tab *Q0, 
\par \tab const geQuaternion\tab \tab *Q1, 
\par \tab geFloat\tab \tab \tab \tab \tab T,\tab \tab 
\par \tab geQuaternion\tab \tab \tab *QT);
\par \tab // spherical interpolation between q0 and q1.   0<=t<=1 
\par \tab // resulting quaternion is 'between' q0 and q1
\par \tab // with t==0 being all q0, and t==1 being all q1.
\par 
\par 
\par void GENESISCC geQuaternion_Multiply(
\par \tab const geQuaternion\tab *Q1, 
\par \tab const geQuaternion\tab *Q2, 
\par \tab geQuaternion\tab \tab \tab *QProduct);
\par \tab // multiplies q1 * q2, and places the result in q.
\par \tab // no failure. \tab renormalization not automatic
\par 
\par void GENESISCC geQuaternion_Rotate(
\par \tab const geQuaternion\tab *Q, 
\par \tab const geVec3d       *V, 
\par \tab geVec3d\tab \tab \tab \tab *VRotated);
\par \tab // Rotates V by the quaternion Q, places the result in VRotated.
\par 
\par geBoolean GENESISCC geQuaternion_IsUnit(const geQuaternion *Q);
\par \tab // returns GE_TRUE if q is a unit quaternion.  GE_FALSE otherwise.
\par 
\par GENESISAPI geFloat GENESISCC geQuaternion_Normalize(geQuaternion *Q);
\par \tab // normalizes q to be a unit quaternion.  returns original magnitude of q
\par 
\par GENESISAPI void GENESISCC geQuaternion_Copy(const geQuaternion *QSrc, geQuaternion *QDst);
\par \tab // copies quaternion QSrc into QDst
\par 
\par void GENESISCC geQuaternion_SetNoRotation(geQuaternion *Q);
\par \tab // sets Q to be a quaternion with no rotation (like an identity matrix)
\par 
\par void GENESISCC geQuaternion_Ln(
\par \tab const geQuaternion *Q, 
\par \tab geQuaternion *LnQ);
\par \tab // ln(Q) for unit quaternion only!
\par 
\par void GENESISCC geQuaternion_Exp(
\par \tab const geQuaternion *Q,
\par \tab geQuaternion *ExpQ);
\par \tab // exp(Q) for pure quaternion only!  (zero scalar part (W))
\par 
\par void GENESISCC geQuaternion_Scale(
\par \tab const geQuaternion *Q,
\par \tab geFloat Scale,
\par \tab geQuaternion *QScaled);
\par \tab // Q = Q * Scale  (result is not generally a unit quaternion!)
\par 
\par void GENESISCC geQuaternion_Add(
\par \tab const geQuaternion *Q1,
\par \tab const geQuaternion *Q2,
\par \tab geQuaternion *QSum);
\par \tab // QSum = Q1 + Q2  (result is not generally a unit quaternion!)
\par 
\par void GENESISCC geQuaternion_Subtract(
\par \tab const geQuaternion *Q1, 
\par \tab const geQuaternion *Q2, 
\par \tab geQuaternion *QSum);
\par \tab // QSum = Q1 - Q2  (result is not generally a unit quaternion!)
\par 
\par void GENESISCC geQuaternion_Inverse(const geQuaternion *Q, geQuaternion *QInv);
\par \tab // sets QInv to the inverse of Q.  
\par 
\par geFloat GENESISCC geQuaternion_Magnitude(const geQuaternion *Q);
\par \tab // returns Magnitude of Q.  
\par 
\par geBoolean GENESISCC geQuaternion_Compare( geQuaternion *Q1, geQuaternion *Q2, geFloat Tolerance );
\par \tab // return GE_TRUE if quaternions differ elementwise by less than Tolerance.
\par 
\par 
\par #ifndef NDEBUG
\par void GENESISCC geQuaternion_SetMaximalAssertionMode( geBoolean Enable );
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif // GE_QUATERNION_H
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558917}
\par {\*\bkmkstart _Toc454069934}Ram.h{\*\bkmkend _Toc446558917}{\*\bkmkend _Toc454069934}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  RAM.H                                                                               */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Replacement for malloc, realloc and free                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_RAM_H
\par #define GE_RAM_H
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef int (* geRam_CriticalCallbackFunction)(void);
\par 
\par /*
\par   Set the critical callback function.  ram_allocate will call the critical
\par   callback function if it's unable to allocate memory.
\par */
\par GENESISAPI geRam_CriticalCallbackFunction geRam_SetCriticalCallback
\par     (
\par       geRam_CriticalCallbackFunction callback
\par     );
\par 
\par /*
\par   increments or decrements a counter .  if the counter is >0
\par   the critical callback function (if set) is called for a failed memory allocation.
\par   add is added to the current counter value.  the new counter value is returned.
\par */
\par GENESISAPI int geRam_EnableCriticalCallback(int add);
\par 
\par 
\par /*
\par   Allocate memory of the given size.  In debug mode, the memory is filled
\par   with 0xA5, and we keep track of the amount of memory allocated.  Also, in debug
\par   mode, we track where the memory was allocated and can optionally provide a
\par   report of allocated blocks.  See geRam_ReportAllocations.
\par */
\par #ifndef NDEBUG
\par 
\par #define geRam_Allocate(size) _geRam_DebugAllocate(size, __FILE__, __LINE__)
\par 
\par // Do not call _geRam_DebugAllocate directly.
\par GENESISAPI void* _geRam_DebugAllocate(uint32 size, const char* pFile, int line);
\par 
\par #else
\par 
\par GENESISAPI void *geRam_Allocate(uint32 size);
\par 
\par #endif
\par 
\par /*
\par   Free an allocated memory block.
\par */
\par GENESISAPI void geRam_Free_(void *ptr);
\par 
\par \tab \tab extern void *StupidUnusedPointer;    // never used, except to mask the
\par \tab \tab // possible warning you get if you use the geRam_Free macro below, without
\par \tab \tab // using the xxx pointer again in the same block.  This is ugly.
\par  
\par #define geRam_Free(xxx) geRam_Free_(xxx) ,(xxx)=NULL, StupidUnusedPointer=(xxx)
\par 
\par /*
\par   Reallocate memory.  This function supports shrinking and expanding blocks,
\par   and will also act like ram_allocate if the pointer passed to it is NULL.
\par   It won't, however, free the memory if you pass it a 0 size.
\par */
\par #ifndef NDEBUG
\par 
\par #define geRam_Realloc(ptr, newsize) _geRam_DebugRealloc(ptr, newsize, __FILE__, __LINE__)
\par 
\par // Do not call _geRam_DebugRealloc directly.
\par GENESISAPI void* _geRam_DebugRealloc(void* ptr, uint32 size, const char* pFile, int line);
\par 
\par #else
\par 
\par GENESISAPI void *geRam_Realloc(void *ptr,uint32 newsize);
\par 
\par #endif
\par 
\par #ifndef NDEBUG
\par 
\par GENESISAPI void geRam_ReportAllocations(void);
\par 
\par #else
\par 
\par #define geRam_ReportAllocations() 
\par 
\par #endif
\par 
\par #ifndef NDEBUG
\par     extern int32 geRam_CurrentlyUsed;
\par     extern int32 geRam_NumberOfAllocations;
\par     extern int32 geRam_MaximumUsed;
\par     extern int32 geRam_MaximumNumberOfAllocations;
\par 
\par GENESISAPI     void geRam_AddAllocation(int n,uint32 size);
\par #else
\par     #define geRam_AddAllocation(n,s)
\par #endif
\par 
\par // allocate the ram & clear it. (calloc)
\par GENESISAPI void * geRam_AllocateClear(uint32 size);
\par 
\par #define GE_RAM_ALLOCATE_STRUCT(type)      (type *)geRam_Allocate (sizeof (type))
\par #define GE_RAM_ALLOCATE_ARRAY(type,count) (type *)geRam_Allocate (sizeof (type) * (count))
\par 
\par #ifndef NDEBUG
\par #define GE_RAM_REALLOC_ARRAY(ptr,type,count)  (type *)geRam_Realloc(  (ptr), sizeof(type) * (count) );\{type *XX=(ptr);\}
\par #else
\par #define GE_RAM_REALLOC_ARRAY(ptr,type,count)  (type *)geRam_Realloc(  (ptr), sizeof(type) * (count) )
\par #endif
\par 
\par #ifndef NDEBUG
\par geBoolean geRam_IsValidPtr(void *ptr);
\par #endif
\par 
\par #ifdef __cplusplus
\par   \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558918}{\*\bkmkstart _Toc454069935}Vec3d.h{\*\bkmkend _Toc446558918}{\*\bkmkend _Toc454069935}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  VEC3D.H                                                                             */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: 3D Vector interface                                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_VEC3D_H
\par #define GE_VEC3D_H
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct
\par \{
\par \tab geFloat X, Y, Z;
\par \} geVec3d;
\par 
\par #ifndef NDEBUG
\par GENESISAPI\tab geFloat GENESISCC   geVec3d_GetElement(geVec3d *V, int Index);
\par #else
\par \tab #define geVec3d_GetElement(Vector,Index)  (* ((&((Vector)->X)) +  (Index) ))
\par #endif
\par 
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Set(geVec3d *V, geFloat X, geFloat Y, geFloat Z);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Get(const geVec3d *V, geFloat *X, geFloat *Y, geFloat *Z);
\par 
\par GENESISAPI geFloat GENESISCC\tab geVec3d_DotProduct(const geVec3d *V1, const geVec3d *V2);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_CrossProduct(const geVec3d *V1, const geVec3d *V2, geVec3d *VResult);
\par GENESISAPI geBoolean GENESISCC\tab geVec3d_Compare(const geVec3d *V1, const geVec3d *V2,geFloat tolarance);
\par GENESISAPI geFloat GENESISCC\tab geVec3d_Normalize(geVec3d *V1);
\par GENESISAPI geBoolean GENESISCC \tab geVec3d_IsNormalized(const geVec3d *V);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Scale(const geVec3d *VSrc, geFloat Scale, geVec3d *VDst);
\par GENESISAPI geFloat GENESISCC\tab geVec3d_Length(const geVec3d *V1); 
\par GENESISAPI geFloat GENESISCC\tab geVec3d_LengthSquared(const geVec3d *V1);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Subtract(const geVec3d *V1, const geVec3d *V2, geVec3d *V1MinusV2);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Add(const geVec3d *V1, const geVec3d *V2,  geVec3d *VSum);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Copy(const geVec3d *Vsrc, geVec3d *Vdst);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Clear(geVec3d *V);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Inverse(geVec3d *V);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_MA(geVec3d *V1, geFloat Scale, const geVec3d *V2, geVec3d *V1PlusV2Scaled);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_AddScaled(const geVec3d *V1, const geVec3d *V2, geFloat Scale, geVec3d *V1PlusV2Scaled);
\par 
\par GENESISAPI geFloat GENESISCC\tab \tab geVec3d_DistanceBetween(const geVec3d *V1, const geVec3d *V2);\tab // returns length of V1-V2\tab 
\par 
\par GENESISAPI geBoolean GENESISCC geVec3d_IsValid(const geVec3d *V);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558919}{\*\bkmkstart _Toc454069936}Vfile.h{\*\bkmkend _Toc446558919}{\*\bkmkend _Toc454069936}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  VFILE.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Virtual file interface                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab VFILE_H
\par #define\tab VFILE_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #include\tab "basetype.h"
\par 
\par typedef\tab struct\tab geVFile\tab \tab \tab geVFile;
\par 
\par //--------- Finder (Directory) --------------
\par typedef\tab struct\tab geVFile_Finder\tab geVFile_Finder;
\par 
\par typedef int     \tab \tab geVFile_TypeIdentifier;
\par typedef unsigned int    geVFile_Attributes;
\par 
\par typedef struct\tab geVFile_Hints
\par \{
\par \tab void *\tab HintData;
\par \tab int\tab \tab HintDataLength;
\par \}\tab geVFile_Hints;
\par 
\par typedef\tab struct\tab geVFile_Time
\par \{
\par \tab unsigned long\tab Time1;
\par \tab unsigned long\tab Time2;
\par \}\tab geVFile_Time;
\par 
\par #define\tab GE_VFILE_ATTRIB_READONLY\tab 0x00000001
\par #define\tab GE_VFILE_ATTRIB_DIRECTORY\tab 0x00000002
\par 
\par typedef\tab struct\tab geVFile_Properties
\par \{
\par \tab geVFile_Time\tab \tab \tab \tab Time;
\par \tab geVFile_Attributes\tab \tab AttributeFlags;
\par \tab long\tab \tab \tab \tab \tab Size;
\par \tab geVFile_Hints\tab \tab \tab \tab Hints;
\par \tab char\tab \tab \tab \tab \tab Name[1024];
\par \}\tab geVFile_Properties;
\par 
\par #ifdef _INC_WINDOWS
\par GENESISAPI void GENESISCC geVFile_TimeToWin32FileTime(const geVFile_Time *, LPFILETIME Win32FileTime);
\par \tab // Converts a geVFile time to a Win32 FILETIME structure.  This API is the
\par \tab // way to get the file time into a format to do standardized date/time
\par \tab // operations on.  We do not provide date/time operations natively.
\par #endif
\par 
\par GENESISAPI geVFile_Finder * GENESISCC geVFile_CreateFinder(
\par \tab geVFile *\tab \tab FileSystem,
\par \tab const char *\tab FileSpec);
\par \tab // Creates a finder object from which you can get iterated file names.
\par \tab // This is findfirst/findnext functionality.  
\par 
\par GENESISAPI void GENESISCC geVFile_DestroyFinder(geVFile_Finder *Finder);
\par \tab // Destroys a Finder object
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_FinderGetNextFile(geVFile_Finder *Finder);
\par \tab // Tracks to the next file in the finder directory
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_FinderGetProperties(const geVFile_Finder *Finder, geVFile_Properties *Properties);
\par \tab // Gets the file properties from a geVFile_Finder.  You cannot set properties for
\par \tab // a file through a finder.  You have to set the properties through a geVFile.
\par 
\par //--------- File System Operations ----
\par 
\par typedef\tab struct\tab geVFile_MemoryContext
\par \{
\par \tab void *\tab Data;
\par \tab int\tab \tab DataLength;
\par \}\tab geVFile_MemoryContext;
\par 
\par #define GE_VFILE_TYPE_DOS\tab     ( (geVFile_TypeIdentifier) 1L )
\par #define GE_VFILE_TYPE_MEMORY\tab ( (geVFile_TypeIdentifier) 2L )
\par #define GE_VFILE_TYPE_VIRTUAL\tab ( (geVFile_TypeIdentifier) 3L )
\par 
\par // First three flags are mutually exclusive.  Combining them will result in failure
\par // returns for both geVFile_OpenNewSystem and geVFile_Open.
\par #define\tab GE_VFILE_OPEN_READONLY\tab  0x00000001
\par #define\tab GE_VFILE_OPEN_UPDATE \tab  0x00000002
\par #define\tab GE_VFILE_OPEN_CREATE\tab  0x00000004
\par 
\par #define GE_VFILE_OPEN_DIRECTORY  0x00000008
\par 
\par #if 0
\par geBoolean GENESISCC\tab geVFile_Startup(void);
\par \tab // Initializes the VFile System.  This API MUST be called before any other
\par \tab // VFile APIs are called.  This API ensures that the rest of the VFile systems
\par \tab // will be thread safe.  Hence the application should ensure that this function
\par \tab // is called once and only once.
\par #endif
\par 
\par GENESISAPI geVFile * GENESISCC geVFile_OpenNewSystem(
\par \tab geVFile *\tab \tab \tab \tab \tab FS,
\par \tab geVFile_TypeIdentifier\tab FileSystemType,  // \{ DOS, MEMORY, ETC ... \},
\par \tab const char *\tab \tab \tab Name, 
\par \tab void *\tab \tab \tab \tab \tab Context, 
\par \tab unsigned int \tab \tab \tab OpenModeFlags);
\par \tab // Opens a file / file system.
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_UpdateContext(geVFile *FS, void *Context, int ContextSize);
\par 
\par GENESISAPI geVFile * GENESISCC geVFile_GetContext(const geVFile *File);
\par \tab // Returns the outer context in which File was opened.
\par 
\par GENESISAPI geVFile * GENESISCC geVFile_Open( 
\par \tab geVFile *\tab \tab \tab FS,
\par \tab const char *\tab Name, 
\par \tab unsigned int \tab OpenModeFlags);
\par 
\par /*
\par typedef\tab enum
\par \{
\par \tab geVFile_AppendPath,
\par \tab geVFile_PrependPath,
\par \}\tab geVFile_SearchOrder;
\par */
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_AddPath(geVFile *FS1, const geVFile *FS2, geBoolean Append);
\par \tab // Appends (or prepends) the path associated with FS2 into FS1.
\par \tab //    Append==GE_TRUE   causes the FS2 to be searched AFTER FS1
\par \tab //    Append==GE_FALSE  causes the FS2 to be searched BEFORE FS1
\par 
\par /*  perhaps geVFile_AppendPath and geVFile_PrependPath */
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_DeleteFile(geVFile *FS, const char *FileName);
\par \tab // Deletes a file within a file system.  Returns GE_TRUE on success, GE_FALSE
\par \tab // on failure.
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_RenameFile(geVFile *FS, const char *FileName, const char *NewName);
\par \tab // Renames a file within a file system.  Returns GE_TRUE on success, GE_FALSE
\par \tab // on failure.
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_FileExists(geVFile *FS, const char *FileName);
\par \tab // Returns GE_TRUE if the file FileName exists in FS, GE_FALSE otherwise.
\par \tab // Does not do any searching (?)
\par 
\par //geVFile_VFileType geVFile_Register( all kinds of stuff );
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_Close (geVFile *File);
\par \tab // closes and destroys the File
\par 
\par //---------- File Specific Operations -----------
\par 
\par typedef\tab enum
\par \{
\par \tab GE_VFILE_SEEKCUR\tab = 0,
\par \tab GE_VFILE_SEEKEND\tab = 1,
\par \tab GE_VFILE_SEEKSET\tab = 2
\par \}\tab geVFile_Whence;
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_GetS  \tab \tab  (\tab \tab geVFile *File, void *Buff, int MaxLen);
\par GENESISAPI geBoolean GENESISCC geVFile_Read  \tab \tab  (\tab \tab geVFile *File, void *Buff, int Count);
\par GENESISAPI geBoolean GENESISCC geVFile_Write \tab \tab  (\tab \tab geVFile *File, const void *Buff, int Count);
\par GENESISAPI geBoolean GENESISCC geVFile_Seek  \tab \tab  (\tab \tab geVFile *File, int where, geVFile_Whence Whence);
\par GENESISAPI geBoolean GENESISCC geVFile_Printf\tab \tab  (\tab \tab geVFile *File, const char *Format, ...);
\par GENESISAPI geBoolean GENESISCC geVFile_EOF   \tab \tab  (const geVFile *File);
\par GENESISAPI geBoolean GENESISCC geVFile_Tell  \tab \tab  (const geVFile *File, long *Position);
\par GENESISAPI geBoolean GENESISCC geVFile_GetProperties(const geVFile *File, geVFile_Properties *Properties);
\par //geBoolean geVFile_GetName(geVFile *File, char *Buff, int MaxBuffLen);
\par \tab // Gets the name of the file
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_Size  \tab \tab  (const geVFile *File, long *Size);
\par GENESISAPI geBoolean GENESISCC geVFile_SetSize\tab \tab  (\tab \tab geVFile *File, long Size);
\par GENESISAPI geBoolean GENESISCC geVFile_SetAttributes(\tab \tab geVFile *File, geVFile_Attributes Attributes);
\par GENESISAPI geBoolean GENESISCC geVFile_SetTime\tab \tab  (\tab \tab geVFile *File, const geVFile_Time *Time);
\par GENESISAPI geBoolean GENESISCC geVFile_SetHints\tab  (\tab \tab geVFile *File, const geVFile_Hints *Hints);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc446558920}{\*\bkmkstart _Toc454069937}Xform3d.h{\*\bkmkend _Toc446558920}{\*\bkmkend _Toc454069937}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  XFORM3D.H                                                                           */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: 3D transform interface                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_XFORM_H
\par #define GE_XFORM_H
\par 
\par 
\par #include "Vec3d.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct
\par \{\tab 
\par \tab geFloat AX,AY,AZ;\tab // e[0][0],e[0][1],e[0][2]
\par \tab geFloat BX,BY,BZ;\tab // e[1][0],e[1][1],e[1][2]
\par \tab geFloat CX,CY,CZ;\tab // e[2][0],e[2][1],e[2][2]
\par \tab geVec3d Translation;  // e[0][3],e[1][3],e[2][3]
\par \tab //\tab   0,0,0,1\tab \tab // e[3][0],e[3][1],e[3][2]
\par \} geXForm3d;
\par 
\par /*   this is essentially a 'standard' 4x4 transform matrix,
\par      with the bottom row always 0,0,0,1
\par 
\par \tab | AX, AY, AZ, Translation.X |  
\par \tab | BX, BY, BZ, Translation.Y |  
\par \tab | CX, CY, CZ, Translation.Z |  
\par \tab |  0,  0,  0,      1        |  
\par */
\par 
\par //  all geXForm3d_Set* functions return a right-handed transform.
\par 
\par #define GEXFORM3D_MINIMUM_SCALE (0.00001f)
\par 
\par 
\par GENESISAPI void GENESISCC geXForm3d_Copy(
\par \tab const geXForm3d *Src, 
\par \tab geXForm3d *Dst);
\par \tab // copies Src to Dst.  
\par 
\par GENESISAPI geBoolean GENESISCC geXForm3d_IsValid(const geXForm3d *M);
\par \tab // returns GE_TRUE if M is 'valid'  
\par \tab // 'valid' means that M is non NULL, and there are no NAN's in the matrix.
\par 
\par GENESISAPI geBoolean GENESISCC geXForm3d_IsOrthonormal(const geXForm3d *M);
\par \tab // returns GE_TRUE if M is orthonormal 
\par \tab // (if the rows and columns are all normalized (transform has no scaling or shearing)
\par \tab // and is orthogonal (row1 cross row2 = row3 & col1 cross col2 = col3)
\par \tab // * does not check for right-handed convention *
\par 
\par GENESISAPI geBoolean GENESISCC geXForm3d_IsOrthogonal(const geXForm3d *M);
\par \tab // returns GE_TRUE if M is orthogonal
\par \tab // (row1 cross row2 = row3 & col1 cross col2 = col3)
\par \tab // * does not check for right-handed convention *
\par 
\par GENESISAPI void GENESISCC geXForm3d_Orthonormalize(geXForm3d *M);
\par \tab // essentially removes scaling (or other distortions) from 
\par \tab // an orthogonal (or nearly orthogonal) matrix 
\par \tab // returns a right-handed matrix
\par 
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetIdentity(geXForm3d *M);\tab \tab \tab 
\par \tab // sets M to an identity matrix (clears it)
\par \tab 
\par GENESISAPI void GENESISCC geXForm3d_SetXRotation(geXForm3d *M,geFloat RadianAngle);
\par \tab // sets up a transform that rotates RadianAngle about X axis
\par \tab // all existing contents of M are replaced
\par \tab 
\par GENESISAPI void GENESISCC geXForm3d_SetYRotation(geXForm3d *M,geFloat RadianAngle);
\par \tab // sets up a transform that rotates RadianAngle about Y axis
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetZRotation(geXForm3d *M,geFloat RadianAngle);
\par \tab // sets up a transform that rotates RadianAngle about Z axis
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetTranslation(geXForm3d *M,geFloat x, geFloat y, geFloat z);
\par \tab // sets up a transform that translates x,y,z
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetScaling(geXForm3d *M,geFloat x, geFloat y, geFloat z);
\par \tab // sets up a transform that scales by x,y,z
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_RotateX(geXForm3d *M,geFloat RadianAngle);  
\par \tab // Rotates M by RadianAngle about X axis   
\par \tab // applies the rotation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_RotateY(geXForm3d *M,geFloat RadianAngle);
\par \tab // Rotates M by RadianAngle about Y axis
\par \tab // applies the rotation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_RotateZ(geXForm3d *M,geFloat RadianAngle);
\par \tab // Rotates M by RadianAngle about Z axis
\par \tab // applies the rotation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_Translate(geXForm3d *M,geFloat x, geFloat y, geFloat z);\tab 
\par \tab // Translates M by x,y,z
\par \tab // applies the translation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_Scale(geXForm3d *M,geFloat x, geFloat y, geFloat z);\tab \tab 
\par \tab // Scales M by x,y,z
\par \tab // applies the scale to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_Multiply(
\par \tab const geXForm3d *M1, 
\par \tab const geXForm3d *M2, 
\par \tab geXForm3d *MProduct);
\par \tab // MProduct = matrix multiply of M1*M2
\par \tab // Concatenates the transformation in the M2 matrix onto the transformation in M1
\par 
\par GENESISAPI void GENESISCC geXForm3d_Transform(
\par \tab const geXForm3d *M,
\par \tab const geVec3d *V, 
\par \tab geVec3d *Result);
\par \tab // Result is Matrix M * Vector V:  V Tranformed by M
\par 
\par GENESISAPI void GENESISCC geXForm3d_TransformArray(\tab const geXForm3d *XForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Source, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Dest, 
\par \tab \tab \tab \tab \tab \tab \tab \tab int32 Count);
\par 
\par GENESISAPI void GENESISCC geXForm3d_Rotate(
\par \tab const geXForm3d *M,
\par \tab const geVec3d *V, 
\par \tab geVec3d *Result);
\par \tab // Result is Matrix M * Vector V:  V Rotated by M (no translation)
\par 
\par 
\par /***
\par *
\par \tab "Left,Up,In" are just the basis vectors in the new coordinate space.
\par \tab You can get them by multiplying the unit bases into the transforms.
\par *
\par ******/
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetLeft(const geXForm3d *M, geVec3d *Left);
\par \tab // Gets a vector that is 'left' in the frame of reference of M (facing -Z)
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetUp(const geXForm3d *M,    geVec3d *Up);
\par \tab // Gets a vector that is 'up' in the frame of reference of M (facing -Z)
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetIn(const geXForm3d *M,  geVec3d *In);
\par \tab // Gets a vector that is 'in' in the frame of reference of M (facing -Z)
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetTranspose(const geXForm3d *M, geXForm3d *MTranspose);
\par \tab // Gets the Transpose transform of M   (M^T) 
\par \tab // Transpose of a matrix is the switch of the rows and columns
\par \tab // The transpose is usefull because it is rapidly computed and is equal to the inverse 
\par \tab // transform for orthonormal transforms    [inverse is (M')  where M*M' = Identity ]
\par 
\par GENESISAPI void GENESISCC geXForm3d_TransposeTransform(
\par \tab const geXForm3d *M, 
\par \tab const geVec3d *V, 
\par \tab geVec3d *Result);
\par \tab // applies the transpose transform of M to V.  Result = (M^T) * V
\par 
\par /*****
\par *
\par \tab the Euler angles are subsequent rotations :
\par \tab \tab by Angles->Z around the Z axis
\par \tab \tab then by Angles->Y around the Y axis, in the newly rotate coordinates
\par \tab \tab then by Angles->X around the X axis
\par *
\par ******/\tab 
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetEulerAngles(const geXForm3d *M, geVec3d *Angles);
\par \tab // Finds Euler angles from M and puts them into Angles
\par \tab 
\par GENESISAPI void GENESISCC geXForm3d_SetEulerAngles(geXForm3d *M, const geVec3d *Angles);
\par \tab // Applies Euler angles to build M
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetFromLeftUpIn(
\par \tab geXForm3d *M,
\par \tab const geVec3d *Left, 
\par \tab const geVec3d *Up, 
\par \tab const geVec3d *In);
\par \tab // Builds an geXForm3d from orthonormal Left, Up and In vectors
\par 
\par GENESISAPI void GENESISCC geXForm3d_Mirror(
\par \tab const\tab \tab geXForm3d *Source, 
\par \tab const\tab \tab geVec3d *PlaneNormal, 
\par \tab float\tab \tab PlaneDist, 
\par \tab geXForm3d\tab *Dest);
\par \tab // Mirrors a XForm3d about a plane
\par 
\par 
\par //--------------
\par 
\par #ifndef NDEBUG
\par \tab GENESISAPI \tab void GENESISCC geXForm3d_SetMaximalAssertionMode( geBoolean Enable );
\par #else
\par \tab #define geXForm3d_SetMaximalAssertionMode(Enable)
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par 
\par \page 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i {\*\bkmkstart _Toc446558921}{\*\bkmkstart _Toc454069938}OpenSource/Source Subdirectory{\*\bkmkend _Toc454069938}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files i
n this subdirectory and the next sixteen subdirectories following it comprise the links necessary to create the Genesis3D engine.  These are the include files you need in order to create the libraries and drivers provided by Eclipse as the Genesis3D game 
engine.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069939}Camera.h{\*\bkmkend _Toc454069939}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Camera.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard/Charles Bloom                                                  */
\par /*  Description: Creation/Transformation/projection code for a camera                   */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_CAMERA_H
\par #define GE_CAMERA_H
\par 
\par #include "BaseType.h"
\par #include "Vec3d.h"
\par #include "XForm3d.h"
\par #include "GETypes.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par typedef struct geCamera geCamera;
\par 
\par 
\par //================================================================================
\par //\tab Function ProtoTypes
\par //================================================================================
\par GENESISAPI geCamera *GENESISCC geCamera_Create(geFloat Fov, const geRect *Rect);
\par GENESISAPI void GENESISCC geCamera_Destroy(geCamera **pCamera);
\par GENESISAPI void GENESISCC geCamera_SetZScale(geCamera *Camera, geFloat ZScale);
\par GENESISAPI geFloat GENESISCC geCamera_GetZScale(const geCamera *Camera);
\par GENESISAPI void GENESISCC geCamera_GetClippingRect(const geCamera *Camera, geRect *Rect);
\par void GENESISCC geCamera_GetWidthHeight(const geCamera *Camera,geFloat *Width,geFloat *Height);
\par float GENESISCC geCamera_GetScale(const geCamera *Camera);
\par GENESISAPI void GENESISCC geCamera_SetAttributes(geCamera *Camera, geFloat Fov, const geRect *Rect);
\par void geCamera_FillDriverInfo(geCamera *Camera);
\par GENESISAPI void GENESISCC geCamera_ScreenPointToWorld (\tab const geCamera\tab *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32\tab \tab \tab  ScreenX,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32\tab \tab \tab  ScreenY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d\tab \tab \tab *Vector);
\par GENESISAPI void GENESISCC geCamera_Project(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *PointInCameraSpace, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *ProjectedPoint);
\par GENESISAPI void GENESISCC geCamera_ProjectZ(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *PointInCameraSpace, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *ProjectedPoint);
\par void GENESISCC geCamera_ProjectAndClamp(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *PointInCameraSpace, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *ProjectedPoint);
\par void GENESISCC geCamera_GetViewAngleXSinCos( const geCamera *Camera, geFloat *SinAngle, geFloat *CosAngle );
\par void GENESISCC geCamera_GetViewAngleYSinCos( const geCamera *Camera, geFloat *SinAngle, geFloat *CosAngle );
\par GENESISAPI void GENESISCC geCamera_Transform(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePoint, 
\par \tab \tab \tab \tab \tab \tab       geVec3d *CameraSpacePoint);
\par GENESISAPI void GENESISCC geCamera_TransformArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab       geVec3d *CameraSpacePointPtr, int count);
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab       geVec3d *ProjectedSpacePointPtr, int count);
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectLArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab const GE_LVertex *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab       GE_TLVertex *ProjectedSpacePointPtr, int count);
\par GENESISAPI void GENESISCC geCamera_TransformAndProject(const geCamera *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Point, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *ProjectedPoint);
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectL(const geCamera *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab const GE_LVertex *Point, 
\par \tab \tab \tab \tab \tab \tab \tab \tab GE_TLVertex *ProjectedPoint);
\par 
\par GENESISAPI geBoolean GENESISCC geCamera_SetWorldSpaceXForm(geCamera *Camera, const geXForm3d *XForm);
\par GENESISAPI geBoolean GENESISCC geCamera_SetWorldSpaceVisXForm(geCamera *Camera, const geXForm3d *XForm);
\par GENESISAPI const geXForm3d * GENESISCC geCamera_GetWorldSpaceXForm( const geCamera *Camera);
\par const geXForm3d * GENESISCC geCamera_GetCameraSpaceXForm( const geCamera *Camera);
\par GENESISAPI const geXForm3d * GENESISCC geCamera_GetCameraSpaceVisXForm( const geCamera *Camera);
\par GENESISAPI const geXForm3d * GENESISCC geCamera_GetWorldSpaceVisXForm( const geCamera *Camera);
\par const geVec3d *GENESISCC geCamera_GetPov(const geCamera *Camera);
\par const geVec3d *GENESISCC geCamera_GetVisPov(const geCamera *Camera);
\par GENESISAPI geBoolean GENESISCC geCamera_ConvertWorldSpaceToCameraSpace(const geXForm3d *WXForm, geXForm3d *CXForm);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069940}CSNetMgr.h{\*\bkmkend _Toc454069940}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  CSNetMgr.h                                                                         */
\par /*                                                                                      */
\par /*  Author: John Pollard/Brian Adelberg                                                 */
\par /*  Description: Client/Server network code                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_CSNETMGR_H
\par #define GE_CSNETMGR_H
\par 
\par #include "BaseType.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par typedef struct\tab \tab geCSNetMgr\tab geCSNetMgr;
\par 
\par typedef uint32\tab \tab \tab \tab geCSNetMgr_NetID;
\par #define\tab MAX_CLIENT_NAME\tab \tab 256
\par 
\par // Types for messages received from GE_ReceiveSystemMessage
\par typedef enum 
\par \{
\par \tab NET_MSG_NONE,\tab \tab \tab \tab \tab // No msg
\par \tab NET_MSG_USER,\tab \tab \tab \tab \tab // User message
\par \tab NET_MSG_CREATE_CLIENT,\tab \tab \tab // A new client has joined in
\par \tab NET_MSG_DESTROY_CLIENT,\tab \tab \tab // An existing client has left
\par \tab NET_MSG_HOST,\tab \tab \tab \tab \tab // We are the server now
\par \tab NET_MSG_SESSIONLOST,\tab \tab \tab // Connection was lost
\par \tab NET_MSG_SERVER_ID,\tab \tab \tab \tab // Internal, for hand shaking process
\par \} geCSNetMgr_NetMsgType;
\par 
\par typedef struct
\par \{
\par \tab char\tab \tab \tab \tab Name[MAX_CLIENT_NAME];
\par \tab geCSNetMgr_NetID\tab Id;
\par \} geCSNetMgr_NetClient;
\par 
\par 
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included previously for this api to be exposed.
\par 
\par \tab typedef struct geCSNetMgr_NetSession
\par \tab \{
\par \tab \tab char\tab \tab SessionName[200];\tab \tab \tab \tab \tab // Description of Service provider
\par \tab \tab GUID\tab \tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab // Service Provider GUID
\par \tab \tab #pragma message("define a geGUID?.. wouldn't need a windows dependency here...")
\par \tab \} geCSNetMgr_NetSession;
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_FindSession(geCSNetMgr *M, const char *IPAdress, geCSNetMgr_NetSession **SessionList, int32 *SessionNum );
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_JoinSession(geCSNetMgr *M, const char *Name, const geCSNetMgr_NetSession* Session);
\par #endif
\par 
\par GENESISAPI geCSNetMgr *\tab \tab GENESISCC geCSNetMgr_Create(void);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCSNetMgr_Destroy(geCSNetMgr **ppM);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetServerID(geCSNetMgr *M);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetOurID(geCSNetMgr *M);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetAllPlayerID(geCSNetMgr *M);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_ReceiveFromServer(geCSNetMgr *M, geCSNetMgr_NetMsgType *Type, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_ReceiveFromClient(geCSNetMgr *M, geCSNetMgr_NetMsgType *Type, geCSNetMgr_NetID *IdClient, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_ReceiveSystemMessage(geCSNetMgr *M, geCSNetMgr_NetID IdFor, geCSNetMgr_NetMsgType *Type, geCSNetMgr_NetClient *Client);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_ReceiveAllMessages(geCSNetMgr *M, geCSNetMgr_NetID *IdFrom, geCSNetMgr_NetID *IdTo, geCSNetMgr_NetMsgType *Type, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_WeAreTheServer(geCSNetMgr *M);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_StartSession(geCSNetMgr *M, const char *SessionName, const char *PlayerName );
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_StopSession(geCSNetMgr *M);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_SendToServer(geCSNetMgr *M, geBoolean Guaranteed, uint8 *Data, int32 DataSize);
\par GENESISAPI geBoolean GENESISCC\tab \tab geCSNetMgr_SendToClient(geCSNetMgr *M, geCSNetMgr_NetID To, geBoolean Guaranteed, uint8 *Data, int32 DataSize);
\par 
\par 
\par // GENESIS_PRIVATE_APIS
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069941}Genesis.h{\*\bkmkend _Toc454069941}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Genesis.h                                                                           */
\par /*                                                                                      */
\par /*  Description: The master header for Genesis                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GENESIS_H
\par #define GENESIS_H
\par 
\par #include "BaseType.h"
\par #include "Vec3d.h"
\par #include "XForm3d.h"
\par #include "GETypes.h"
\par #include "ExtBox.h"
\par #include "vfile.h"
\par #include "Bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //================================================================================
\par //\tab Constants / Defines / TypDefs
\par //================================================================================
\par 
\par typedef struct\tab \tab geEngine\tab \tab \tab geEngine;
\par 
\par typedef struct\tab \tab geDriver_System\tab \tab geDriver_System;
\par typedef struct\tab \tab geDriver\tab \tab \tab geDriver;
\par typedef struct\tab \tab geDriver_Mode\tab \tab geDriver_Mode;
\par 
\par typedef struct\tab \tab geSound_System\tab \tab geSound_System;
\par typedef struct\tab \tab geSound_Cfg\tab \tab \tab geSound_Cfg;
\par typedef struct\tab \tab geSound_Def\tab \tab \tab geSound_Def;
\par typedef struct\tab \tab geSound\tab \tab \tab \tab geSound;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par typedef struct\tab \tab geActor\tab \tab \tab \tab geActor;
\par typedef struct\tab \tab geActor_Def\tab \tab \tab geActor_Def;\tab \tab // the definition of an actor's geometry/bone structure
\par 
\par typedef struct\tab \tab geWorld\tab \tab \tab \tab geWorld;
\par 
\par typedef struct\tab \tab geWorld_Model\tab \tab geWorld_Model;
\par 
\par typedef struct\tab \tab geEntity\tab \tab \tab geEntity;
\par typedef struct\tab \tab geEntity_EntitySet\tab geEntity_EntitySet;
\par 
\par typedef struct\tab \tab geCamera\tab \tab \tab geCamera;
\par 
\par typedef struct\tab \tab geCSNetMgr\tab \tab \tab geCSNetMgr;
\par 
\par typedef struct\tab \tab gePoly\tab \tab \tab \tab gePoly;
\par 
\par typedef struct\tab \tab geLight\tab \tab \tab \tab geLight;\tab \tab \tab 
\par 
\par typedef struct\tab \tab geFog\tab \tab \tab \tab geFog;
\par 
\par typedef struct\tab \tab geMesh_Def\tab \tab \tab geMesh_Def;\tab \tab \tab // Mesh def
\par typedef struct\tab \tab geMesh\tab \tab \tab \tab geMesh;\tab \tab \tab \tab 
\par 
\par #define GE_VERSION_MAJOR\tab \tab (1UL)
\par #define GE_VERSION_MINOR\tab \tab (3UL)
\par #define GE_VERSION_MINOR_MIN\tab (3UL)
\par 
\par #define GE_VERSION_MAJOR_SHIFT\tab (16)
\par #define GE_VERSION_MAJOR_MASK\tab ((uint32)0xFFFF0000)
\par 
\par #define GE_VERSION\tab \tab \tab \tab ( (GE_VERSION_MAJOR << GE_VERSION_MAJOR_SHIFT) + GE_VERSION_MINOR )
\par 
\par // From here down, still needs to be fixed up for July4
\par typedef\tab struct\tab \tab GE_ModelMotion\tab \tab GE_ModelMotion;
\par typedef float\tab \tab GE_TimeType;
\par 
\par // Polys
\par typedef enum
\par \{
\par \tab GE_TEXTURED_POLY,
\par \tab GE_GOURAUD_POLY,
\par \tab GE_TEXTURED_POINT\tab \tab \tab \tab \tab 
\par \} gePoly_Type;
\par 
\par // Poly Fx flags
\par #define\tab GE_RENDER_DO_NOT_OCCLUDE_OTHERS\tab (1<<0)\tab \tab \tab // Poly will not occlude others
\par #define GE_RENDER_DO_NOT_OCCLUDE_SELF\tab (1<<1)\tab \tab \tab // Renders under any condition.  Useful for halos, etc...
\par #define\tab GE_RENDER_BACKFACED\tab \tab \tab \tab (1<<2)\tab \tab \tab // Poly should be backfaced from the Camera's Pov
\par #define GE_RENDER_DEPTH_SORT_BF\tab \tab \tab (1<<3)\tab \tab \tab // Sorts relative to camera position, from back to front
\par #define GE_RENDER_CLAMP_UV\tab \tab \tab \tab (1<<4)\tab \tab \tab // Clamp UV's in both directions
\par 
\par // World Add flags
\par #define GE_WORLD_RENDER\tab \tab \tab \tab (1<<0)
\par #define GE_WORLD_COLLIDE\tab \tab \tab (1<<1)
\par 
\par 
\par 
\par #ifndef GE_CONTENTS_TYPES
\par #define GE_CONTENTS_TYPES
\par 
\par //
\par // Content types in GE_Contents structure (multiple contents can be mixed...)
\par //
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par //\tab IF THESE FLAGS CHANGE, THEY MUST CHANGE IN GBSPFILE.H in Genesis AND GBSPLIB, and Genesis.H!!!!!
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par #define GE_CONTENTS_SOLID\tab \tab \tab (1<<0)\tab \tab // Solid (Visible)
\par #define GE_CONTENTS_WINDOW\tab \tab \tab (1<<1)\tab \tab // Window (Visible)
\par #define GE_CONTENTS_EMPTY\tab \tab \tab (1<<2)\tab \tab // Empty but Visible (water, lava, etc...)
\par 
\par #define GE_CONTENTS_TRANSLUCENT\tab \tab (1<<3)\tab \tab // Vis will see through it
\par #define GE_CONTENTS_WAVY\tab \tab \tab (1<<4)\tab \tab // Wavy (Visible)
\par #define GE_CONTENTS_DETAIL\tab \tab \tab (1<<5)\tab \tab // Won't be included in vis oclusion
\par 
\par #define GE_CONTENTS_CLIP\tab \tab \tab (1<<6)\tab \tab // Structural but not visible
\par #define GE_CONTENTS_HINT\tab \tab \tab (1<<7)\tab \tab // Primary splitter (Non-Visible)
\par #define GE_CONTENTS_AREA\tab \tab \tab (1<<8)\tab \tab // Area seperator leaf (Non-Visible)
\par 
\par #define GE_CONTENTS_FLOCKING\tab \tab (1<<9)
\par #define GE_CONTENTS_SHEET\tab \tab \tab (1<<10)
\par #define GE_CONTENTS_AIR\tab \tab \tab \tab (1<<11)\tab \tab // No brush lives in this leaf
\par #define GE_RESERVED4\tab \tab \tab \tab (1<<12)
\par #define GE_RESERVED5\tab \tab \tab \tab (1<<13)
\par #define GE_RESERVED6\tab \tab \tab \tab (1<<14)
\par #define GE_RESERVED7\tab \tab \tab \tab (1<<15)
\par 
\par // 16-31 reserved for user contents
\par #define GE_CONTENTS_USER1\tab \tab \tab (1<<16)
\par #define GE_CONTENTS_USER2\tab \tab \tab (1<<17)
\par #define GE_CONTENTS_USER3\tab \tab \tab (1<<18)
\par #define GE_CONTENTS_USER4\tab \tab \tab (1<<19)
\par #define GE_CONTENTS_USER5\tab \tab \tab (1<<20)
\par #define GE_CONTENTS_USER6\tab \tab \tab (1<<21)
\par #define GE_CONTENTS_USER7\tab \tab \tab (1<<22)
\par #define GE_CONTENTS_USER8\tab \tab \tab (1<<23)
\par #define GE_CONTENTS_USER9\tab \tab \tab (1<<24)
\par #define GE_CONTENTS_USER10\tab \tab \tab (1<<25)
\par #define GE_CONTENTS_USER11\tab \tab \tab (1<<26)
\par #define GE_CONTENTS_USER12\tab \tab \tab (1<<27)
\par #define GE_CONTENTS_USER13\tab \tab \tab (1<<28)
\par #define GE_CONTENTS_USER14\tab \tab \tab (1<<29)
\par #define GE_CONTENTS_USER15\tab \tab \tab (1<<30)
\par #define GE_CONTENTS_USER16\tab \tab \tab (1<<31)
\par // 16-31 reserved for user contents
\par 
\par 
\par // These contents are all solid types
\par #define GE_CONTENTS_SOLID_CLIP\tab \tab (GE_CONTENTS_SOLID | GE_CONTENTS_WINDOW | GE_CONTENTS_CLIP)
\par #define GE_CONTENTS_CANNOT_OCCUPY\tab GE_CONTENTS_SOLID_CLIP
\par 
\par // These contents are all visible types
\par #define GE_VISIBLE_CONTENTS\tab \tab \tab (\tab GE_CONTENTS_SOLID | \\
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CONTENTS_EMPTY | \\
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CONTENTS_WINDOW | \\
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CONTENTS_WAVY)
\par 
\par #endif
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par //*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
\par 
\par // NOTES - Fills in first Model/Mesh hit
\par // Exceptions:
\par //\tab \tab Returns the last solid model hit...
\par typedef struct
\par \{
\par \tab geMesh\tab \tab \tab *Mesh;
\par \tab geWorld_Model\tab *Model;
\par \tab geActor\tab \tab \tab *Actor;
\par \tab int32\tab \tab \tab Contents;
\par \} GE_Contents;
\par 
\par typedef geBoolean GE_CollisionCB(geWorld_Model *Model, geActor *Actor, void *Context);
\par 
\par // Collision
\par typedef struct
\par \{
\par \tab geVec3d\tab Normal;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Orientation of plane
\par \tab float\tab Dist;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Distance from origin
\par \} GE_Plane;
\par 
\par typedef struct
\par \{
\par \tab geWorld_Model\tab *Model;\tab \tab \tab \tab \tab \tab \tab // Pointer to what model was hit (if any)
\par \tab geMesh\tab \tab \tab *Mesh;\tab \tab \tab \tab \tab \tab \tab // Pointer to what mesh was hit (if any)
\par \tab geActor\tab \tab \tab *Actor;\tab \tab \tab \tab \tab \tab \tab // Pointer to what actor was hit (if any)\tab 
\par \tab geVec3d\tab \tab \tab Impact;\tab \tab \tab \tab \tab \tab \tab // Impact Point
\par \tab float\tab \tab \tab Ratio;\tab \tab \tab \tab \tab \tab \tab // Percent from 0 to 1.0, how far along the line for the impact point
\par \tab GE_Plane\tab \tab Plane;\tab \tab \tab \tab \tab \tab \tab // Impact Plane
\par \} GE_Collision;
\par 
\par // If these render states change, they must change in DCommon.h too!!!
\par // These are still under construction, and are for debug purposes only.
\par // They are merely means of overriding ways the engine normally renders primitives, etc...
\par //
\par //\tab RenderState States
\par //
\par #define GE_RENDERSTATE_ZWRITE\tab \tab 0\tab \tab // Z Writes
\par #define GE_RENDERSTATE_ZCMP\tab \tab \tab 1\tab \tab // Z Compares
\par #define GE_RENDERSTATE_BILINEAR\tab \tab 2\tab \tab // Bilinear filtering
\par #define\tab GE_RENDERSTATE_ANTI_ALIAS\tab 3\tab \tab // Anti-Aliasing
\par #define GE_RENDERSTATE_POLYMODE\tab \tab 4\tab \tab // Normal, Gouraud only, Lines only, etc
\par 
\par //
\par //\tab RenderState Flags
\par //
\par #define GE_RENDERFLAG_OFF\tab \tab 0
\par #define GE_RENDERFLAG_ON\tab \tab 1
\par 
\par //
\par //  PolyMode flags\tab (A method to override how polys are drawn for debugging purposes...)
\par //
\par #define GE_POLYMODE_NORMAL\tab \tab 1\tab \tab \tab // Draw as is
\par #define GE_POLYMODE_GOURAUD\tab \tab 2\tab \tab \tab // Gouraud only
\par #define GE_POLYMODE_LINES\tab \tab 3\tab \tab \tab // Outlines only
\par 
\par //================================================================================
\par //\tab Engine Management functions
\par //================================================================================
\par 
\par 
\par #ifdef _INC_WINDOWS\tab 
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par \tab 
\par 
\par GENESISAPI\tab geEngine\tab *geEngine_CreateWithVersion(HWND hWnd, const char *AppName, const char *DriverDirectory, uint32 Version);
\par \tab \tab \tab \tab \tab \tab \tab // use geEngine_Create, rather than calling this directly.
\par 
\par #define geEngine_Create( hWnd, AppName, DriverDirectory)   geEngine_CreateWithVersion(hWnd,AppName,DriverDirectory,GE_VERSION)
\par 
\par #endif
\par 
\par GENESISAPI void\tab \tab \tab geEngine_Free(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_AddWorld(geEngine *Engine, geWorld *World);
\par GENESISAPI geBoolean\tab geEngine_RemoveWorld(geEngine *Engine, geWorld *World);
\par 
\par GENESISAPI geBoolean\tab geEngine_AddBitmap(geEngine *Engine, geBitmap *Bitmap);
\par GENESISAPI geBoolean\tab geEngine_RemoveBitmap(geEngine *Engine, geBitmap *Bitmap);
\par 
\par GENESISAPI geDriver_System *geEngine_GetDriverSystem(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_SetDriverAndMode(\tab geEngine *Engine, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geDriver *Driver, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geDriver_Mode *DriverMode);
\par 
\par GENESISAPI geBoolean\tab geEngine_ShutdownDriver(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_BeginFrame(geEngine *Engine, geCamera *Camera, geBoolean ClearScreen);
\par GENESISAPI geBoolean\tab geEngine_EndFrame(geEngine *Engine);
\par 
\par GENESISAPI geBoolean\tab geEngine_RenderWorld(geEngine *Engine, geWorld *World, geCamera *Camera, geFloat Time);
\par GENESISAPI geBoolean\tab geEngine_Printf(geEngine *Engine, int32 x, int32 y, const char *String, ...);
\par 
\par GENESISAPI void\tab \tab \tab GENESISCC geEngine_RenderPoly(const geEngine *Engine, const GE_TLVertex *Points, int NumPoints, const geBitmap *Texture, uint32 Flags);
\par \tab \tab \tab \tab \tab \tab \tab //RenderPoly : if Texture is null, we Gouraud shade
\par 
\par GENESISAPI void\tab \tab \tab GENESISCC geEngine_RenderPolyArray(const geEngine *Engine, const GE_TLVertex ** pPoints, int * pNumPoints, int NumPolys, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geBitmap *Texture, uint32 Flags);
\par 
\par GENESISAPI geBoolean\tab GENESISCC geEngine_DrawBitmap(const geEngine *Engine,const geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geRect * Source, uint32 x, uint32 y);
\par \tab \tab \tab \tab \tab \tab \tab //DrawBitmap & RenderPoly : must Engine_AddBitmap first!
\par 
\par 
\par GENESISAPI void\tab \tab \tab geEngine_FillRect(geEngine *Engine, const GE_Rect *Rect, const GE_RGBA *Color);
\par 
\par GENESISAPI geBoolean\tab geEngine_SetGamma(geEngine *Engine, float Gamma);
\par GENESISAPI geBoolean\tab geEngine_GetGamma(geEngine *Engine, float *Gamma);
\par 
\par GENESISAPI geBoolean\tab geEngine_ScreenShot(geEngine *Engine, const char *FileName);
\par 
\par GENESISAPI void\tab \tab \tab geEngine_EnableFrameRateCounter(geEngine *Engine, geBoolean Enabled);
\par 
\par GENESISAPI geBoolean\tab geEngine_Activate(geEngine *Engine, geBoolean bActive);
\par 
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par GENESISAPI geBoolean\tab geEngine_UpdateWindow(geEngine *Engine);
\par #endif
\par 
\par // geDriver
\par GENESISAPI geDriver\tab \tab *geDriver_SystemGetNextDriver(geDriver_System *DriverSystem, geDriver *Start);
\par GENESISAPI geDriver_Mode *geDriver_GetNextMode(geDriver *Driver, geDriver_Mode *Start);
\par GENESISAPI geBoolean\tab geDriver_GetName(geDriver *Driver, const char **Name);
\par GENESISAPI geBoolean\tab geDriver_ModeGetName(geDriver_Mode *Mode, const char **Name);
\par GENESISAPI geBoolean\tab geDriver_ModeGetWidthHeight(geDriver_Mode *Mode, int32 *Width, int32 *Height);
\par 
\par //================================================================================
\par //\tab Sound Management functions
\par //================================================================================
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par GENESISAPI \tab geSound_System *geSound_CreateSoundSystem(HWND hWnd);
\par #endif
\par 
\par 
\par GENESISAPI void\tab \tab \tab geSound_DestroySoundSystem(geSound_System *Sound);
\par 
\par 
\par GENESISAPI geSound_Def\tab    *geSound_LoadSoundDef(geSound_System *SoundS, geVFile *File);
\par GENESISAPI void\tab \tab \tab \tab geSound_FreeSoundDef(geSound_System *SoundS, geSound_Def *SoundDef);
\par 
\par GENESISAPI geSound\tab \tab    *geSound_PlaySoundDef(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound_Def *SoundDef, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Volume, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Pan, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Frequency, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean Loop);
\par GENESISAPI geBoolean\tab \tab geSound_StopSound(geSound_System *SoundS, geSound *Sound);
\par GENESISAPI geBoolean\tab \tab geSound_ModifySound(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound *Sound, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Volume, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Pan, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Frequency);
\par GENESISAPI geBoolean\tab \tab geSound_SoundIsPlaying(geSound_System *SoundS, geSound *Sound);
\par GENESISAPI geBoolean\tab \tab geSound_SetMasterVolume( geSound_System *SoundS, geFloat Volume );
\par 
\par GENESISAPI void geSound3D_GetConfig(
\par \tab \tab \tab const geWorld *World, 
\par \tab \tab \tab const geXForm3d *CameraTransform, 
\par \tab \tab \tab const geVec3d *SoundPos, 
\par \tab \tab \tab geFloat Min, 
\par \tab \tab \tab geFloat Ds,
\par \tab \tab \tab geFloat *Volume,
\par \tab \tab \tab geFloat *Pan,
\par \tab \tab \tab geFloat *Frequency);
\par 
\par //================================================================================
\par //  Path Support
\par //================================================================================
\par #include "Path.h"
\par //================================================================================
\par //  Motion Support
\par //================================================================================
\par #include "Motion.h"
\par //================================================================================
\par //  Actor Support
\par //================================================================================
\par #include "Actor.h"
\par 
\par 
\par 
\par //================================================================================
\par //\tab World Management functions
\par //================================================================================
\par GENESISAPI geWorld\tab \tab *geWorld_Create(geVFile *File);
\par GENESISAPI void\tab \tab \tab geWorld_Free(geWorld *World);
\par 
\par // World Actors
\par GENESISAPI geBoolean\tab geWorld_RemoveActor    (geWorld *World, geActor *Actor);
\par GENESISAPI geBoolean    geWorld_AddActor       (geWorld *World, geActor *Actor, uint32 Flags, uint32 UserFlags);
\par GENESISAPI geBoolean\tab geWorld_SetActorFlags  (geWorld *World, geActor *Actor, uint32 Flags);
\par 
\par // World Bitmaps
\par GENESISAPI geBoolean\tab geWorld_AddBitmap(\tab \tab geWorld *World, geBitmap *Bitmap);
\par GENESISAPI geBoolean\tab geWorld_RemoveBitmap(\tab geWorld *World, geBitmap *Bitmap);
\par GENESISAPI geBoolean\tab geWorld_HasBitmap(const geWorld *World, const geBitmap *Bitmap);
\par GENESISAPI geBitmap\tab \tab *geWorld_GetBitmapByName(geWorld *World, const char *BitmapName);
\par GENESISAPI geBoolean\tab geWorld_BitmapIsVisible(geWorld *World, const geBitmap *Bitmap);
\par 
\par // World BModels
\par GENESISAPI geWorld_Model\tab *geWorld_GetNextModel(geWorld *World, geWorld_Model *Start);
\par GENESISAPI geBoolean\tab \tab geWorld_SetModelXForm(geWorld *World, geWorld_Model *Model, const geXForm3d *XForm);
\par GENESISAPI geBoolean\tab \tab geWorld_GetModelXForm(const geWorld *World, const geWorld_Model *Model, geXForm3d *XForm);
\par GENESISAPI geBoolean\tab \tab geWorld_OpenModel(geWorld *World, geWorld_Model *Model, geBoolean Open);
\par GENESISAPI geBoolean\tab \tab geWorld_GetModelRotationalCenter(const geWorld *World, const geWorld_Model *Model, geVec3d *Center);
\par GENESISAPI geBoolean\tab \tab geWorld_ModelGetBBox(const geWorld *World, const geWorld_Model *Model, geVec3d *Mins, geVec3d *Maxs);
\par GENESISAPI geMotion *\tab \tab geWorld_ModelGetMotion(geWorld_Model *Model);
\par 
\par GENESISAPI void\tab \tab \tab *geWorld_ModelGetUserData(const geWorld_Model *Model);
\par GENESISAPI void\tab \tab \tab geWorld_ModelSetUserData(geWorld_Model *Model, void *UserData);
\par GENESISAPI void\tab \tab \tab geWorld_ModelSetFlags(geWorld_Model *Model, uint32 ModelFlags);
\par GENESISAPI uint32\tab \tab geWorld_ModelGetFlags(geWorld_Model *Model);
\par 
\par // World Lights
\par GENESISAPI geLight\tab \tab *geWorld_AddLight(geWorld *World);
\par GENESISAPI void\tab \tab \tab geWorld_RemoveLight(geWorld *World, geLight *Light);
\par GENESISAPI geBoolean\tab geWorld_SetLightAttributes(\tab geWorld *World,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geLight\tab \tab *Light, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab geVec3d *Pos, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab GE_RGBA *RGBA, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab Radius,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean\tab CastShadow);
\par GENESISAPI geBoolean\tab geWorld_SetLTypeTable(geWorld *World, int32 LType, const char *Table);
\par 
\par // World fog
\par GENESISAPI geFog\tab \tab *geWorld_AddFog(geWorld *World);
\par GENESISAPI geBoolean\tab geWorld_RemoveFog(geWorld *World, geFog *Fog);
\par 
\par GENESISAPI geBoolean geFog_SetAttributes(\tab geFog\tab \tab \tab *Fog, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *Pos, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_RGBA\tab \tab \tab *Color,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab LightBrightness, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab VolumeBrightness, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab VolumeRadius);
\par 
\par // World Classes/Entities
\par GENESISAPI geEntity_EntitySet *geWorld_GetEntitySet(geWorld *World, const char *ClassName);
\par GENESISAPI geEntity\tab \tab *geEntity_EntitySetGetNextEntity(geEntity_EntitySet *EntitySet, geEntity *Entity);
\par GENESISAPI void\tab \tab \tab *geEntity_GetUserData(geEntity *Entity);
\par GENESISAPI void\tab \tab \tab geEntity_GetName(const geEntity *Entity, char *Buff, int MaxLen);
\par 
\par // World collision
\par GENESISAPI geBoolean\tab geWorld_ModelCollision(\tab geWorld\tab \tab \tab *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model\tab *Model, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d\tab *DXForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_Collision\tab *Collision);
\par GENESISAPI geBoolean geWorld_TestModelMove(\tab geWorld\tab \tab \tab *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model\tab *Model, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d\tab *DXForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *Mins, const geVec3d *Maxs,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *In, geVec3d *Out);
\par 
\par GENESISAPI geBoolean geWorld_Collision(\tab geWorld *World,\tab \tab \tab \tab // World to collide with
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Mins,\tab \tab // Mins of object (in object-space).  This CAN be NULL
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Maxs,\tab \tab // Maxs of object (in object-space).  This CAN be NULL
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Front,\tab \tab // Front of line (in world-space)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Back,\tab \tab // Back of line (in world-space)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 Contents,\tab \tab \tab // Contents to collide with (use GE_CONTENTS_SOLID_CLIP for default)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 CollideFlags,\tab \tab // To mask out certain object types (GE_COLLIDE_ALL, etc...)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 UserFlags,\tab \tab \tab // To mask out actors (refer to geActor_SetUserFlags)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CollisionCB *CollisionCB, // A callback to allow user to reject collisions with certain objects)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab void *Context,\tab \tab \tab \tab // User data passed through above callback
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_Collision *Col);\tab \tab \tab // Structure filled with info about what was collided with
\par \tab // NOTE - Mins/Maxs CAN be NULL.  If you are just testing a point, then use NULL (it's faster!!!).
\par 
\par GENESISAPI geBoolean geWorld_GetContents(geWorld *World, const geVec3d *Pos, const geVec3d *Mins, const geVec3d *Maxs, uint32 Flags, uint32 UserFlags, GE_CollisionCB *CollisionCB, void *Context, GE_Contents *Contents);
\par 
\par // World Polys
\par GENESISAPI\tab gePoly *geWorld_AddPolyOnce(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *Verts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab gePoly_Type Type, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 RenderFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float Scale);
\par GENESISAPI\tab gePoly *geWorld_AddPoly(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *Verts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab gePoly_Type Type,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 RenderFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab float Scale);
\par 
\par GENESISAPI\tab void geWorld_RemovePoly(geWorld *World, gePoly *Poly);
\par GENESISAPI\tab geBoolean gePoly_GetLVertex(gePoly *Poly, int32 Index, GE_LVertex *LVert);
\par GENESISAPI\tab geBoolean gePoly_SetLVertex(gePoly *Poly, int32 Index, const GE_LVertex *LVert);
\par 
\par // World visibility
\par GENESISAPI geBoolean\tab geWorld_GetLeaf(const geWorld *World, const geVec3d *Pos, int32 *Leaf);
\par GENESISAPI geBoolean\tab geWorld_MightSeeLeaf(const geWorld *World, int32 Leaf);
\par 
\par GENESISAPI geBoolean\tab geWorld_LeafMightSeeLeaf(const geWorld *World, int32 Leaf1, int32 Leaf2, uint32 VisFlags);
\par \tab // Checks to see if Leaf1 can see Leaf2
\par \tab // Currently VisFlags is not used yet.  It could be used for checking against areas, etc...
\par \tab // Eventually you could also pass in a VisObject, that is manipulated with a camera...
\par 
\par GENESISAPI geBoolean GENESISCC geWorld_IsActorPotentiallyVisible(const geWorld *World, const geActor *Actor, const geCamera *Camera);
\par 
\par 
\par //================================================================================
\par //\tab Camera Management functions
\par //================================================================================
\par 
\par GENESISAPI geCamera\tab \tab \tab *GENESISCC geCamera_Create(geFloat Fov, const geRect *Rect);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_Destroy(geCamera **pCamera);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_SetZScale(geCamera *Camera, geFloat ZScale);
\par GENESISAPI geFloat\tab \tab \tab GENESISCC geCamera_GetZScale(const geCamera *Camera);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_SetAttributes(geCamera *Camera,geFloat Fov, const geRect *Rect);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_GetClippingRect(const geCamera *Camera, geRect *Rect);
\par 
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCamera_ScreenPointToWorld(const geCamera\tab *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32\tab \tab \tab  ScreenX,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32\tab \tab \tab  ScreenY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d\tab \tab \tab *Vector\tab );
\par GENESISAPI void\tab GENESISCC geCamera_Project(const geCamera\tab *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *PointInCameraSpace, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d\tab \tab \tab *ProjectedPoint);
\par GENESISAPI void GENESISCC geCamera_Transform(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePoint, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   geVec3d *CameraSpacePoint);
\par 
\par GENESISAPI void GENESISCC geCamera_TransformArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab       geVec3d *CameraSpacePointPtr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int count);
\par 
\par GENESISAPI void GENESISCC geCamera_TransformAndProject(const geCamera *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab geVec3d *Point, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *ProjectedPoint);
\par 
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab       geVec3d *ProjectedSpacePointPtr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int count);
\par \tab 
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectL(const geCamera *Camera,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const GE_LVertex *Point, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_TLVertex *ProjectedPoint);
\par \tab \tab 
\par GENESISAPI void GENESISCC geCamera_TransformAndProjectLArray(const geCamera *Camera, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const GE_LVertex *WorldSpacePointPtr, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab       GE_TLVertex *ProjectedSpacePointPtr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int count);
\par 
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC geCamera_SetWorldSpaceXForm(geCamera *Camera, const geXForm3d *XForm);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCamera_SetWorldSpaceVisXForm(geCamera *Camera, const geXForm3d *XForm);
\par GENESISAPI const geXForm3d\tab *GENESISCC geCamera_GetWorldSpaceXForm( const geCamera *Camera);
\par GENESISAPI const geXForm3d * GENESISCC geCamera_GetWorldSpaceVisXForm( const geCamera *Camera);
\par GENESISAPI geBoolean GENESISCC geCamera_ConvertWorldSpaceToCameraSpace(const geXForm3d *WXForm, geXForm3d *CXForm);
\par 
\par 
\par //================================================================================
\par // NetPlay Management functions
\par //================================================================================
\par 
\par typedef uint32\tab \tab \tab \tab geCSNetMgr_NetID;
\par #define\tab MAX_CLIENT_NAME\tab \tab 256
\par 
\par // Types for messages received from GE_ReceiveSystemMessage
\par typedef enum 
\par \{
\par \tab NET_MSG_NONE,\tab \tab \tab \tab \tab // No msg
\par \tab NET_MSG_USER,\tab \tab \tab \tab \tab // User message
\par \tab NET_MSG_CREATE_CLIENT,\tab \tab \tab // A new client has joined in
\par \tab NET_MSG_DESTROY_CLIENT,\tab \tab \tab // An existing client has left
\par \tab NET_MSG_HOST,\tab \tab \tab \tab \tab // We are the server now
\par \tab NET_MSG_SESSIONLOST,\tab \tab \tab // Connection was lost
\par \tab NET_MSG_SERVER_ID,\tab \tab \tab \tab // Internal, for hand shaking process
\par \} geCSNetMgr_NetMsgType;
\par 
\par 
\par typedef struct
\par \{
\par \tab char\tab \tab \tab \tab Name[MAX_CLIENT_NAME];
\par \tab geCSNetMgr_NetID\tab Id;
\par \} geCSNetMgr_NetClient;
\par 
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be included before genesis.h for this api to be exposed.
\par \tab typedef struct geCSNetMgr_NetSession
\par \tab \{
\par \tab \tab char\tab \tab SessionName[200];\tab \tab \tab \tab \tab // Description of Service provider
\par \tab \tab GUID\tab \tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab // Service Provider GUID
\par \tab \} geCSNetMgr_NetSession;
\par GENESISAPI \tab geBoolean\tab \tab GENESISCC geCSNetMgr_FindSession(geCSNetMgr *M, const char *IPAdress, geCSNetMgr_NetSession **SessionList, int32 *SessionNum );
\par GENESISAPI \tab geBoolean\tab \tab GENESISCC geCSNetMgr_JoinSession(geCSNetMgr *M, const char *Name, const geCSNetMgr_NetSession* Session);
\par #endif
\par 
\par 
\par GENESISAPI geCSNetMgr\tab *\tab GENESISCC geCSNetMgr_Create(void);
\par GENESISAPI void\tab \tab \tab \tab GENESISCC geCSNetMgr_Destroy(geCSNetMgr **ppM);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveFromServer(geCSNetMgr *M, geCSNetMgr_NetMsgType *Type, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveFromClient(geCSNetMgr *M, geCSNetMgr_NetMsgType *Type, geCSNetMgr_NetID *IdClient, int32 *Size, uint8 **Data);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveSystemMessage(geCSNetMgr *M, geCSNetMgr_NetID IdFor, geCSNetMgr_NetMsgType *Type, geCSNetMgr_NetClient *Client);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_ReceiveAllMessages(geCSNetMgr *M, geCSNetMgr_NetID *IdFrom, geCSNetMgr_NetID *IdTo, geCSNetMgr_NetMsgType *Type, int32 *Size, uint8 **Data);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetServerID(geCSNetMgr *M);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetOurID(geCSNetMgr *M);
\par GENESISAPI geCSNetMgr_NetID\tab GENESISCC geCSNetMgr_GetAllPlayerID(geCSNetMgr *M);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_WeAreTheServer(geCSNetMgr *M);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_StartSession(geCSNetMgr *M, const char *SessionName, const char *PlayerName );
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_StopSession(geCSNetMgr *M);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_SendToServer(geCSNetMgr *M, geBoolean Guaranteed, uint8 *Data, int32 DataSize);
\par GENESISAPI geBoolean\tab \tab GENESISCC geCSNetMgr_SendToClient(geCSNetMgr *M, geCSNetMgr_NetID To, geBoolean Guaranteed, uint8 *Data, int32 DataSize);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069942}GETypes.h{\*\bkmkend _Toc454069942}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GeTypes.h                                                                           */
\par /*                                                                                      */
\par /*  Description: Genesis Types (not primitive enough for basetype)                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_TYPES_H
\par #define GE_TYPES_H
\par 
\par #include "BaseType.h"
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //
\par //\tab Collision defines (for geWorld_Collision)
\par //
\par #define GE_COLLIDE_MESHES\tab \tab \tab (1<<0)
\par #define GE_COLLIDE_MODELS\tab \tab \tab (1<<1)
\par #define GE_COLLIDE_ACTORS\tab \tab \tab (1<<2)
\par #define GE_COLLIDE_NO_SUB_MODELS\tab (1<<3)
\par #define GE_COLLIDE_ALL\tab \tab \tab \tab (GE_COLLIDE_MESHES | GE_COLLIDE_MODELS | GE_COLLIDE_ACTORS)
\par 
\par //
\par // Actor flags (geWorld_AddActor)
\par //
\par #define GE_ACTOR_RENDER_NORMAL\tab \tab \tab (1<<0)\tab \tab // Render in normal views
\par #define GE_ACTOR_RENDER_MIRRORS\tab \tab \tab (1<<1)\tab \tab // Render in mirror views
\par #define GE_ACTOR_RENDER_ALWAYS\tab \tab \tab (1<<2)\tab \tab // Render always, skipping all visibility tests
\par #define GE_ACTOR_COLLIDE\tab \tab \tab \tab (1<<3)\tab \tab // Collide when calling geWorld_Collision
\par 
\par //
\par //\tab Model flags (geWorld_ModelSetFlags)
\par //
\par #define GE_MODEL_RENDER_NORMAL\tab \tab \tab (1<<0)\tab \tab // Render in normal views
\par #define GE_MODEL_RENDER_MIRRORS\tab \tab \tab (1<<1)\tab \tab // Render in mirror views
\par #define GE_MODEL_RENDER_ALWAYS\tab \tab \tab (1<<2)\tab \tab // Render always, skipping all visibility tests
\par #define GE_MODEL_COLLIDE\tab \tab \tab \tab (1<<3)\tab \tab // Collide when calling geWorld_Collision
\par 
\par typedef struct
\par \{
\par \tab float r, g, b, a;
\par \} GE_RGBA;
\par 
\par typedef struct
\par \{
\par \tab int32\tab Left;
\par \tab int32\tab Right;
\par \tab int32\tab Top;
\par \tab int32\tab Bottom;
\par \} GE_Rect;
\par 
\par typedef struct
\par \{
\par \tab geFloat MinX,MaxX;
\par \tab geFloat MinY,MaxY;
\par \} geFloatRect;
\par 
\par // Lit vertex
\par typedef struct
\par \{
\par \tab // FIXME:  Convert 3d X,Y,Z to geVec3d
\par \tab float X, Y, Z;\tab \tab \tab \tab \tab \tab \tab \tab \tab // 3d vertex
\par \tab float u, v;\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Uv's
\par \tab // FIXME:  Convert r,g,b,a to GE_RGBA
\par \tab float r, g, b, a;\tab \tab \tab \tab \tab \tab \tab \tab // color
\par \} GE_LVertex;
\par 
\par // Transformed Lit vertex
\par typedef struct
\par \{
\par \tab float x, y, z;\tab \tab \tab \tab \tab \tab \tab \tab \tab // screen points
\par \tab float u, v;\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Uv's
\par \tab float r, g, b, a;\tab \tab \tab \tab \tab \tab \tab \tab // color
\par \} GE_TLVertex;
\par 
\par typedef GE_Rect geRect;
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif GETYPES_H
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069943}List.h{\*\bkmkend _Toc454069943}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef LIST_H
\par #define LIST_H
\par 
\par /****************************************************************************************/
\par /*  List                                                                                */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description: List/Link/Node Primitives                                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define LISTCALL\tab __fastcall
\par 
\par /*******************************************/
\par /** you must wrap any calls to this module with these: **/
\par 
\par geBoolean List_Start(void);
\par geBoolean List_Stop(void);
\par 
\par /*******************************************/
\par /** basic list types ****/
\par 
\par typedef struct List List;
\par 
\par extern List *\tab LISTCALL List_Create(void);
\par extern void\tab \tab LISTCALL List_Destroy(List * pList);
\par extern List *\tab LISTCALL List_AddTail(List *pList,void * Data);
\par extern List *\tab LISTCALL List_AddHead(List *pList,void * Data);
\par \tab // returns a pointer to the node created
\par extern void *\tab LISTCALL List_CutHead(List *pList);
\par extern void *\tab LISTCALL List_CutTail(List *pList);
\par extern void *\tab LISTCALL List_PeekHead(List *pList);
\par extern void *\tab LISTCALL List_PeekTail(List *pList);
\par 
\par extern List *\tab LISTCALL List_Next(List *pNode);
\par extern List *\tab LISTCALL List_Prev(List *pNode);
\par 
\par extern void\tab \tab LISTCALL List_CutNode(List *pNode);
\par extern void\tab \tab LISTCALL List_DeleteNode(List *pNode);
\par extern void\tab \tab LISTCALL List_FreeNode(List *pNode);
\par extern void *\tab LISTCALL List_NodeData(List *pNode);
\par 
\par extern List *\tab List_Find(List *pList,void *Data);
\par 
\par /****
\par 
\par \tab Iterate on a list via :
\par 
\par \tab List *pNode,*pList;
\par \tab for( pNode = List_Next(pList); pNode != pList; pNode = List_Next(pNode) )
\par \tab \{
\par \tab \tab //do stuff to pNode
\par \tab \}
\par 
\par ****/
\par 
\par typedef struct Stack Stack;
\par 
\par extern Stack * \tab LISTCALL Stack_Create(void);
\par extern void \tab LISTCALL Stack_Destroy(Stack * pStack);
\par extern void \tab LISTCALL Stack_Push_Func(Stack *pStack,void * Data);
\par extern void * \tab LISTCALL Stack_Pop_Func(Stack *pStack);
\par extern int \tab \tab LISTCALL Stack_Extend(Stack *pStack);\tab // returns new length
\par 
\par #ifdef _DEBUG
\par 
\par #define Stack_Push\tab Stack_Push_Func
\par #define Stack_Pop\tab Stack_Pop_Func
\par 
\par #else
\par 
\par // this struct is exposed only in release mode!
\par // don't look into it!
\par 
\par struct Stack
\par \{
\par \tab void ** Buffer, **End;
\par \tab void ** Head;
\par \tab int members;
\par \};
\par 
\par //#define Stack_Push(pStack,Data)\tab do \{ *((pStack)->Head)++ = (void *)(Data); if ( (pStack)->Head == (pStack)->End ) Stack_Extend(pStack); \} while(0)
\par #define Stack_Push(pStack,Data)\tab *((pStack)->Head)++ = (void *)(Data), ( (pStack)->Head != (pStack)->End ) || Stack_Extend(pStack)
\par #define Stack_Pop(pStack)\tab \tab ( ((pStack)->Head == (pStack)->Buffer) ? NULL : *( -- ((pStack)->Head) ) )
\par 
\par #endif
\par 
\par typedef struct Link Link;
\par 
\par extern Link * \tab LISTCALL Link_Create(void);
\par extern void\tab \tab LISTCALL Link_Destroy(Link * pLink);
\par extern void\tab \tab LISTCALL Link_Push(Link *pLink,void * Data);
\par extern void *\tab LISTCALL Link_Pop(Link *pLink);
\par extern void *\tab LISTCALL Link_Peek(Link *pLink);
\par 
\par typedef struct LinkNode LinkNode;
\par 
\par /************************************/
\par /*** a radix of each type ****/
\par 
\par typedef struct RadixList RadixList;
\par 
\par extern RadixList * RadixList_Create(int RadixListMax);
\par extern void RadixList_Destroy(RadixList * pRadixList);
\par extern List * RadixList_Add(RadixList *pRadixList,void * Data,int Key);
\par \tab // returns a pointer to the node created
\par extern void * RadixList_CutMax(RadixList *pRadixList,int * pMaxKey);
\par extern void * RadixList_CutMin(RadixList *pRadixList,int * pMinKey);
\par extern void * RadixList_CutKey(RadixList *pRadixList,int Key);
\par 
\par typedef struct RadixLN RadixLN;
\par 
\par extern RadixLN * RadixLN_Create(int RadixLNMax);
\par extern void RadixLN_Destroy(RadixLN * pRadixLN);
\par extern void RadixLN_AddTail(RadixLN *pRadixLN,LinkNode * LN,int Key);
\par extern void RadixLN_AddHead(RadixLN *pRadixLN,LinkNode * LN,int Key);
\par extern LinkNode * RadixLN_CutMax(RadixLN *pRadixLN,int * pMaxKey);
\par extern LinkNode * RadixLN_CutMin(RadixLN *pRadixLN,int * pMinKey);
\par extern LinkNode * RadixLN_CutKey(RadixLN *pRadixLN,int Key);
\par extern LinkNode * RadixLN_PeekMax(RadixLN *pRadixLN,int * pMaxKey);
\par extern LinkNode * RadixLN_PeekMin(RadixLN *pRadixLN,int * pMinKey);
\par 
\par typedef struct RadixLink RadixLink;
\par 
\par extern\tab \tab \tab RadixLink * RadixLink_Create(int RadixLinkMax);
\par extern void\tab \tab RadixLink_Destroy(RadixLink * pRadixLink);
\par extern void\tab \tab RadixLink_Add(RadixLink *pRadixLink,void * Data,int Key);
\par extern void *\tab RadixLink_CutMax(RadixLink *pRadixLink,int * pMaxKey);
\par extern void *\tab RadixLink_CutMin(RadixLink *pRadixLink,int * pMinKey);
\par extern void *\tab RadixLink_CutKey(RadixLink *pRadixLink,int Key);
\par extern void\tab \tab RadixLink_Grow(RadixLink *pRadixLink,int NewMax);
\par 
\par /******************************/
\par 
\par typedef struct Hash Hash;
\par typedef struct HashNode HashNode;
\par 
\par extern Hash *\tab Hash_Create(void);
\par extern void\tab \tab Hash_Destroy(Hash *pHash);
\par HashNode *\tab LISTCALL Hash_Add(Hash *pHash,uint32 Key,uint32 Data);
\par void\tab \tab LISTCALL Hash_DeleteNode(Hash *pHash,HashNode *pNode);
\par HashNode *\tab LISTCALL Hash_Get(Hash *pHash,uint32 Key,uint32 *pData);
\par \tab \tab \tab \tab \tab \tab \tab // pdata is optional
\par HashNode *\tab LISTCALL Hash_WalkNext(Hash *pHash,HashNode *pCur);
\par \tab \tab \tab \tab \tab \tab \tab //use pCur == NULL to start walking
\par 
\par uint32\tab \tab LISTCALL Hash_NumMembers(Hash *pHash);
\par 
\par void\tab HashNode_SetData(HashNode *pNode,uint32 Data);
\par void\tab HashNode_GetData(HashNode *pNode,uint32 *pKey,uint32 *pData);
\par uint32\tab HashNode_Key(HashNode *pNode);
\par uint32\tab HashNode_Data(HashNode *pNode);
\par 
\par uint32\tab Hash_StringToKey(const char * String);
\par 
\par /******************************/
\par 
\par struct LinkNode 
\par \{
\par \tab LinkNode *Next,*Prev;
\par \}; 
\par 
\par #define zLN_InitList(List)\tab \tab \tab do \{ (List)->Next = List; (List)->Prev = List; \} while(0)
\par #define zLN_Cut(Node)\tab \tab \tab \tab do \{ (Node)->Prev->Next = (Node)->Next; (Node)->Next->Prev = (Node)->Prev; zLN_InitList(Node); \} while(0)
\par #define zLN_Fix(Node)\tab \tab \tab \tab do \{ (Node)->Prev->Next = Node; (Node)->Next->Prev = Node; \} while(0)
\par #define zLN_AddAfter(Node,List)\tab \tab do \{ (Node)->Prev = List; (Node)->Next = (List)->Next; LN_Fix(Node); \} while(0)
\par #define zLN_AddBefore(Node,List)\tab do \{ (Node)->Next = List; (Node)->Prev = (List)->Prev; LN_Fix(Node); \} while(0)
\par #define zLN_Walk_Editting(Node,List,Holder)\tab for( Node = (List)->Next; (Node) != (List) && ((Holder) = (Node)->Next) != NULL ; Node = Holder )
\par #define zLN_Walk(Node,List)\tab \tab \tab for( Node = (List)->Next; (Node) != (List) ; Node = (Node)->Next )
\par #define zLN_EmptyList(List)\tab \tab \tab ( (List)->Next == (List) )
\par 
\par #define LN_InitList(List)\tab \tab \tab zLN_InitList((LinkNode *)List)
\par #define LN_Cut(Node)\tab \tab \tab \tab zLN_Cut((LinkNode *)Node)
\par #define LN_Fix(Node)\tab \tab \tab \tab zLN_Fix((LinkNode *)Node)
\par #define LN_AddAfter(Node,List)\tab \tab zLN_AddAfter((LinkNode *)Node,(LinkNode *)List)
\par #define LN_AddBefore(Node,List)\tab \tab zLN_AddBefore((LinkNode *)Node,(LinkNode *)List)
\par #define LN_Walk(Node,List)\tab \tab \tab zLN_Walk((LinkNode *)Node,(LinkNode *)List)
\par #define LN_Walk_Editting(Node,List,Holder)\tab \tab \tab zLN_Walk_Editting((LinkNode *)Node,(LinkNode *)List,((LinkNode *)Holder))
\par #define LN_EmptyList(List)\tab \tab \tab zLN_EmptyList((LinkNode *)List)
\par #define LN_Prev(Node)\tab \tab \tab \tab (void *)(((LinkNode *)Node)->Prev)
\par #define LN_Next(Node)\tab \tab \tab \tab (void *)(((LinkNode *)Node)->Next)
\par 
\par #define LN_Null(node)\tab LN_InitList(node)
\par 
\par LinkNode *\tab LISTCALL LN_CutHead(LinkNode *pList);
\par LinkNode *\tab LISTCALL LN_CutTail(LinkNode *pList);
\par 
\par int LN_ListLen(LinkNode *pList);
\par 
\par #define LN_AddHead(list,node)\tab LN_AddAfter(node,list)
\par #define LN_AddTail(list,node)\tab LN_AddBefore(node,list)
\par #define LN_IsEmpty\tab LN_EmptyList
\par 
\par 
\par \tab /* use LN_Walk as :
\par \tab *
\par 
\par \tab \tab void doStuffOnAllNodes(LinkNode *pList)
\par \tab \tab \{
\par \tab \tab \tab LinkNode *pNode;
\par \tab \tab \tab LN_Walk(pNode,pList) \{
\par \tab \tab \tab \tab doStuff(pNode);
\par \tab \tab \tab \}
\par \tab \tab \}
\par 
\par \tab *
\par \tab */
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif  // LIST_H
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069944}NetPlay.h{\*\bkmkend _Toc454069944}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  NetPlay.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: DirectPlay wrapper                                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_NETPLAY_H
\par #define GE_NETPLAY_H
\par 
\par #include <windows.h>
\par #include <dplay.h>
\par 
\par #include "BaseType.h"
\par 
\par #ifdef\tab __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // ************************************************************************************
\par //\tab Defines
\par // ************************************************************************************
\par #define NETPLAY_OPEN_CREATE\tab \tab 1
\par #define NETPLAY_OPEN_JOIN\tab \tab 2
\par 
\par 
\par typedef struct
\par \{
\par \tab char\tab Desc[200];\tab \tab \tab \tab \tab \tab \tab \tab // Description of Service provider
\par \tab GUID\tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Global Service Provider GUID
\par \} SP_DESC;
\par 
\par // must match stuct AFX_SESSION in cengine.h
\par typedef struct
\par \{
\par \tab char\tab SessionName[200];\tab \tab \tab \tab \tab \tab // Description of Service provider
\par \tab GUID\tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Global Service Provider GUID
\par \} SESSION_DESC;
\par 
\par extern\tab SP_DESC\tab \tab \tab \tab \tab GlobalSP;\tab \tab \tab // Global info about the sp
\par extern  SESSION_DESC*\tab \tab \tab GlobalSession;\tab \tab // Global sessions availible
\par extern\tab LPGUID\tab \tab \tab \tab \tab glpGuid;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par void DoDPError(HRESULT Hr);
\par BOOL InitNetPlay(LPGUID lpGuid);
\par BOOL NetPlayEnumSession(LPSTR IPAdress, SESSION_DESC** SessionList, DWORD* SessionNum);
\par BOOL NetPlayJoinSession(SESSION_DESC* SessionList);
\par BOOL NetPlayCreateSession(LPSTR SessionName, DWORD MaxPlayers);
\par BOOL NetPlayCreatePlayer(LPDPID lppidID, LPTSTR lptszPlayerName, HANDLE hEvent, LPVOID lpData, DWORD dwDataSize, geBoolean ServerPlayer);
\par BOOL NetPlayDestroyPlayer(DPID pid);
\par HRESULT NetPlaySend(DPID idFrom, DPID idTo, DWORD dwFlags, LPVOID lpData, DWORD dwDataSize);
\par HRESULT NetPlayReceive(LPDPID lpidFrom, LPDPID lpidTo, DWORD dwFlags, LPVOID lpData, LPDWORD lpdwDataSize);
\par BOOL DeInitNetPlay(void);
\par 
\par // HACK!!!! Function is in Engine.cpp (So NetPlay.C can call it...)
\par BOOL\tab \tab \tab AFX_CPrintfC(char *String);
\par 
\par #ifdef\tab __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069945}PtrTypes.h{\*\bkmkend _Toc454069945}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  NetPlay.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: DirectPlay wrapper                                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_NETPLAY_H
\par #define GE_NETPLAY_H
\par 
\par #include <windows.h>
\par #include <dplay.h>
\par 
\par #include "BaseType.h"
\par 
\par #ifdef\tab __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // ************************************************************************************
\par //\tab Defines
\par // ************************************************************************************
\par #define NETPLAY_OPEN_CREATE\tab \tab 1
\par #define NETPLAY_OPEN_JOIN\tab \tab 2
\par 
\par 
\par typedef struct
\par \{
\par \tab char\tab Desc[200];\tab \tab \tab \tab \tab \tab \tab \tab // Description of Service provider
\par \tab GUID\tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Global Service Provider GUID
\par \} SP_DESC;
\par 
\par // must match stuct AFX_SESSION in cengine.h
\par typedef struct
\par \{
\par \tab char\tab SessionName[200];\tab \tab \tab \tab \tab \tab // Description of Service provider
\par \tab GUID\tab Guid;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Global Service Provider GUID
\par \} SESSION_DESC;
\par 
\par extern\tab SP_DESC\tab \tab \tab \tab \tab GlobalSP;\tab \tab \tab // Global info about the sp
\par extern  SESSION_DESC*\tab \tab \tab GlobalSession;\tab \tab // Global sessions availible
\par extern\tab LPGUID\tab \tab \tab \tab \tab glpGuid;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par void DoDPError(HRESULT Hr);
\par BOOL InitNetPlay(LPGUID lpGuid);
\par BOOL NetPlayEnumSession(LPSTR IPAdress, SESSION_DESC** SessionList, DWORD* SessionNum);
\par BOOL NetPlayJoinSession(SESSION_DESC* SessionList);
\par BOOL NetPlayCreateSession(LPSTR SessionName, DWORD MaxPlayers);
\par BOOL NetPlayCreatePlayer(LPDPID lppidID, LPTSTR lptszPlayerName, HANDLE hEvent, LPVOID lpData, DWORD dwDataSize, geBoolean ServerPlayer);
\par BOOL NetPlayDestroyPlayer(DPID pid);
\par HRESULT NetPlaySend(DPID idFrom, DPID idTo, DWORD dwFlags, LPVOID lpData, DWORD dwDataSize);
\par HRESULT NetPlayReceive(LPDPID lpidFrom, LPDPID lpidTo, DWORD dwFlags, LPVOID lpData, LPDWORD lpdwDataSize);
\par BOOL DeInitNetPlay(void);
\par 
\par // HACK!!!! Function is in Engine.cpp (So NetPlay.C can call it...)
\par BOOL\tab \tab \tab AFX_CPrintfC(char *String);
\par 
\par #ifdef\tab __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069946}Resource.h{\*\bkmkend _Toc454069946}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {//\{\{NO_DEPENDENCIES\}\}
\par // Microsoft Developer Studio generated include file.
\par // Used by genesis.rc
\par //
\par 
\par // Next default values for new objects
\par // 
\par #ifdef APSTUDIO_INVOKED
\par #ifndef APSTUDIO_READONLY_SYMBOLS
\par #define _APS_NEXT_RESOURCE_VALUE        101
\par #define _APS_NEXT_COMMAND_VALUE         40001
\par #define _APS_NEXT_CONTROL_VALUE         1000
\par #define _APS_NEXT_SYMED_VALUE           101
\par #endif
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069947}Sound.h{\*\bkmkend _Toc454069947}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Sound.h                                                                             */
\par /*                                                                                      */
\par /*  Author: Brian Adelberg                                                              */
\par /*  Description: DirectSound wrapper                                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab GE_SOUND_H
\par #define\tab GE_SOUND_H
\par 
\par #ifdef\tab __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par typedef struct geSound_System\tab geSound_System;
\par typedef struct geSound_Def\tab \tab geSound_Def;
\par typedef struct geSound\tab \tab \tab geSound;
\par 
\par 
\par #ifdef _INC_WINDOWS
\par \tab // Windows.h must be previously included for this api to be exposed.
\par GENESISAPI\tab geSound_System *geSound_CreateSoundSystem(HWND hWnd);
\par #endif
\par 
\par GENESISAPI\tab void\tab \tab \tab geSound_DestroySoundSystem(geSound_System *Sound);
\par 
\par 
\par GENESISAPI\tab geSound_Def\tab    *geSound_LoadSoundDef(geSound_System *SoundS, geVFile *File);
\par GENESISAPI\tab void\tab \tab \tab geSound_FreeSoundDef(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound_Def *SoundDef);
\par 
\par GENESISAPI\tab geSound\tab \tab    *geSound_PlaySoundDef(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound_Def *SoundDef, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Volume, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Pan, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Frequency, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean Loop);
\par GENESISAPI\tab geBoolean\tab \tab geSound_StopSound(geSound_System *SoundS, geSound *Sound);
\par GENESISAPI\tab geBoolean\tab \tab geSound_ModifySound(geSound_System *SoundS, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geSound *Sound, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Volume, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Pan, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Frequency);
\par GENESISAPI\tab geBoolean\tab \tab geSound_SoundIsPlaying(geSound_System *SoundS, geSound *Sound);
\par GENESISAPI\tab geBoolean\tab \tab geSound_SetMasterVolume( geSound_System *SoundS, geFloat Volume );
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par #ifdef\tab __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069948}Sound3D.h{\*\bkmkend _Toc454069948}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Sound3D.h                                                                           */
\par /*                                                                                      */
\par /*  Author: Brian Adelberg                                                              */
\par /*  Description: 3D Sound code                                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_SOUND3D_H
\par #define GE_SOUND3D_H
\par 
\par #include "BaseType.h"
\par #include "Sound.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par GENESISAPI\tab void geSound3D_GetConfig(
\par \tab \tab \tab const geWorld *World, 
\par \tab \tab \tab const geXForm3d *CameraTransform, 
\par \tab \tab \tab const geVec3d *SoundPos, 
\par \tab \tab \tab geFloat Min, 
\par \tab \tab \tab geFloat Ds,
\par \tab \tab \tab geFloat *Volume,
\par \tab \tab \tab geFloat *Pan,
\par \tab \tab \tab geFloat *Frequency);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069949}Tclip.h{\*\bkmkend _Toc454069949}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  TClip                                                                               */
\par /*                                                                                      */
\par /*  Author: Mike Sandige & Charles Bloom                                                */
\par /*  Description: Triangle Clipping to the screen rectangle                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #ifndef GE_TCLIP_H
\par #define GE_TCLIP_H
\par 
\par #include "basetype.h"
\par #include "getypes.h"
\par #include "bitmap.h"
\par #include "engine.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /*******
\par 
\par TClip is a state machine like OpenGL
\par 
\par you should call it like :
\par 
\par \tab _Push()
\par \tab _SetupEdges()
\par \tab _SetTexture()
\par \tab _Triangle()
\par \tab _Triangle()
\par \tab _SetTexture()
\par \tab _Triangle()
\par \tab _Triangle()
\par \tab ...
\par \tab _Pop()
\par 
\par ********/
\par 
\par void\tab \tab GENESISCC geTClip_SetupEdges(geEngine *Engine,
\par \tab \tab \tab \tab \tab \tab geFloat\tab LeftEdge, 
\par \tab \tab \tab \tab \tab \tab geFloat RightEdge,
\par \tab \tab \tab \tab \tab \tab geFloat TopEdge ,
\par \tab \tab \tab \tab \tab \tab geFloat BottomEdge,
\par \tab \tab \tab \tab \tab \tab geFloat BackEdge);
\par 
\par geBoolean\tab GENESISCC geTClip_Push(void);
\par geBoolean\tab GENESISCC geTClip_Pop(void);
\par 
\par geBoolean\tab GENESISCC geTClip_SetTexture(const geBitmap * Bitmap);
\par void\tab \tab GENESISCC geTClip_Triangle(const GE_LVertex TriVertex[3]);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069950}Timer.h{\*\bkmkend _Toc454069950}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef TIMER_H
\par #define TIMER_H
\par 
\par /****************************************************************************************/
\par /*  Timer                                                                               */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description: A nice little profiling utility                                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include <stdio.h>
\par #include "tsc.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //\{
\par 
\par extern FILE * timerFP;
\par extern int timerCount;
\par extern double time_Master;
\par 
\par extern void Timer_Start(void);
\par extern void Timer_Stop(void);
\par 
\par #ifdef DO_TIMER\tab //\}\{
\par 
\par #pragma message("timer ON")
\par 
\par #define TIMER_VARS(func)\tab static double time_##func =0.0;\tab static tsc_type tsc_##func##1,tsc_##func##2;
\par 
\par #define TIMER_P(func)\tab readTSC(tsc_##func##1)
\par #define TIMER_Q(func)\tab do \{ readTSC(tsc_##func##2); time_##func += diffTSC(tsc_##func##1,tsc_##func##2); \} while(0)
\par 
\par #define TIMER_REPORT(func)\tab fprintf(timerFP,"%-20s : %1.6f : %2.1f %%\\n", (#func) , (time_##func)/(double)timerCount , (time_##func)*100.0/(time_Master) );
\par 
\par #define TIMER_COUNT()\tab timerCount++
\par 
\par #define TIMER_START()\tab Timer_Start();
\par #define TIMER_STOP()\tab Timer_Stop();
\par 
\par #else\tab //\}\{
\par 
\par #pragma message("timer OFF")
\par 
\par #define TIMER_VARS(func)
\par #define TIMER_P(func)
\par #define TIMER_Q(func)
\par #define TIMER_REPORT(func)
\par 
\par #define TIMER_COUNT()
\par 
\par #define TIMER_START()
\par #define TIMER_STOP()
\par 
\par #endif //\}\{
\par 
\par /**********
\par 
\par //example usage:
\par 
\par TIMER_VARS(test1);
\par TIMER_VARS(test2);
\par 
\par int main(int argc,char *argv[])
\par \{
\par int i,j;
\par 
\par \tab timerFP = stdout;
\par 
\par \tab TIMER_START();
\par 
\par \tab \tab TIMER_P(test1);
\par 
\par \tab \tab for(i=0;i<1000;i++)
\par \tab \tab \{
\par \tab \tab \tab TIMER_P(test2);
\par \tab \tab \tab j = 99/(i+1);
\par \tab \tab \tab TIMER_Q(test2);
\par \tab \tab \}
\par \tab \tab \tab 
\par \tab \tab TIMER_Q(test1);
\par 
\par \tab TIMER_COUNT();
\par \tab TIMER_STOP();
\par 
\par \tab TIMER_REPORT(test2);
\par \tab TIMER_REPORT(test1);
\par 
\par return 0;
\par \}
\par 
\par **********/
\par 
\par //\}
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif // TIMER_H
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069951}TSC.h{\*\bkmkend _Toc454069951}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  TSC                                                                                 */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description: tsc accessors                                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #ifndef TSC_H
\par #define TSC_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /**********
\par *
\par 
\par \tab routines to access the TSC
\par \tab will do nothing unless you compile tsc.c with _TSC turned on
\par 
\par \tab to convert clocks to seconds we use this MHZ define:
\par 
\par *
\par ********/
\par 
\par #define _TSC_CPU_MHZ\tab 300
\par 
\par \tab // show() will Pop() two and print the delta to log()
\par \tab // does nothing unless debug is on
\par 
\par extern void pushTSC(void);
\par 
\par \tab // the pop reads once & pop once & take difference
\par 
\par extern double popTSC(void);
\par extern void showPopTSC(const char *tag);
\par extern void showPopTSCper(const char *tag,int items,const char *itemTag);
\par 
\par \tab // primitives
\par 
\par typedef unsigned long tsc_type [2];
\par 
\par extern void readTSC(unsigned long *tsc);
\par extern double diffTSC(unsigned long *tsc1,unsigned long*tsc2);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\page }{\i {\*\bkmkstart _Toc454069952}OpenSource/Source/Actor Subdirectory{\*\bkmkend _Toc454069952}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This is the subdirectory which contains all the files for model movement and model display.
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069953}Actor.h{\*\bkmkend _Toc454069953}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  ACTOR.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description:  Actor interface\tab \tab                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par /*   Actor
\par \tab 
\par \tab This object is designed to support character animation.
\par \tab There are two basic objects to deal with.  
\par \tab 
\par \tab Actor Definition (geActor_Def)
\par \tab \tab A geActor_Def embodies the geometry (polygon, and bone information), 
\par \tab \tab and a library of motions that can be applied to that geometry.
\par 
\par \tab Actor
\par \tab \tab A geActor is an instance of an actor definition.  The definition is used for 
\par \tab \tab the geometry, but all additional settings, such as the bone pose, lighting information,
\par \tab \tab and cuing information is unique for a geActor.
\par // GENESIS_PRIVATE_API
\par \tab An Actor Definition is created either from an existing Actor Definition file, or from scratch by 
\par \tab first creating a geBody and geMotions and selecting these into an Actor.  If the Actor Definition
\par \tab is constructed from scratch, the objects selected into it (via SetBody and AddMotion) are
\par \tab then 'owned' by the actor and will be destroyed along with the Actor when it is destroyed.
\par     Of course, when the Actor is loaded from a file, the Body and Motion it creates as it is
\par \tab loaded are cleaned up when the Actor is destroyed.
\par 
\par \tab Once an Actor is created, prepare it for rendering and animating by calling 
\par \tab Actor_RenderPrep().  This must be called (and it must succeed) before any render or
\par \tab pose setting functions can be called.
\par // GENESIS_PUBLIC_API
\par 
\par \tab There are two ways to use an Actor.
\par \tab Direct Control
\par \tab \tab One method is to directly control the skeleton configuration.  Use _SetPose() to set its 
\par \tab \tab skeleton using a geMotion animation.  The pose is positioned in world space relative to the 
\par \tab \tab transform given in SetPose().  Whenever a new skeleton pose is required, call _SetPose() 
\par \tab \tab to reposition the skeleton for a new point in time. 
\par 
\par \tab \tab More complex positioning can be achieved by blending more than one animation.  Use
\par \tab \tab _BlendPose() after a _SetPose() to blend the second geMotion into the first.  Additional
\par \tab \tab blends can be applied by additional _BlendPose() calls.  Each blend is performed on the
\par \tab \tab the existing skeleton (the results of any previous blends).
\par \tab Cuing
\par \tab \tab Another method is to 'cue' up motions that are applied with parameterized blending over time.
\par \tab \tab A cued motion takes effect 'now' in time.  The Actor advances in time and repositions itself
\par \tab \tab according to its currently cued motions with a call to _AnimationStep().  AnimationStep() 
\par \tab \tab redefines what the actor thinks 'now' is.  This causes historical cues to be forgotten, and 
\par \tab \tab motions that are no longer valid are cleaned up.  AnimationTestStep() can be used to position 
\par \tab \tab the actor for potential queries with its currently cued motions at some arbitrary future time 
\par \tab \tab - relative to the last AnimationTestStep() call.  AnimationNudge() applies a given transform 
\par \tab \tab 'instantly' to the current actor's cue list.  This is usefull for moving the actor as a 
\par \tab \tab result of a collision with another object.
\par 
\par \tab If a motion contains joint information that does not exactly match the Actor's skeleton 
\par \tab joints, only the joints that match by name are applied.  So a geMotion can be applied to
\par \tab a portion of the Actor, or a geMotion that has more joint information than the skeleton can
\par \tab be applied and the extra joint information is ignored.  
\par \tab  
\par \tab Examples of this:  If the Actor is a biped and has no tail, but the motion is for a 
\par \tab biped with a tail, the geMotion can be applied, but the tail information will be ignored.
\par \tab Also if there is a geMotion for only a left arm, it can be applied and it will only affect
\par \tab the left arm of the Actor, and consequently its left hand and fingers, but no other 
\par \tab bones that are not children of the affected bones will be changed.
\par 
\par \tab  \tab 
\par */
\par #ifndef GE_ACTOR_H
\par #define GE_ACTOR_H
\par 
\par #include "genesis.h"\tab \tab \tab \tab 
\par #include "basetype.h"
\par #include "extbox.h"
\par #include "bitmap.h"
\par 
\par #include "Motion.h"
\par 
\par #ifdef GE_WORLD_H
\par #include "camera.h"
\par #include "Frustum.h"
\par #endif
\par 
\par #include "Body.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par #ifndef GE_ACTOR_ENUMS
\par #define GE_ACTOR_ENUMS
\par typedef enum 
\par \{
\par \tab \tab GE_ACTOR_BLEND_LINEAR,\tab \tab // Treats the blending amount as a linear value
\par \tab \tab GE_ACTOR_BLEND_HERMITE\tab \tab // Applies a parametric smoothing curve to the blending amount
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab //  so that a linear change in BlendAmount parameters will
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab //  result in a smooth (non-linear) change in blending.
\par \} geActor_BlendingType;
\par 
\par #endif
\par 
\par typedef struct geActor geActor;\tab \tab \tab // an instance of an actor
\par typedef struct geActor_Def geActor_Def;\tab \tab // the deinition of an actor's geometry/bone structure
\par 
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par //---------------------------------------------------------------------------------
\par //   Creation/Destruction functions
\par //---------------------------------------------------------------------------------
\par \tab // Create an 'empty' Actor Definition.
\par GENESISAPI geActor_Def *GENESISCC geActor_DefCreate(void);
\par 
\par \tab // Create an Actor Definition from a file image.
\par GENESISAPI geActor_Def *GENESISCC geActor_DefCreateFromFile(geVFile *pFile);
\par 
\par \tab // Create an additional reference (owner) for the Actor_Definition
\par GENESISAPI void GENESISCC geActor_DefCreateRef(geActor_Def *pActorDefinition);
\par 
\par \tab // Destroy a geActor_Def (its geBody and its geMotions)  Actors that rely on this definition become invalid.
\par \tab // can fail if there are actors still referencing this definition.
\par GENESISAPI geBoolean GENESISCC geActor_DefDestroy(geActor_Def **pActorDefinition);
\par 
\par \tab // Create an Actor instance associated with the given Actor Definition 
\par GENESISAPI geActor *GENESISCC geActor_Create(geActor_Def *ActorDefinition);
\par 
\par \tab // Create an additional reference (owner) for the Actor
\par GENESISAPI void GENESISCC geActor_CreateRef(geActor *Actor);
\par 
\par \tab // Give the Actor Definition a Body.  geActor becomes responsible for its destruction.
\par \tab // sets up default materials as referenced by the Body.
\par GENESISAPI geBoolean GENESISCC geActor_SetBody( geActor_Def *ActorDefinition, geBody *geBodyGeometry);
\par 
\par \tab // Adds a geMotion to the Actor Definition's library.  The ActorDefinition becomes responsible for its destruction.
\par \tab // returns the library index to the new geMotion.
\par GENESISAPI geBoolean GENESISCC geActor_AddMotion(geActor_Def *ActorDefinition, geMotion *M, int *Index);
\par 
\par \tab // Destroy an Actor.  
\par GENESISAPI void GENESISCC geActor_Destroy(geActor **pA);
\par 
\par GENESISAPI geBoolean GENESISCC geActor_DefIsValid(const geActor_Def *A);
\par GENESISAPI geBoolean GENESISCC geActor_IsValid(const geActor *A);
\par 
\par // GENESIS_PUBLIC_APIS
\par //---------------------------------------------------------------------------------
\par //   Queries 
\par //---------------------------------------------------------------------------------
\par // GENESIS_PRIVATE_APIS
\par 
\par \tab // In general: Objects retuned from Get functions should not not be destroyed. 
\par \tab // if ownership is desired, call the objects _CreateRef() function to create another owner. 
\par \tab // (An 'owner' has access to the object regardless of the number of other owners, and 
\par \tab // an owner must call the object's _Destroy() function to relinquish ownership )
\par 
\par \tab // Returns the Actor Definition associated with Actor A
\par GENESISAPI geActor_Def *GENESISCC geActor_GetActorDef(const geActor *A);
\par 
\par \tab // Writes an existing geActor to a file image.  Returns GE_TRUE on success, GE_FALSE on failure.
\par GENESISAPI geBoolean GENESISCC geActor_DefWriteToFile(const geActor_Def *A, geVFile *pFile);
\par \tab 
\par \tab // Returns a geBody pointer from the geActor 
\par GENESISAPI geBody *GENESISCC geActor_GetBody(const geActor_Def *ActorDefinition);
\par 
\par \tab // Returns GE_TRUE if the actor definition has a bone named 'Name'
\par GENESISAPI geBoolean GENESISCC geActor_DefHasBoneNamed(const geActor_Def *Ad, const char *Name );
\par 
\par \tab // Selects a blending type.  BlendingType only affects the meaning of the 
\par \tab // BlendAmount parameter for the blend functions.  Can be changed anytime.
\par GENESISAPI void GENESISCC geActor_SetBlendingType( geActor *A, geActor_BlendingType BlendingType );
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par \tab // Returns the number of geMotions in the geActors geMotion library.
\par GENESISAPI int GENESISCC geActor_GetMotionCount(const geActor_Def *ActorDefinition);
\par 
\par \tab // Returns a geMotion pointer from the geActors geMotion library
\par \tab //   This is an aliased pointer - Not a copy.  Changes to this motion will be reflected
\par \tab //   in the actor.  Destroying this return motion will confuse the actor.
\par \tab // Index must be in range [0..geActor_GetMotionCount-1]
\par GENESISAPI geMotion *GENESISCC geActor_GetMotionByIndex(const geActor_Def *ActorDefinition, int Index );
\par 
\par \tab // Returns a geMotion pointer from the geActors geMotion library
\par \tab //   This is an aliased pointer - Not a copy.  Changes to this motion will be reflected
\par \tab //   in the actor.  Destroying this return motion will confuse the actor.
\par \tab // if there is no motion that matches the given name, the return value will be NULL
\par GENESISAPI geMotion *GENESISCC geActor_GetMotionByName(const geActor_Def *ActorDefinition, const char *Name );
\par 
\par \tab // Returns a motion name given an ActorDef and a motion index.
\par GENESISAPI const char *GENESISCC geActor_GetMotionName(const geActor_Def *ActorDefinition, int Index );
\par 
\par \tab // Returns the number of materials for an instance of an actor.
\par GENESISAPI int GENESISCC geActor_GetMaterialCount(const geActor *A);
\par 
\par \tab // Returns the current material for an instance of an actor
\par GENESISAPI geBoolean GENESISCC geActor_GetMaterial(const geActor *Actor, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap **Bitmap, geFloat *Red, geFloat *Green, geFloat *Blue);
\par 
\par \tab // Allows a material to be overriden in an actor instance
\par GENESISAPI geBoolean GENESISCC geActor_SetMaterial(geActor *Actor, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,  geFloat Red,  geFloat Green,  geFloat Blue);
\par 
\par 
\par 
\par \tab // Gets the current transform for a single bone in A.  (actor space->world space transform)
\par \tab // with a NULL BoneName, this returns the current 'root' transform
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneTransform(const geActor *A, const char *BoneName, geXForm3d *Transform);
\par \tab 
\par \tab // Gets the extent box (axial-aligned bounding box) for a given bone (for the current pose)
\par \tab // if BoneName is NULL, gets the a general bounding box from the body of the actor if it has been set.
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneExtBox(const geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  const char *BoneName,geExtBox *ExtBox);
\par 
\par \tab // Gets the non-axial-aligned bounding box for a given bone (for the current pose)
\par \tab //  The box is specified by a corner, and
\par \tab //  a non-normalized orientation transform.  Add DX,DY,DZ components 
\par \tab //  of the orientation to get other corners of the box
\par \tab // if BoneName is NULL, gets the a general bounding box from the body of the actor if it has been set.
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneBoundingBox(const geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  const char *BoneName,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *Corner,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *DX,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *DY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geVec3d *DZ);
\par 
\par \tab // Gets the current axial-aligned bounding box for an actor's bone configuration
\par \tab // takes all bones into account
\par GENESISAPI geBoolean GENESISCC geActor_GetDynamicExtBox( const geActor *A, geExtBox *ExtBox);
\par \tab 
\par \tab // Gets an assigned general non changing bounding box from the actor
\par GENESISAPI geBoolean GENESISCC geActor_GetExtBox(const geActor *A, geExtBox *ExtBox);
\par 
\par \tab // Sets an assigned general non changing bounding box from the actor
\par GENESISAPI geBoolean GENESISCC geActor_SetExtBox(geActor *A, const geExtBox *ExtBox,
\par \tab \tab \tab \tab \tab const char *CenterBoxOnThisNamedBone);\tab \tab // NULL uses root position of actor
\par 
\par \tab // Gets the rendering hint bounding box from the actor
\par \tab //   if the RenderHintExtBox is disabled, Enabled is GE_FALSE, and the box returned has zero dimensions, 
\par \tab //   centered at the root position of the actor.  If the RenderHintExtBox is enabled, Enabled is
\par \tab //   GE_TRUE, and the box returned is the one set with _SetRenderHintExtBox, offset by the 
\par \tab //   bone position of the bone named in _SetRenderHintExtBox().
\par GENESISAPI geBoolean GENESISCC geActor_GetRenderHintExtBox(const geActor *A, geExtBox *Box, geBoolean *Enabled);
\par 
\par \tab // Sets a rendering hint bounding box from the actor.  Increases performance by 
\par \tab //   enabling the rendering of the actor to occur only if the box is visible.
\par \tab //   If the box is not visible, a detailed analysis of the actor's current geometry is avoided.
\par \tab //   This does allow errors to occur: 
\par \tab //   If the actor has a bit of geometry that extends outside this box for some
\par \tab //   animation, that extended geometry may not be drawn, if the box if off-screen.   
\par \tab //   If the render hint box is not set, the engine will make no conservative assumptions 
\par \tab //   about the visibility of an actor - it will always be drawn if any portion of it is
\par \tab //   visible.
\par \tab //   To attach the box to the 'root' bone, pass NULL for CenterBoxOnThisNamedBone
\par \tab //   For disabling the hint box: (disabled is default) pass Box with zero mins and maxs
\par GENESISAPI geBoolean GENESISCC geActor_SetRenderHintExtBox(geActor *A, const geExtBox *Box,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *CenterBoxOnThisNamedBone );
\par 
\par 
\par \tab // Returns the pointer which was set with geActor_SetUserData.  NULL if not set.
\par GENESISAPI void *GENESISCC geActor_GetUserData(const geActor *A);
\par 
\par \tab // Sets the actors user data pointer to the given value.  For clients only.
\par GENESISAPI void GENESISCC geActor_SetUserData(geActor *A, void *UserData);
\par 
\par 
\par //--------------------------------------------------------------------------------
\par //   Posing and Rendering
\par //--------------------------------------------------------------------------------
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par #ifdef GE_WORLD_H
\par \tab // Prepares the geActor for rendering and posing.  Call Once once the actor is fully created.
\par \tab // Must be called prior to render/pose/setworldtransform 
\par geBoolean GENESISCC geActor_RenderPrep( geActor *A, geWorld *World);
\par 
\par \tab // Draws the geActor.  (RenderPrep must be called first)
\par geBoolean GENESISCC geActor_RenderThroughFrustum(const geActor *A, geEngine *Engine, geWorld *World, geCamera *Camera, Frustum_Info *FInfo);
\par geBoolean GENESISCC geActor_Render(const geActor *A, geEngine *Engine, geWorld *World, geCamera *Camera);
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par \tab // Poses the actor in its default pose
\par \tab // Transform is where to position the root for this pose.
\par \tab //  if Transform is NULL, the root for the pose is assumed to be the root of the actor.
\par GENESISAPI void GENESISCC geActor_ClearPose(geActor *A, const geXForm3d *Transform);
\par 
\par \tab // Poses the actor using given motion M at a time offset of Time
\par \tab // Transform is where to position the root for this pose.
\par \tab //  if Transform is NULL, the root for the pose is assumed to be the root of the actor.
\par GENESISAPI void GENESISCC geActor_SetPose(geActor *A, const geMotion *Motion, geFloat Time, const geXForm3d *Transform);
\par 
\par \tab // Blends the current pose of the geActor with 
\par \tab //  a new pose using motion M at a time offset of Time
\par \tab // A BlendAmount of 0 will result in the existing pose, A BlendAmount of 1 will
\par \tab // result in the new pose from M.  The BlendingType set by _SetBlendingType() determines
\par \tab // the blending function between 0 and 1
\par \tab // Transform is where to position the root for this pose.
\par \tab //  if Transform is NULL, the root for the pose is assumed to be the root of the actor.
\par GENESISAPI void GENESISCC geActor_BlendPose(geActor *A, const geMotion *Motion, geFloat Time,
\par \tab \tab \tab \tab \tab \tab const geXForm3d *Transform, geFloat BlendAmount);
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geActor_GetBoneAttachment(const geActor *A, const char *BoneName, geXForm3d *Transform);
\par GENESISAPI geBoolean GENESISCC geActor_SetBoneAttachment(geActor *A, const char *BoneName, geXForm3d *Transform);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par GENESISAPI geBoolean GENESISCC geActor_Attach( geActor *Slave,  const char *SlaveBoneName,
\par \tab \tab \tab \tab \tab \tab const geActor *Master, const char *MasterBoneName, 
\par \tab \tab \tab \tab \tab \tab const geXForm3d *Attachment);
\par 
\par GENESISAPI void GENESISCC geActor_Detach(geActor *Slave);
\par 
\par 
\par // GENESIS_PUBLIC_APIS
\par GENESISAPI geBoolean GENESISCC geActor_SetLightingOptions(geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean UseFillLight,\tab \tab \tab \tab // GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *FillLightNormal,\tab \tab // normalized vector
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat FillLightRed,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat FillLightGreen,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat FillLightBlue,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat AmbientLightRed,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat AmbientLightGreen,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat AmbientLightBlue,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean AmbientLightFromFloor,\tab // GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int MaximumDynamicLightsToUse,\tab \tab // 0 for none
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *LightReferenceBoneName, //NULL for root
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean PerBoneLighting);\tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // if GE_TRUE, then dynamic lighting attenuation and direction is computed
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // for each bone.  if GE_FALSE, then the computations are relative to the 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // single bone named by the LightReferenceBoneName
\par 
\par GENESISAPI geBoolean GENESISCC geActor_GetLightingOptions(const geActor *A,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean *UseFillLight,\tab \tab \tab // GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *FillLightNormal,\tab \tab \tab // normalized vector
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *FillLightRed,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *FillLightGreen,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *FillLightBlue,\tab \tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *AmbientLightRed,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *AmbientLightGreen,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *AmbientLightBlue,\tab \tab \tab // 0 .. 255
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean *UseAmbientLightFromFloor,// GE_TRUE or GE_FALSE
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int *MaximumDynamicLightsToUse,\tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const char **LightReferenceBoneName,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBoolean *PerBoneLighting);\tab \tab // NULL for root
\par 
\par 
\par GENESISAPI void GENESISCC geActor_SetScale(geActor *A, geFloat ScaleX,geFloat ScaleY,geFloat ScaleZ);
\par 
\par GENESISAPI geBoolean GENESISCC geActor_SetShadow(geActor *A, 
\par \tab \tab \tab \tab \tab \tab geBoolean DoShadow, 
\par \tab \tab \tab \tab \tab \tab geFloat Radius,
\par \tab \tab \tab \tab \tab \tab const geBitmap *ShadowMap,
\par \tab \tab \tab \tab \tab \tab const char * BoneName);
\par 
\par //  Animation Cuing API:
\par // high level Actor animation:  The principle is that motions can be applied to an actor
\par // and the actor will keep track of which motions are currently appropriate.  Call 
\par //\tab _AnimationStep() to compute a new pose for an elapsed time interval.  The new pose
\par //  will take into account all motions that are 'currently' cued up to be set or blended.
\par 
\par 
\par \tab // cue up a new motion.  The motion begins at the current time.  The motion can be 
\par \tab // blended in or out over time and time scaled.  If the return value is GE_FALSE, the 
\par \tab // animation was not cued up (failure implies Actor is incompletely initialized).
\par GENESISAPI geBoolean GENESISCC geActor_AnimationCue( 
\par \tab \tab geActor *A,\tab \tab \tab \tab \tab \tab // actor to apply animation to
\par \tab \tab geMotion *Motion,\tab \tab \tab \tab // motion to Cue
\par \tab \tab geFloat TimeScaleFactor,\tab \tab // time scale to apply to cued motion
\par \tab \tab geFloat TimeIntoMotion,\tab \tab \tab // time offset to begin motion with (Not TimeScaled)
\par \tab \tab geFloat BlendTime,\tab \tab \tab \tab // time to apply a blend. 
\par \tab \tab geFloat BlendFromAmount,\tab \tab // blend value at current time
\par \tab \tab geFloat BlendToAmount,\tab \tab \tab // blend value after BlendTime time has elapsed
\par \tab \tab const geXForm3d *MotionTransform);\tab // local transform to adjust motion by (NULL implies NO transform)
\par 
\par \tab // removes the last animation cue that was cued up.  Can be called repeatedly to successively
\par \tab // remove older and older cues.  Returns GE_TRUE when a cue was removed, GE_FALSE if there 
\par \tab // are no cues to remove.
\par GENESISAPI geBoolean GENESISCC geActor_AnimationRemoveLastCue( geActor *A );
\par 
\par \tab // applies a time step to actor A.  re-poses the actor according to all currently applicable
\par \tab // Animation Cues. (failure implies Actor is incompletely initialized)
\par GENESISAPI geBoolean GENESISCC geActor_AnimationStep(geActor *A, geFloat DeltaTime );
\par 
\par \tab // applies a 'temporary' time step to actor A.  re-poses the actor according to all 
\par \tab // currently appliciable cues.  (failure implies Actor is incompletely initialized)
\par \tab // DeltaTime is always relative to the the last AnimationStep()
\par GENESISAPI geBoolean GENESISCC geActor_AnimationTestStep(geActor *A, geFloat DeltaTime);
\par 
\par \tab // optimized version of geActor_AnimationStep.  Limits calculations to the bone named BoneName, and it's 
\par \tab // parents.  BoneName will be correctly computed, but the other bones will be wrong.  This is usefull for 
\par \tab // moving and animating an actor that is not actually visible.  Rendering and queries will be 'optimized'
\par \tab // until the actor is given any pose or animation that doesn't go through geActor_AnimationStepBoneOptimized() or 
\par \tab //  geActor_AnimationTestStepBoneOptimized().  BoneName can be NULL to compute only 'root' bone.
\par GENESISAPI geBoolean GENESISCC geActor_AnimationStepBoneOptimized(geActor *A, geFloat DeltaTime, const char *BoneName );
\par 
\par \tab // optimized version of geActor_AnimationTestStep.  Limits calculations to the bone named BoneName, and it's 
\par \tab // parents.  BoneName will be correctly computed, but the other bones will be wrong.  This is usefull for 
\par \tab // moving and animating an actor that is not actually visible.  Rendering and queries will be 'optimized'
\par \tab // until the actor is given any pose or animation that doesn't go through geActor_AnimationStepBoneOptimized() or 
\par \tab //  geActor_AnimationTestStepBoneOptimized().  BoneName can be NULL to compute only 'root' bone.
\par GENESISAPI geBoolean GENESISCC geActor_AnimationTestStepBoneOptimized(geActor *A, geFloat DeltaTime, const char *BoneName);
\par 
\par 
\par \tab // applies an 'immediate' offset to the animated actor
\par GENESISAPI geBoolean GENESISCC geActor_AnimationNudge(geActor *A, geXForm3d *Offset);
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geActor_GetAnimationEvent(geActor *A,\tab \tab \tab \tab \tab \tab 
\par \tab const char **ppEventString);\tab \tab // Return data, if return value is GE_TRUE
\par 
\par \tab // returns number of actors that are currently created.
\par GENESISAPI int GENESISCC geActor_GetCount(void);
\par 
\par // GENESIS_PRIVATE_APIS
\par \tab // call setscale and setshadow after preparing the actor for rendering (renderprep)
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069954}Body._h{\*\bkmkend _Toc454069954}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BODY._H                                                                             */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description:  Exports private BODY data structures for "friends".\tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_BODY__H
\par #define GE_BODY__H 
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par #include "body.h"
\par #include "strblock.h"
\par #include "bitmap.h"
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define GE_BODY_INDEX_MAX (0xEFFF)
\par 
\par #define GE_BODY_REALLY_BIG_NUMBER (9e9f)\tab \tab // bigger than any skin point
\par 
\par #define GE_BODY_HIGHEST_LOD_MASK\tab ( 1 << GE_BODY_HIGHEST_LOD )
\par #define GE_BODY_BBOX_LOD_MASK\tab \tab ( 1 << GE_BODY_NUMBER_OF_LOD ) // bounding box mask
\par 
\par 
\par typedef int16 geBody_Index;
\par 
\par typedef struct geBody_XSkinVertex
\par \{
\par \tab geVec3d\tab \tab \tab XPoint;
\par \tab geFloat\tab \tab \tab XU,XV;
\par \tab int8\tab \tab \tab LevelOfDetailMask;
\par \tab geBody_Index\tab BoneIndex;
\par \} geBody_XSkinVertex;
\par 
\par typedef struct geBody_Normal
\par \{
\par \tab geVec3d\tab \tab \tab Normal;
\par \tab int8\tab \tab \tab LevelOfDetailMask;
\par \tab geBody_Index\tab BoneIndex;
\par \} geBody_Normal;
\par 
\par typedef struct geBody_Bone
\par \{
\par \tab geVec3d\tab \tab \tab BoundingBoxMin;
\par \tab geVec3d\tab \tab \tab BoundingBoxMax;
\par \tab geXForm3d       AttachmentMatrix;
\par \tab geBody_Index\tab ParentBoneIndex;
\par \} geBody_Bone;
\par \tab \tab 
\par typedef struct geBody_Triangle
\par \{
\par \tab geBody_Index\tab VtxIndex[3];
\par \tab geBody_Index\tab NormalIndex[3];
\par \tab geBody_Index\tab MaterialIndex;
\par \tab //geBody_Index    FaceNormal;
\par \} geBody_Triangle;
\par \tab \tab \tab 
\par typedef struct geBody_TriangleList
\par \{
\par \tab geBody_Index\tab   FaceCount;
\par \tab geBody_Triangle  *FaceArray;\tab \tab // Sorted by MaterialIndex
\par \} geBody_TriangleList;
\par 
\par typedef struct geBody_Material
\par \{
\par \tab geBitmap *Bitmap;
\par \tab geFloat Red,Green,Blue;
\par \} geBody_Material;
\par 
\par typedef struct geBody
\par \{
\par \tab geVec3d\tab \tab \tab \tab   BoundingBoxMin;
\par \tab geVec3d\tab \tab \tab \tab   BoundingBoxMax;
\par 
\par \tab geBody_Index\tab \tab   XSkinVertexCount;
\par \tab geBody_XSkinVertex\tab  *XSkinVertexArray;\tab \tab // Sorted by BoneIndex
\par 
\par \tab geBody_Index\tab \tab   SkinNormalCount;
\par \tab geBody_Normal\tab \tab  *SkinNormalArray;
\par 
\par \tab geBody_Index\tab \tab   BoneCount;
\par \tab geBody_Bone\tab \tab \tab  *BoneArray;
\par \tab geStrBlock\tab \tab \tab  *BoneNames;
\par 
\par \tab geBody_Index\tab \tab   MaterialCount;
\par \tab geBody_Material\tab \tab  *MaterialArray;
\par \tab geStrBlock\tab \tab \tab  *MaterialNames;\tab \tab 
\par 
\par \tab int\tab \tab \tab \tab \tab   LevelsOfDetail;
\par \tab geBody_TriangleList\tab   SkinFaces[GE_BODY_NUMBER_OF_LOD];
\par \tab 
\par \tab geBody\tab \tab \tab \tab  *IsValid;
\par \} geBody;
\par 
\par #if defined(DEBUG) || !defined(NDEBUG)
\par geBoolean GENESISCC geBody_SanityCheck(const geBody *B);
\par #endif
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069955}Body.h{\*\bkmkend _Toc454069955}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BODY.H                                                                              */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Actor body interface.\tab \tab                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_BODY_H
\par #define GE_BODY_H 
\par 
\par /* This object is for managing the data associated with a skeletal-based mesh, 
\par    a 'body'.
\par    This object holds the geometry for the body and the list of materials needed.
\par */
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par #include "vfile.h"
\par #include "bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define GE_BODY_NUMBER_OF_LOD\tab \tab \tab (4)\tab \tab // 0 is highest detail
\par #define GE_BODY_NO_PARENT_BONE         (-1)   
\par #define GE_BODY_HIGHEST_LOD            (0)
\par 
\par #define GE_BODY_ROOT\tab \tab \tab \tab \tab (-1)\tab // for specifying 'root' bounding box.
\par 
\par typedef struct geBody geBody;
\par 
\par 
\par 
\par geBody *GENESISCC geBody_Create(void);
\par 
\par void GENESISCC geBody_Destroy(geBody **B);
\par 
\par geBoolean GENESISCC geBody_IsValid(const geBody *B);
\par 
\par 
\par geBoolean GENESISCC geBody_GetGeometryStats(const geBody *B, int lod, int *Vertices, int *Faces, int *Normals);
\par 
\par geBoolean GENESISCC geBody_AddFace(\tab geBody *B,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Vertex1, const geVec3d *Normal1, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat U1, geFloat V1, int BoneIndex1,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Vertex2, const geVec3d *Normal2, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat U2, geFloat V2, int BoneIndex2,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Vertex3, const geVec3d *Normal3, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat U3, geFloat V3, int BoneIndex3,
\par \tab \tab \tab \tab \tab \tab \tab \tab int MaterialIndex);
\par 
\par \tab \tab \tab // Bitmap is added to body.  It's reference count is increased.  Caller still owns a pointer
\par \tab \tab \tab // to the bitmap, and is responsible for destroying it.
\par geBoolean GENESISCC geBody_AddMaterial( geBody *B, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *MaterialName, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Red, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Green, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Blue,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int *MaterialIndex);
\par 
\par \tab \tab \tab // returned bitmap is a pointer to the bitmap in the body's list.  It may not be destroyed.
\par \tab \tab \tab // if caller would like to 'own' a copy of that bitmap pointer, it should call geBitmap_CreateRef()
\par geBoolean GENESISCC geBody_GetMaterial(const geBody *Body, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const char **MaterialName,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap **Bitmap, geFloat *Red, geFloat *Green, geFloat *Blue);
\par 
\par \tab \tab \tab // Bitmap is set into the body.  It's reference count is increased.  Caller still owns a pointer
\par \tab \tab \tab // to the bitmap, and is responsible for destroying it.
\par geBoolean GENESISCC geBody_SetMaterial(geBody *Body, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,  geFloat Red,  geFloat Green,  geFloat Blue);
\par 
\par int GENESISCC geBody_GetMaterialCount(const geBody *B);
\par 
\par geBoolean GENESISCC geBody_AddBone( geBody *B, 
\par \tab \tab \tab \tab \tab \tab \tab int ParentBoneIndex,
\par \tab \tab \tab \tab \tab \tab \tab const char *BoneName, 
\par \tab \tab \tab \tab \tab \tab \tab const geXForm3d *AttachmentMatrix,
\par \tab \tab \tab \tab \tab \tab \tab int *BoneIndex);
\par 
\par geBoolean GENESISCC geBody_ComputeLevelsOfDetail( geBody *B ,int Levels);
\par 
\par int GENESISCC geBody_GetBoneCount(const geBody *B);
\par 
\par void GENESISCC geBody_GetBone(\tab const geBody *B, 
\par \tab \tab \tab \tab \tab \tab int BoneIndex, 
\par \tab \tab \tab \tab \tab \tab const char **BoneName,
\par \tab \tab \tab \tab \tab \tab geXForm3d *Attachment, 
\par \tab \tab \tab \tab \tab \tab int *ParentBoneIndex);
\par 
\par int32 GENESISCC geBody_GetBoneNameChecksum(const geBody *B);
\par 
\par void GENESISCC geBody_SetBoundingBox( geBody *B,
\par \tab \tab \tab \tab \tab \tab \tab int BoneIndex,\tab \tab // GE_BODY_ROOT for specifing 'root' bounding box.
\par \tab \tab \tab \tab \tab \tab \tab const geVec3d *MinimumBoxCorner,
\par \tab \tab \tab \tab \tab \tab \tab const geVec3d *MaximumBoxCorner);
\par  
\par 
\par geBoolean GENESISCC geBody_GetBoundingBox( const geBody *B, 
\par \tab \tab \tab \tab \tab \tab \tab int BoneIndex,\tab \tab // GE_BODY_ROOT for specifing 'root' bounding box.
\par \tab \tab \tab \tab \tab \tab \tab geVec3d *MinimumBoxCorner,
\par \tab \tab \tab \tab \tab \tab \tab geVec3d *MaximumBoxCorner);
\par 
\par geBoolean GENESISCC geBody_GetBoneByName(const geBody* B,
\par \tab const char* BoneName,
\par \tab int* pBoneIndex,
\par \tab geXForm3d* Attachment,
\par \tab int* pParentBoneIndex);
\par 
\par geBoolean GENESISCC geBody_WriteToFile(const geBody *B, geVFile *pFile);
\par geBody  *GENESISCC  geBody_CreateFromFile(geVFile *pFile);
\par 
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par \tab \tab \tab \tab \tab 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069956}Bodyinst.h{\*\bkmkend _Toc454069956}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BODYINST.H                                                                          */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Actor body instance interface.\tab \tab                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_BODYINST_H
\par #define GE_BODYINST_H 
\par 
\par /* This object is for accessing and retrieving an 'instance' of the geometry
\par    for a body.  
\par    
\par    The retrieval is a list of drawing commands in world space or 
\par    in camera space.  
\par 
\par    An array of transforms that corresponds to the bones in the body is needed.
\par  */
\par 
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par #include "body.h"
\par #include "XFArray.h"
\par #include "camera.h"
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par typedef struct geBodyInst geBodyInst;
\par 
\par typedef int16 geBodyInst_Index;
\par 
\par typedef enum 
\par \{
\par \tab GE_BODYINST_FACE_TRIANGLE,
\par \tab GE_BODYINST_FACE_TRISTRIP,
\par \tab GE_BODYINST_FACE_TRIFAN
\par \} geBodyInst_FaceType;
\par 
\par 
\par typedef struct geBodyInst_SkinVertex
\par \{
\par \tab geVec3d SVPoint;
\par \tab geFloat SVU,SVV;
\par \tab int\tab ReferenceBoneIndex;
\par \} geBodyInst_SkinVertex;
\par 
\par typedef struct geBodyInst_Geometry 
\par \{
\par \tab geBodyInst_Index\tab \tab  SkinVertexCount;
\par \tab geBodyInst_SkinVertex\tab *SkinVertexArray;
\par 
\par \tab geBodyInst_Index\tab \tab  NormalCount;
\par \tab geVec3d\tab \tab \tab \tab \tab *NormalArray;
\par 
\par \tab geBodyInst_Index\tab \tab  FaceCount;
\par \tab int32\tab \tab \tab \tab \tab  FaceListSize;
\par \tab geBodyInst_Index\tab \tab *FaceList;
\par 
\par \tab geVec3d\tab \tab \tab \tab \tab  Maxs, Mins;
\par \}\tab geBodyInst_Geometry;
\par 
\par /* format for geBodyInst_Geometry.FaceList:
\par \tab primitive type (GE_BODY_FACE_TRIANGLE,\tab   GE_BODY_FACE_TRISTRIP,  GE_BODY_FACE_TRIFAN )
\par \tab followed by material index
\par \tab followed by...
\par \tab case primitive 
\par \tab \tab GE_BODY_FACE_TRIANGLE:
\par \tab \tab   vertex index 1, normal index 1
\par \tab \tab   vertex index 2, normal index 2
\par \tab \tab   vertex index 3, normal index 3
\par \tab \tab   (next primitive)
\par \tab \tab GE_BODY_FACE_TRISTRIP:
\par \tab \tab   triangle count
\par \tab \tab   vertex index 1, normal index 1
\par \tab \tab   vertex index 2, normal index 2
\par \tab \tab   vertex index 3, normal index 3
\par \tab \tab   vertex index 4, normal index 4
\par \tab \tab   ...  # vertices is triangle count+2
\par \tab \tab   (next primitive)
\par \tab \tab GE_BODY_FACE_TRIFAN:
\par \tab \tab   triangle count
\par \tab \tab   vertex index 1, normal index 1
\par \tab \tab   vertex index 2, normal index 2
\par \tab \tab   vertex index 3, normal index 3
\par \tab \tab   vertex index 4, normal index 4
\par \tab \tab   ...  # vertices is triangle count+2
\par \tab \tab   (next primitive)
\par */
\par 
\par 
\par 
\par 
\par geBodyInst *GENESISCC geBodyInst_Create( const geBody *B );
\par void GENESISCC geBodyInst_Destroy(geBodyInst **BI);
\par 
\par const geBodyInst_Geometry *GENESISCC geBodyInst_GetGeometry( 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geBodyInst *BI,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Scale,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geXFArray *BoneXformArray,
\par \tab \tab \tab \tab \tab \tab \tab \tab int LevelOfDetail,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geCamera *Camera);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par \tab \tab 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069957}Motion.h{\*\bkmkend _Toc454069957}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  MOTION.H\tab                                                                         */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Motion interface.\tab \tab \tab \tab \tab                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_MOTION_H
\par #define GE_MOTION_H
\par 
\par /*\tab motion
\par 
\par \tab This object is a list of named Path objects
\par 
\par */
\par 
\par #include <stdio.h>
\par #include "basetype.h"
\par #include "path.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // GENESIS_PUBLIC_APIS
\par typedef struct geMotion geMotion;
\par 
\par GENESISAPI geMotion *GENESISCC geMotion_Create(geBoolean ManageNames);
\par 
\par GENESISAPI void GENESISCC geMotion_Destroy(geMotion **PM);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_IsValid(const geMotion *M);
\par 
\par \tab // AddPath adds a reference of P to the motion M.  Ownership is shared - The caller must destroy P.
\par GENESISAPI geBoolean GENESISCC geMotion_AddPath(geMotion *M, gePath *P,const char *Name,int *Index);
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_HasNames(const geMotion *M);
\par GENESISAPI int32 GENESISCC geMotion_GetNameChecksum(const geMotion *M);
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_RemoveNames(geMotion *M);
\par 
\par GENESISAPI void GENESISCC geMotion_SampleChannels(const geMotion *M, int PathIndex, geFloat Time, geQuaternion *Rotation, geVec3d *Translation);
\par GENESISAPI geBoolean GENESISCC geMotion_SampleChannelsNamed(const geMotion *M, const char *PathName, geFloat Time, geQuaternion *Rotation, geVec3d *Translation);
\par 
\par GENESISAPI void GENESISCC geMotion_Sample(const geMotion *M, int PathIndex, geFloat Time, geXForm3d *Transform);
\par GENESISAPI geBoolean GENESISCC geMotion_SampleNamed(const geMotion *M, const char *PathName, geFloat Time, geXForm3d *Transform);
\par 
\par \tab // the returned Paths from _Get functions should not be destroyed.  
\par \tab // if ownership is desired, call gePath_CreateRef() to create another owner. 
\par \tab // an 'owner' has access to the object regardless of the number of other owners, and 
\par \tab // an owner must call the object's destroy method to relinquish ownership
\par GENESISAPI gePath *GENESISCC geMotion_GetPathNamed(const geMotion *M,const char *Name);
\par GENESISAPI const char *GENESISCC geMotion_GetNameOfPath(const geMotion *M, int Index);
\par 
\par // GENESIS_PUBLIC_APIS
\par GENESISAPI gePath *GENESISCC geMotion_GetPath(const geMotion *M,int Index);
\par GENESISAPI int GENESISCC geMotion_GetPathCount(const geMotion *M);
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_SetName(geMotion *M, const char * Name);
\par GENESISAPI const char *GENESISCC geMotion_GetName(const geMotion *M);
\par 
\par // GENESIS_PRIVATE_APIS
\par 
\par \tab // support for compound motions.  A motion can either have sub-motions, or be single motion.
\par \tab // these functions support motions that have sub-motions.
\par GENESISAPI int GENESISCC geMotion_GetSubMotionCount(const geMotion*M);
\par 
\par \tab // the returned motions from these _Get functions should not be destroyed.  
\par \tab // if ownership is desired, call geMotion_CreateRef() to create another owner. 
\par \tab // an 'owner' has access to the object regardless of the number of other owners, and 
\par \tab // an owner must call the object's destroy method to relinquish ownership
\par GENESISAPI geMotion *GENESISCC geMotion_GetSubMotion(const geMotion *M,int Index);
\par GENESISAPI geMotion *GENESISCC geMotion_GetSubMotionNamed(const geMotion *M,const char *Name);
\par GENESISAPI geBoolean GENESISCC geMotion_AddSubMotion(
\par \tab \tab \tab \tab \tab \tab \tab \tab geMotion *ParentMotion,
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat TimeScale,\tab \tab \tab // Scale factor for this submotion
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat TimeOffset,\tab \tab \tab // Time in parent motion when submotion should start
\par \tab \tab \tab \tab \tab \tab \tab \tab geMotion *SubMotion,
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat StartTime,\tab \tab \tab // Blend start time (relative to submotion)
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat StartMagnitude,\tab \tab // Blend start magnitude (0..1)
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat EndTime,\tab \tab \tab // Blend ending time (relative to submotion)
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat EndMagnitude,\tab \tab // Blend ending magnitude (0..1)
\par \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d *Transform,\tab // Base transform to apply to this submotion
\par \tab \tab \tab \tab \tab \tab \tab \tab int *Index);\tab \tab \tab \tab // returned motion index
\par 
\par GENESISAPI geMotion *GENESISCC  geMotion_RemoveSubMotion(geMotion *ParentMotion, int SubMotionIndex);
\par 
\par // Get/Set submotion time offset.  The time offset is the offset into the 
\par // compound (parent) motion at which the submotion should start.
\par GENESISAPI geFloat   GENESISCC  geMotion_GetTimeOffset( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetTimeOffset( geMotion *M,int SubMotionIndex,geFloat TimeOffset );
\par 
\par // Get/Set submotion time scale.  Time scaling is applied to the submotion after the TimeOffset
\par // is applied.  The formula is:  (CurrentTime - TimeOffset) * TimeScale
\par GENESISAPI geFloat   GENESISCC  geMotion_GetTimeScale( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetTimeScale( geMotion *M,int SubMotionIndex,geFloat TimeScale );
\par 
\par // Get blending amount for a particular submotion.  The Time parameter is parent-relative.
\par GENESISAPI geFloat    GENESISCC geMotion_GetBlendAmount( const geMotion *M, int SubMotionIndex, geFloat Time);
\par 
\par // Get/Set blending path.  The keyframe times in the blend path are relative to the submotion.
\par GENESISAPI gePath    *GENESISCC geMotion_GetBlendPath( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetBlendPath( geMotion *M,int SubMotionIndex, gePath *Blend );
\par 
\par GENESISAPI const geXForm3d *GENESISCC geMotion_GetBaseTransform( const geMotion *M,int SubMotionIndex );
\par GENESISAPI geBoolean  GENESISCC geMotion_SetBaseTransform( geMotion *M,int SubMotionIndex, geXForm3d *BaseTransform );
\par GENESISAPI geBoolean  GENESISCC geMotion_GetTransform(const geMotion *M, geFloat Time, geXForm3d *Transform);
\par // GENESIS_PUBLIC_APIS
\par 
\par \tab // gets time of first key and time of last key (as if motion did not loop)
\par \tab // if there are no paths in the motion: returns GE_FALSE and times are not set
\par \tab // otherwise returns GE_TRUE
\par \tab //
\par \tab // For a compound motion, GetTimeExtents will return the extents of the scaled submotions.
\par \tab // For a single motion, no scaling is applied.
\par GENESISAPI geBoolean GENESISCC geMotion_GetTimeExtents(const geMotion *M,geFloat *StartTime,geFloat *EndTime);
\par 
\par // Only one event is allowed per time key.
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_InsertEvent(geMotion *M, geFloat tKey, const char* String);
\par \tab // Inserts the new event and corresponding string.
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_DeleteEvent(geMotion *M, geFloat tKey);
\par \tab // Deletes the event
\par 
\par GENESISAPI void GENESISCC geMotion_SetupEventIterator(
\par \tab geMotion *M,
\par \tab geFloat StartTime,\tab \tab \tab \tab // Inclusive search start
\par \tab geFloat EndTime);\tab \tab \tab \tab // Non-inclusive search stop
\par \tab // For searching or querying the array for events between two times
\par \tab // times are compaired [StartTime,EndTime), '[' is inclusive, ')' is 
\par \tab // non-inclusive.  This prepares the geMotion_GetNextEvent() function.
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_GetNextEvent(
\par \tab geMotion *M,\tab \tab \tab \tab \tab \tab // Event list to iterate
\par \tab geFloat *pTime,\tab \tab \tab \tab // Return time, if found
\par \tab const char **ppEventString);\tab // Return data, if found
\par \tab // Iterates from StartTime to EndTime as setup in geMotion_SetupEventIterator()
\par \tab // and for each event between these times [StartTime,EndTime)
\par \tab // this function will return Time and EventString returned for that event
\par \tab // and the iterator will be positioned for the next search.  When there 
\par \tab // are no more events in the range, this function will return GE_FALSE (Time
\par \tab // will be 0 and ppEventString will be empty).
\par 
\par GENESISAPI geBoolean GENESISCC geMotion_GetEventExtents(const geMotion *M,
\par \tab \tab \tab geFloat *FirstEventTime,
\par \tab \tab \tab geFloat *LastEventTime);
\par \tab // returns the time associated with the first and last events 
\par \tab // returns GE_FALSE if there are no events (and Times are not set)
\par 
\par 
\par // GENESIS_PRIVATE_APIS
\par GENESISAPI geMotion *GENESISCC geMotion_CreateFromFile(geVFile *f);
\par GENESISAPI geBoolean GENESISCC geMotion_WriteToFile(const geMotion *M, geVFile *f);
\par GENESISAPI geBoolean GENESISCC geMotion_WriteToBinaryFile(const geMotion *M,geVFile *pFile);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069958}Path.h{\*\bkmkend _Toc454069958}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PATH.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Time-indexed keyframe creation, maintenance, and sampling.\tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_PATH_H
\par #define GE_PATH_H
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par #include "quatern.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par \tab extern "C" \{
\par #endif
\par 
\par 
\par // GENESIS_PUBLIC_APIS
\par typedef struct _gePath gePath;
\par 
\par #define GE_PATH_ROTATION_CHANNEL    1
\par #define GE_PATH_TRANSLATION_CHANNEL 2
\par 
\par #define GE_PATH_ALL_CHANNELS (GE_PATH_ROTATION_CHANNEL | GE_PATH_TRANSLATION_CHANNEL)
\par 
\par #ifndef GE_PATH_ENUMS
\par \tab #define GE_PATH_ENUMS
\par \tab typedef enum 
\par \tab \{
\par \tab \tab GE_PATH_INTERPOLATE_LINEAR  = 0,\tab // linear blend for translation or rotation channel
\par \tab \tab GE_PATH_INTERPOLATE_HERMITE,\tab \tab // hermite cubic spline for translation channel
\par \tab \tab GE_PATH_INTERPOLATE_SLERP,\tab \tab \tab // spherical-linear blend for rotation channel
\par \tab \tab GE_PATH_INTERPOLATE_SQUAD,\tab \tab \tab // higher order blend for rotation channel 'G1' continuity
\par \tab \tab //GE_PATH_INTEROPLATE_TRIPOD,\tab \tab  // not supported yet.
\par \tab \tab GE_PATH_INTERPOLATE_HERMITE_ZERO_DERIV = 7\tab // hermite cubic with zero derivative at keyframes ('easing' curve)
\par \tab \}gePath_Interpolator;
\par #endif
\par 
\par GENESISAPI void GENESISCC gePath_CreateRef( gePath *P );
\par 
\par GENESISAPI gePath *GENESISCC gePath_Create(
\par \tab gePath_Interpolator TranslationInterpolation,\tab // type of interpolation for translation channel
\par \tab gePath_Interpolator RotationInterpolation,\tab // type of interpolation for rotation channel
\par \tab geBoolean Looped);\tab \tab \tab \tab // True if end of path is connected to head
\par \tab // creates new gePath
\par \tab //  A looping path should have the same first & last point.  The path
\par \tab //  generator will choose arbitrarily between these points for a 
\par \tab //  sample exactly at the end of the loop.
\par 
\par GENESISAPI gePath *GENESISCC gePath_CreateCopy( const gePath *P );
\par \tab 
\par GENESISAPI void GENESISCC gePath_Destroy(gePath **PP);\tab \tab 
\par \tab // destroys path *PP
\par 
\par //------------------ time based keyframe operations
\par GENESISAPI geBoolean GENESISCC gePath_InsertKeyframe(
\par \tab gePath *P, 
\par \tab int ChannelMask, 
\par \tab geFloat Time, 
\par \tab const geXForm3d *Matrix); 
\par \tab // inserts a keyframe at a specific time.
\par \tab 
\par GENESISAPI geBoolean GENESISCC gePath_DeleteKeyframe(
\par \tab gePath *P,
\par \tab int Index,
\par \tab int ChannelMask); 
\par \tab // deletes the nth keyframe
\par 
\par GENESISAPI geBoolean GENESISCC gePath_GetTimeExtents(
\par \tab const gePath *P,
\par \tab geFloat *StartTime, 
\par \tab geFloat *EndTime);
\par \tab // gets the time for the first and last keys in the path (ignoring looping)
\par \tab // if there are no keys, return GE_FALSE and times are not set.
\par \tab // returns GE_TRUE if there are keys.
\par 
\par //----------------- index based keyframe operations
\par GENESISAPI void GENESISCC gePath_GetKeyframe(
\par \tab const gePath *P, 
\par \tab int Index,\tab \tab \tab \tab // gets keyframe[index]
\par \tab int Channel,\tab \tab \tab // for this channel
\par \tab geFloat *Time,\tab \tab \tab // returns the time of the keyframe
\par \tab geXForm3d *Matrix);\tab \tab // returns the matrix of the keyframe
\par \tab // retrieves keyframe[index], and it's time
\par 
\par GENESISAPI int GENESISCC gePath_GetKeyframeCount(const gePath *P,int Channel);
\par \tab // retrieves count of keyframes for a specific channel
\par 
\par GENESISAPI int GENESISCC gePath_GetKeyframeIndex(const gePath *P, int Channel, geFloat Time);
\par \tab // retrieves the index of the keyframe at a specific time for a specific channel
\par 
\par //----------------- sampling a path  (time based)
\par GENESISAPI void GENESISCC gePath_Sample(const gePath *P, geFloat Time,geXForm3d *Matrix);
\par \tab // returns a transform matrix sampled at 'Time'.
\par \tab // p is not const because information is cached in p for next sample
\par 
\par // GENESIS_PRIVATE_APIS
\par void GENESISCC gePath_SampleChannels(
\par \tab const gePath *P, 
\par \tab geFloat Time, 
\par \tab geQuaternion *Rotation, 
\par \tab geVec3d *Translation);
\par \tab // returns a rotation and a translation for the path at 'Time'
\par \tab // p is not const because information is cached in p for next sample
\par 
\par GENESISAPI geBoolean GENESISCC gePath_OffsetTimes(gePath *P, 
\par \tab int StartingIndex, int ChannelMask, geFloat TimeOffset );
\par \tab \tab // slides all samples in path starting with StartingIndex down by TimeOffset
\par 
\par GENESISAPI geBoolean GENESISCC gePath_ModifyKeyframe(
\par \tab gePath *P,
\par \tab int Index,
\par \tab int ChannelMask,
\par \tab const geXForm3d *Matrix);
\par \tab 
\par 
\par // GENESIS_PUBLIC_APIS
\par 
\par //------------------ saving/loading a path
\par GENESISAPI gePath* GENESISCC gePath_CreateFromFile(geVFile *F);
\par \tab // loads a file  (binary or ascii)
\par 
\par GENESISAPI geBoolean GENESISCC gePath_WriteToFile(const gePath *P, geVFile *F);
\par \tab // dumps formatted ascii to the file.  
\par 
\par GENESISAPI geBoolean GENESISCC gePath_WriteToBinaryFile(const gePath *P, geVFile *F);
\par \tab // dumps a minimal binary image for fastest reading
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \tab \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069959}Pose.h{\*\bkmkend _Toc454069959}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  POSE.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Bone hierarchy interface.\tab \tab \tab \tab \tab \tab \tab \tab .\tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_POSE_H
\par #define GE_POSE_H
\par 
\par /*\tab gePose
\par 
\par \tab This object is a hierarchical set of attached joints.  The joints can have names.
\par \tab A 'gePose' keeps track of which children joints move in the hierarchy when a parent
\par \tab joint moves.  A gePose also remembers the position transform matrices for each joint.
\par 
\par \tab The gePose is set by applying a motion at a specific time.  This queries the motion
\par \tab to determine each joint's change and applies them to the hierarchy.  Each joint can
\par \tab then be queried for it's world transform (for drawing, etc.)
\par 
\par \tab Additional motions can modify or be blended into the pose.  A motion that describes 
\par \tab only a few joint changes can be applied to only those joints, or a motion can be
\par \tab blended with the current pose. 
\par 
\par \tab Something to watch for:  since setting the pose by applying a motion is powerful
\par \tab enough to resolve intentionally mismatched motion-pose sets, this can lead to 
\par \tab problems if the motion UNintentionally does not match the pose.  Use 
\par \tab gePose_MatchesgeMotionExactly() to test for an exact name-based match.
\par \tab 
\par 
\par */
\par 
\par #include <stdio.h>
\par #include "Motion.h"
\par #include "XFArray.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par #define GE_POSE_ROOT_JOINT (-1)
\par 
\par typedef enum 
\par \{
\par \tab \tab GE_POSE_BLEND_LINEAR,
\par \tab \tab GE_POSE_BLEND_HERMITE
\par \} gePose_BlendingType;
\par 
\par typedef struct gePose gePose;
\par 
\par \tab // Creates a new pose with no joints.
\par gePose *GENESISCC gePose_Create(void);
\par 
\par \tab // Destroys an existing pose.
\par void GENESISCC gePose_Destroy(gePose **PM);
\par 
\par \tab // Adds a new joint to a pose.
\par geBoolean GENESISCC gePose_AddJoint(
\par \tab gePose *P,
\par \tab int ParentJointIndex,
\par \tab const char *JointName,
\par \tab const geXForm3d *Attachment,
\par \tab int *JointIndex);
\par 
\par 
\par void GENESISCC gePose_GetScale(const gePose *P, geVec3d *Scale);
\par \tab // Retrieves current joint attachment scaling factors
\par 
\par void GENESISCC gePose_SetScale(gePose *P, const geVec3d *Scale);
\par \tab // Scales all joint attachments by component scaling factors in Scale
\par 
\par \tab // Returns the index of a joint named JointName.  Returns GE_TRUE if it is
\par \tab // located, and Index is set.  Returns GE_FALSE if not, and Index is not changed.
\par geBoolean GENESISCC gePose_FindNamedJointIndex(const gePose *P, const char *JointName, int *Index);
\par 
\par \tab // returns the number of joints in the pose
\par int GENESISCC gePose_GetJointCount(const gePose *P);
\par 
\par geBoolean GENESISCC gePose_MatchesMotionExactly(const gePose *P, const geMotion *M);
\par 
\par void GENESISCC gePose_Clear(gePose *P, const geXForm3d *Transform);
\par 
\par \tab // set the pose according to a motion.  Use the motion at time 'Time'.
\par \tab // if the motion does not describe motion for all joints, name-based resolution
\par \tab // will be used to decide which motion to attach to which joints.
\par \tab // joints that are unaffected are unchanged.
\par \tab // if Transform is non-NULL, it is applied to the Motion
\par void GENESISCC gePose_SetMotion(gePose *P, const geMotion *M,geFloat Time,const geXForm3d *Transform);
\par 
\par \tab // optimization:  if this is called, then all pose computations are limited to the BoneIndex'th bone, and
\par \tab // it's parents (including the root bone).  This is true for all queries until an entire motion is set or blended
\par \tab // into the pose.
\par void GENESISCC gePose_SetMotionForABone(gePose *P, const geMotion *M, geFloat Time,
\par \tab \tab \tab \tab \tab \tab \tab const geXForm3d *Transform,int BoneIndex);
\par 
\par 
\par \tab // blend in the pose according to a motion.  Use the motion at time 'Time'.
\par \tab // the blending is between the 'current' pose and the pose described by the motion.
\par \tab // a BlendAmount of 0 will result in the 'current' pose, and a BlendAmount of 1.0
\par \tab // will result in the pose according to the new motion.
\par \tab // if the motion does not describe motion for all joints, name-based resolution
\par \tab // will be used to decide which motion to attach to which joints.
\par \tab // joints that are unaffected are unchanged.
\par \tab // if Transform is non-NULL, it is applied to the Motion prior to blending
\par void GENESISCC gePose_BlendMotion(gePose *P, const geMotion *M, geFloat Time, 
\par \tab \tab \tab \tab \tab const geXForm3d *Transform,
\par \tab \tab \tab \tab \tab geFloat BlendAmount, gePose_BlendingType BlendingType);
\par 
\par \tab // get a joint's current transform (relative to world space)
\par void GENESISCC gePose_GetJointTransform(const gePose *P, int JointIndex,geXForm3d *Transform);
\par 
\par \tab // get the transforms for the entire pose. *TransformArray must not be changed.
\par const geXFArray *GENESISCC gePose_GetAllJointTransforms(const gePose *P);
\par 
\par \tab // query a joint's current transform relative to it's attachment to it's parent.
\par void GENESISCC gePose_GetJointLocalTransform(const gePose *P, int JointIndex,geXForm3d *Transform);
\par 
\par \tab // adjust a joint's current transform relative to it's attachment to it's parent.
\par \tab //   this is like setting a mini-motion into this joint only:  this will only affect
\par \tab //   the current pose 
\par void GENESISCC gePose_SetJointLocalTransform(gePose *P, int JointIndex,const geXForm3d *Transform);
\par 
\par \tab // query how a joint is attached to it's parent. (it's base attachment)
\par void GENESISCC gePose_GetJointAttachment(const gePose *P,int JointIndex,geXForm3d *AttachmentTransform);
\par 
\par \tab // adjust how a joint is attached to it's parent.  These changes are permanent:  all
\par \tab //  future pose motions will incorporate this joint's new relation to it's parent */
\par void GENESISCC gePose_SetJointAttachment(gePose *P,int JointIndex,const geXForm3d *AttachmentTransform);
\par 
\par const char* GENESISCC gePose_GetJointName(const gePose* P, int JointIndex);
\par 
\par geBoolean GENESISCC gePose_Attach(gePose *Slave, int SlaveBoneIndex,
\par \tab \tab \tab \tab   gePose *Master, int MasterBoneIndex, 
\par \tab \tab \tab \tab   const geXForm3d *Attachment);
\par 
\par void GENESISCC gePose_Detach(gePose *P);
\par 
\par \tab // a pose can also maintain a record of which joints are touched by a given motion.
\par \tab // these funtions set,clear and query the record.
\par \tab // ClearCoverage clears the coverage flag for all joints 
\par void GENESISCC gePose_ClearCoverage(gePose *P, int ClearTo);
\par \tab // AccumulateCoverage returns the number of joints that are not already 'covered' 
\par \tab // that will be affected by a motion M,  
\par \tab // if QueryOnly is GE_FALSE, affected joints are tagged as 'covered', otherwise no changes
\par \tab // are made to the joint coverage flags.
\par int GENESISCC gePose_AccumulateCoverage(gePose *P, const geMotion *M, geBoolean QueryOnly);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069960}Puppet.h{\*\bkmkend _Toc454069960}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PUPPET.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Puppet interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab .\tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_PUPPET_H
\par #define GE_PUPPET_H
\par 
\par #include "Motion.h"
\par #include "Camera.h"
\par #include "Body.h"
\par #include "Pose.h"
\par #include "ExtBox.h"\tab \tab \tab // geExtBox for gePuppet_RenderThroughFrustum
\par 
\par #include "Frustum.h"
\par #include "vfile.h"
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par typedef struct gePuppet gePuppet;
\par 
\par gePuppet *GENESISCC gePuppet_Create(geVFile *TextureFS, const geBody *B, geWorld *World);
\par 
\par void GENESISCC gePuppet_Destroy(gePuppet **P);
\par 
\par geBoolean GENESISCC gePuppet_RenderThroughFrustum(const gePuppet *P, 
\par \tab \tab \tab \tab \tab const gePose *Joints, 
\par \tab \tab \tab \tab \tab const geExtBox *Box, 
\par \tab \tab \tab \tab \tab geEngine *Engine, 
\par \tab \tab \tab \tab \tab geWorld *World,
\par \tab \tab \tab \tab \tab const geCamera *Camera, 
\par \tab \tab \tab \tab \tab Frustum_Info *FInfo);
\par 
\par geBoolean GENESISCC gePuppet_Render(const gePuppet *P,
\par \tab \tab \tab \tab \tab const gePose *Joints,
\par \tab \tab \tab \tab \tab geEngine *Engine, 
\par \tab \tab \tab \tab \tab geWorld *World,
\par \tab \tab \tab \tab \tab const geCamera *Camera, 
\par \tab \tab \tab \tab \tab geExtBox *Box);
\par 
\par int GENESISCC gePuppet_GetMaterialCount( gePuppet *P );
\par geBoolean GENESISCC gePuppet_GetMaterial( gePuppet *P, int MaterialIndex,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap **Bitmap, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat *Red, geFloat *Green, geFloat *Blue);
\par geBoolean GENESISCC gePuppet_SetMaterial(gePuppet *P, int MaterialIndex, geBitmap *Bitmap, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geFloat Red, geFloat Green, geFloat Blue);
\par 
\par void GENESISCC gePuppet_SetShadow(gePuppet *P, geBoolean DoShadow, geFloat Scale, 
\par \tab \tab \tab \tab \tab \tab const geBitmap *ShadowMap,int BoneIndex);
\par 
\par void GENESISCC gePuppet_GetLightingOptions(const gePuppet *P,
\par \tab geBoolean *UseFillLight,
\par \tab geVec3d *FillLightNormal,
\par \tab geFloat *FillLightRed,\tab \tab \tab \tab 
\par \tab geFloat *FillLightGreen,\tab \tab \tab \tab 
\par \tab geFloat *FillLightBlue,\tab \tab \tab \tab 
\par \tab geFloat *AmbientLightRed,\tab \tab \tab 
\par \tab geFloat *AmbientLightGreen,\tab \tab \tab 
\par \tab geFloat *AmbientLightBlue,\tab \tab \tab 
\par \tab geBoolean *UseAmbientLightFromFloor,
\par \tab int *MaximumDynamicLightsToUse,\tab \tab 
\par \tab int *LightReferenceBoneIndex,
\par \tab geBoolean *PerBoneLighting
\par \tab );
\par 
\par void GENESISCC gePuppet_SetLightingOptions(gePuppet *P,
\par \tab geBoolean UseFillLight,
\par \tab const geVec3d *FillLightNormal,
\par \tab geFloat FillLightRed,\tab \tab \tab \tab // 0 .. 255
\par \tab geFloat FillLightGreen,\tab \tab \tab \tab // 0 .. 255
\par \tab geFloat FillLightBlue,\tab \tab \tab \tab // 0 .. 255
\par \tab geFloat AmbientLightRed,\tab \tab \tab // 0 .. 255
\par \tab geFloat AmbientLightGreen,\tab \tab \tab // 0 .. 255
\par \tab geFloat AmbientLightBlue,\tab \tab \tab // 0 .. 255
\par \tab geBoolean AmbientLightFromFloor,
\par \tab int MaximumDynamicLightsToUse,\tab \tab // 0 for none
\par \tab int LightReferenceBoneIndex,
\par \tab int PerBoneLighting);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069961}QKFrame.h{\*\bkmkend _Toc454069961}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  QKFRAME.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Quaternion keyframe interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par /* geQKFrame   (geQuaternion - Keyframe)
\par \tab This module handles interpolation for keyframes that contain a quaternion
\par \tab This is intended to support Path.c
\par \tab geTKArray supplies general support for a time-keyed array, and this supplements
\par \tab that support to include the specific time-keyed arrays:
\par \tab   An array of geQuaternion interpolated linearly
\par \tab   An array of geQuaternion with spherical linear interpolation (SLERP)
\par \tab   An array of geQuaternion with spherical quadrangle 
\par \tab \tab interpolation (SQUAD) as defined by:
\par \tab     Advanced Animation and Rendering Techniques by Alan Watt and Mark Watt
\par 
\par \tab These are phycially separated and have different base structures because
\par \tab the different interpolation techniques requre different additional data.
\par \tab 
\par \tab The two lists are created with different creation calls,
\par \tab interpolated with different calls, but insertion and queries share a call.
\par \tab 
\par \tab Quadrangle interpolation requires additional computation after changes are
\par \tab made to the keyframe list.  Call geQKFrame_SquadRecompute() to update the
\par \tab calculations.
\par */
\par #ifndef GE_QKFRAME_H
\par #define GE_QKFRAME_H
\par 
\par 
\par #include "TKArray.h"
\par #include "Quatern.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum
\par \{
\par \tab QKFRAME_LINEAR,
\par \tab QKFRAME_SLERP,
\par \tab QKFRAME_SQUAD
\par \} geQKFrame_InterpolationType;
\par 
\par 
\par geTKArray *GENESISCC geQKFrame_LinearCreate(void);
\par \tab // creates a frame list for linear interpolation
\par 
\par geTKArray *GENESISCC geQKFrame_SlerpCreate();
\par \tab // creates a frame list for spherical linear interpolation\tab 
\par 
\par geTKArray *GENESISCC geQKFrame_SquadCreate();
\par \tab // creates a frame list for spherical linear interpolation\tab 
\par 
\par 
\par geBoolean GENESISCC geQKFrame_Insert(
\par \tab geTKArray **KeyList,\tab \tab \tab // keyframe list to insert into
\par \tab geTKArray_TimeType Time,\tab \tab // time of new keyframe
\par \tab const geQuaternion *Q,\tab \tab \tab // quaternion at new keyframe
\par \tab int *Index);\tab \tab \tab \tab \tab // index of new frame
\par \tab // inserts a new keyframe with the given time and vector into the list.
\par 
\par void GENESISCC geQKFrame_Query(
\par \tab const geTKArray *KeyList,\tab \tab // keyframe list
\par \tab int Index,\tab \tab \tab \tab \tab \tab // index of frame to return
\par \tab geTKArray_TimeType *Time,\tab \tab // time of the frame is returned
\par \tab geQuaternion *V);\tab \tab \tab \tab \tab // vector from the frame is returned
\par \tab // returns the vector and the time at keyframe[index] 
\par 
\par void GENESISCC geQKFrame_Modify(
\par \tab geTKArray *KeyList,\tab \tab \tab \tab // keyframe list
\par \tab int Index,\tab \tab \tab \tab \tab \tab // index of frame to change
\par \tab const geQuaternion *Q);\tab \tab \tab // vector for the new key
\par \tab // modifies a vector at keyframe[index]
\par 
\par void GENESISCC geQKFrame_LinearInterpolation(
\par \tab const void *KF1,\tab \tab // pointer to first keyframe
\par \tab const void *KF2,\tab \tab // pointer to second keyframe
\par \tab geFloat T,\tab \tab \tab \tab // 0 <= T <= 1   blending parameter
\par \tab void *Result);\tab \tab \tab // put the result in here (geQuaternion)
\par \tab \tab // interpolates to get a vector between the two vectors at the two
\par \tab \tab // keyframes where T==0 returns the vector for KF1 
\par \tab \tab // and T==1 returns the vector for KF2
\par \tab \tab // interpolates linearly
\par \tab 
\par void GENESISCC geQKFrame_SlerpInterpolation(
\par \tab const void *KF1,\tab \tab // pointer to first keyframe
\par \tab const void *KF2,\tab \tab // pointer to second keyframe
\par \tab geFloat T,\tab \tab \tab \tab // 0 <= T <= 1   blending parameter
\par \tab void *Result);\tab \tab \tab // put the result in here (geQuaternion)
\par \tab \tab // interpolates to get a vector between the two vectors at the two
\par \tab \tab // keyframes where T==0 returns the vector for KF1 
\par \tab \tab // and T==1 returns the vector for KF2
\par \tab \tab // interpolates using spherical linear blending
\par 
\par void GENESISCC geQKFrame_SquadInterpolation(
\par \tab const void *KF1,\tab \tab // pointer to first keyframe
\par \tab const void *KF2,\tab \tab // pointer to second keyframe
\par \tab geFloat T,\tab \tab \tab \tab // 0 <= T <= 1   blending parameter
\par \tab void *Result);\tab \tab \tab // put the result in here (geQuaternion)
\par \tab \tab // interpolates to get a vector between the two vectors at the two
\par \tab \tab // keyframes where T==0 returns the vector for KF1 
\par \tab \tab // and T==1 returns the vector for KF2
\par \tab \tab // interpolates using spherical quadratic blending
\par 
\par void GENESISCC geQKFrame_SquadRecompute(
\par \tab int Looped,\tab \tab \tab \tab // if keylist has the first key connected to last key
\par \tab geTKArray *KeyList);
\par \tab // rebuild precomputed data for keyframe list.
\par 
\par void GENESISCC geQKFrame_SlerpRecompute(
\par \tab geTKArray *KeyList);\tab \tab // list of keys to recompute hermite values for
\par \tab // rebuild precomputed data for keyframe list.
\par 
\par 
\par geBoolean GENESISCC geQKFrame_LinearRead(geVFile* pFile, void* geQKFrame);
\par geBoolean GENESISCC geQKFrame_SlerpRead(geVFile* pFile, void* geQKFrame);
\par geBoolean GENESISCC geQKFrame_SquadRead(geVFile* pFile, void* geQKFrame);
\par 
\par geBoolean GENESISCC geQKFrame_WriteToFile(geVFile *pFile, void *geQKFrame, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geQKFrame_InterpolationType InterpolationType, int Looping);
\par geTKArray *GENESISCC geQKFrame_CreateFromFile(geVFile *pFile, geQKFrame_InterpolationType *InterpolationType, int *Looping);
\par geTKArray *GENESISCC geQKFrame_CreateFromBinaryFile(geVFile *pFile, int *InterpolationType, int *Looping);
\par geBoolean GENESISCC geQKFrame_WriteToBinaryFile(geVFile *pFile, geTKArray *KeyList, 
\par \tab \tab geQKFrame_InterpolationType InterpolationType, int Looping);
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069962}strblock.h{\*\bkmkend _Toc454069962}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  STRBLOCK.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: String block interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par // geStrBlock
\par #ifndef GE_STRBLOCK_H
\par #define GE_STRBLOCK_H
\par 
\par #include "basetype.h"\tab // geBoolean
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct geStrBlock geStrBlock;
\par 
\par geStrBlock *GENESISCC geStrBlock_Create(void);
\par void GENESISCC geStrBlock_Destroy(geStrBlock **SB);
\par 
\par geBoolean GENESISCC geStrBlock_Append(geStrBlock **ppSB,const char *String);
\par 
\par void GENESISCC geStrBlock_Delete(geStrBlock **ppSB,int Nth);
\par 
\par const char *GENESISCC geStrBlock_GetString(const geStrBlock *SB, int Index);
\par 
\par // untested...
\par //geBoolean GENESISCC geStrBlock_SetString(geStrBlock **ppSB, int Index, const char *String);
\par //geBoolean GENESISCC geStrBlock_Insert(geStrBlock **ppSB,int InsertAfterIndex,const char *String);
\par 
\par geBoolean GENESISCC geStrBlock_FindString(const geStrBlock* pSB, const char* String, int* pIndex);
\par 
\par int GENESISCC geStrBlock_GetCount(const geStrBlock *SB);
\par int GENESISCC geStrBlock_GetChecksum(const geStrBlock *SB);
\par 
\par geStrBlock* GENESISCC geStrBlock_CreateFromFile(geVFile* pFile);
\par geBoolean GENESISCC geStrBlock_WriteToFile(const geStrBlock *SB, geVFile *pFile);
\par geBoolean GENESISCC geStrBlock_WriteToBinaryFile(const geStrBlock *SB,geVFile *pFile);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069963}tkarray.h{\*\bkmkend _Toc454069963}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  TKARRAY.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Time-keyed array interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_TKARRAY_H
\par #define GE_TKARRAY_H
\par /* TKArray
\par \tab (Time-Keyed-Array)
\par \tab This module is designed primarily to support path.c
\par 
\par \tab The idea is that there are these packed arrays of elements,
\par \tab sorted by a geTKArray_TimeType key.  The key is assumed to be the 
\par \tab first field in each element.
\par 
\par \tab the TKArray functions operate on this very specific array type.
\par 
\par \tab Error conditions are reported to errorlog
\par */
\par 
\par #include "basetype.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef geFloat geTKArray_TimeType;
\par 
\par #define GE_TKA_TIME_TOLERANCE (0.00001f)
\par 
\par typedef struct geTKArray geTKArray;
\par 
\par geTKArray *GENESISCC geTKArray_Create(int ElementSize);
\par \tab // creates new array with given attributes
\par 
\par geTKArray *GENESISCC geTKArray_CreateEmpty(int ElementSize,int ElementCount);
\par \tab // creates new array with given element size and given count of uninitialized members
\par 
\par geTKArray* GENESISCC geTKArray_CreateFromBinaryFile(
\par \tab geVFile* pFile);\tab \tab \tab \tab \tab // stream positioned at array data
\par \tab // Creates a new array from the given stream.
\par 
\par geBoolean GENESISCC geTKArray_WriteToBinaryFile(
\par \tab const geTKArray* Array,\tab \tab \tab // sorted array to write
\par \tab geVFile* pFile);\tab \tab \tab \tab \tab // stream positioned for writing
\par \tab // Writes the array to the given stream.
\par 
\par 
\par int GENESISCC geTKArray_BSearch(
\par \tab const geTKArray *Array,\tab \tab \tab // sorted array to search
\par \tab geTKArray_TimeType Key);\tab \tab // searching for this time
\par \tab // Searches for key in the Array. (assumes array is sorted) 
\par \tab // if key is found (within +-tolerance), the index to that element is returned.
\par \tab // if key is not found, the index to the key just smaller than the 
\par \tab // given key is returned.  (-1 if the key is smaller than the first element)
\par \tab // search is only accurate to 2*TKA_TIME_TOLERANCE.  
\par \tab // if multiple keys exist within 2*TKA_TIME_TOLERANCE, this will find an arbitrary one of them.
\par 
\par geBoolean GENESISCC geTKArray_Insert(
\par \tab geTKArray **Array,
\par \tab geTKArray_TimeType Key,\tab \tab \tab // time to insert
\par \tab int *Index);\tab \tab \tab \tab \tab // new element index
\par \tab // inserts a new element into Array.
\par \tab // sets only the key for the new element - the rest is junk
\par \tab // returns TRUE if the insertion was successful.
\par \tab // returns FALSE if the insertion failed. 
\par \tab // if Array is empty (no elements, NULL pointer) it is allocated and filled 
\par \tab // with the one Key element
\par \tab // Index is the index of the new element 
\par 
\par geBoolean GENESISCC geTKArray_DeleteElement(
\par \tab geTKArray **Array,
\par \tab int N);\tab \tab \tab \tab \tab \tab \tab // element to delete
\par \tab // deletes an element from Array.
\par \tab // returns TRUE if the deletion was successful. 
\par \tab // returns FALSE if the deletion failed. (key not found or realloc failed)
\par 
\par void GENESISCC geTKArray_Destroy(
\par \tab geTKArray **Array);\tab 
\par \tab // destroys array
\par 
\par void *GENESISCC geTKArray_Element(
\par \tab const geTKArray *Array,
\par \tab int N);
\par \tab // returns a pointer to the Nth element of the array.
\par 
\par int GENESISCC geTKArray_NumElements(
\par \tab const geTKArray *Array);
\par \tab // returns the number of elements in the array
\par 
\par geTKArray_TimeType GENESISCC geTKArray_ElementTime(
\par \tab const geTKArray *Array, 
\par \tab int N);
\par \tab // returns the Time associated with the Nth element of the array
\par 
\par int GENESISCC geTKArray_ElementSize(
\par \tab const geTKArray *A);
\par \tab // returns the size of each element in the array
\par 
\par geBoolean GENESISCC geTKArray_SamplesAreTimeLinear(const geTKArray *Array,geFloat Tolerance);
\par \tab // returns true if the samples are linear in time within a tolerance
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069964}tkevents.h{\*\bkmkend _Toc454069964}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  TKARRAY.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Stephen Balkum\tab                                                             */
\par /*  Description: Time-keyed events interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_TKEVENTS_H
\par #define GE_TKEVENTS_H
\par /* TKEvents
\par \tab (Time-Keyed-Events)
\par \tab This module is designed primarily to support motion.c
\par 
\par \tab geTKEvents is a sorted array of times with an identifying descriptor.
\par \tab The descriptors are stored as strings in a separate, packed buffer.
\par 
\par \tab Error conditions are reported to errorlog
\par */
\par 
\par #include "basetype.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct geTKEvents geTKEvents;
\par typedef geFloat geTKEvents_TimeType;
\par 
\par geTKEvents* GENESISCC geTKEvents_Create(void);
\par \tab // Creates a new event array.
\par 
\par void GENESISCC geTKEvents_Destroy(geTKEvents** pEvents);
\par \tab // Destroys array.
\par 
\par geBoolean GENESISCC geTKEvents_Insert(geTKEvents* pEvents, geTKEvents_TimeType tKey, const char* pEventData);
\par \tab // Inserts the new key and corresponding data.
\par 
\par geBoolean GENESISCC geTKEvents_Delete(geTKEvents* pEvents, geTKEvents_TimeType tKey);
\par \tab // Deletes the key 
\par 
\par geTKEvents* GENESISCC geTKEvents_CreateFromFile(
\par \tab geVFile* pFile);\tab \tab \tab \tab \tab // stream positioned at array data
\par \tab // Creates a new array from the given stream.
\par 
\par geBoolean GENESISCC geTKEvents_WriteToFile(
\par \tab const geTKEvents* pEvents,\tab \tab // sorted array to write
\par \tab geVFile* pFile);\tab \tab \tab \tab \tab // stream positioned for writing
\par \tab // Writes the array to the given stream.
\par 
\par geBoolean GENESISCC geTKEvents_WriteToBinaryFile(
\par \tab const geTKEvents* pEvents,\tab \tab // sorted array to write (in binary format)
\par \tab geVFile* pFile);\tab \tab \tab \tab \tab // stream positioned for writing
\par \tab // Writes the array to the given stream.
\par //---------------------------------------------------------------------------
\par // Event Iteration
\par 
\par void GENESISCC geTKEvents_SetupIterator(
\par \tab geTKEvents* pEvents,\tab \tab \tab \tab // Event list to iterate
\par \tab geTKEvents_TimeType StartTime,\tab \tab \tab \tab // Inclusive search start
\par \tab geTKEvents_TimeType EndTime);\tab \tab \tab \tab // Non-inclusive search stop
\par \tab // For searching or querying the array for events between two times
\par \tab // times are compaired [StartTime,EndTime), '[' is inclusive, ')' is 
\par \tab // non-inclusive.  This prepares the PathGetNextEvent() function.
\par 
\par geBoolean GENESISCC geTKEvents_GetNextEvent(
\par \tab geTKEvents* pEvents,\tab \tab \tab \tab // Event list to iterate
\par \tab geTKEvents_TimeType *pTime,\tab \tab \tab \tab // Return time, if found
\par \tab const char **ppEventString);\tab // Return data, if found
\par \tab // Iterates from StartTime to EndTime as setup in geTKEvents_CreateIterator()
\par \tab // and for each event between these times [StartTime,EndTime)
\par \tab // this function will return Time and EventString returned for that event
\par \tab // and the iterator will be positioned for the next search.  When there 
\par \tab // are no more events in the range, this function will return GE_FALSE (Time
\par \tab // will be 0 and ppEventString will be empty).
\par 
\par GENESISAPI geBoolean GENESISCC geTKEvents_GetExtents(
\par \tab \tab geTKEvents *Events,
\par \tab \tab geTKEvents_TimeType *FirstEventTime,\tab // time of first event
\par \tab \tab geTKEvents_TimeType *LastEventTime);\tab // time of last event
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par 
\par #endif // __TKEVENTS_H__
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069965}vkframe.h{\*\bkmkend _Toc454069965}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  VKFRAME.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Vector keyframe interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par /* VKFrame (Vector-Keyframe)
\par \tab This module handles interpolation for keyframes that contain a vector (a geVec3d)
\par \tab This is intended to support Path.c
\par \tab geTKArray supplies general support for a time-keyed array, and this supplements
\par \tab that support to include the two specific time-keyed arrays:
\par \tab   An array of geVec3d interpolated linearly
\par \tab   An array of geVec3d interpolated with hermite blending
\par \tab These are phycially separated and have different base structures because:
\par \tab \tab linear blending requires less data.
\par \tab \tab future blending might require more data.
\par \tab The two types of lists are created with different creation calls,
\par \tab interpolated with different calls, but insertion and queries share a call.
\par 
\par \tab Hermite interpolation requires additional computation after changes are
\par \tab made to the keyframe list.  Call geVKFrame_HermiteRecompute() to update the
\par \tab calculations.
\par */
\par #ifndef GE_VKFRAME_H
\par #define GE_VKFRAME_H
\par 
\par #include "TKArray.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum
\par \{
\par \tab VKFRAME_LINEAR,
\par \tab VKFRAME_HERMITE,
\par \tab VKFRAME_HERMITE_ZERO_DERIV,
\par \} geVKFrame_InterpolationType;
\par 
\par 
\par geTKArray *GENESISCC geVKFrame_LinearCreate(void);
\par \tab // creates a frame list for linear interpolation
\par 
\par geTKArray *GENESISCC geVKFrame_HermiteCreate(void);
\par \tab // creates a frame list for hermite interpolation
\par 
\par 
\par geBoolean GENESISCC geVKFrame_Insert(
\par \tab geTKArray **KeyList,\tab \tab \tab // keyframe list to insert into
\par \tab geTKArray_TimeType Time,\tab \tab // time of new keyframe
\par \tab const geVec3d *V,\tab \tab \tab \tab // vector at new keyframe
\par \tab int *Index);\tab \tab \tab \tab \tab // indx of new key
\par \tab // inserts a new keyframe with the given time and vector into the list.
\par 
\par void GENESISCC geVKFrame_Query(
\par \tab const geTKArray *KeyList,\tab \tab // keyframe list
\par \tab int Index,\tab \tab \tab \tab \tab \tab // index of frame to return
\par \tab geTKArray_TimeType *Time,\tab \tab // time of the frame is returned
\par \tab geVec3d *V);\tab \tab \tab \tab \tab \tab // vector from the frame is returned
\par \tab // returns the vector and the time at keyframe[index] 
\par 
\par void GENESISCC geVKFrame_Modify(
\par \tab geTKArray *KeyList,\tab \tab \tab \tab // keyframe list
\par \tab int Index,\tab \tab \tab \tab \tab \tab // index of frame to change
\par \tab const geVec3d *V);\tab \tab \tab \tab // vector for the key
\par \tab // chganes the vector at keyframe[index] 
\par 
\par void GENESISCC geVKFrame_LinearInterpolation(
\par \tab const void *KF1,\tab \tab // pointer to first keyframe
\par \tab const void *KF2,\tab \tab // pointer to second keyframe
\par \tab geFloat T,\tab \tab \tab \tab // 0 <= T <= 1   blending parameter
\par \tab void *Result);\tab \tab \tab // put the result in here (geVec3d)
\par \tab \tab // interpolates to get a vector between the two vectors at the two
\par \tab \tab // keyframes where T==0 returns the vector for KF1 
\par \tab \tab // and T==1 returns the vector for KF2
\par \tab \tab // interpolates linearly
\par 
\par void GENESISCC geVKFrame_HermiteInterpolation(
\par \tab const void *KF1,\tab \tab // pointer to first keyframe
\par \tab const void *KF2,\tab \tab // pointer to second keyframe
\par \tab geFloat T,\tab \tab \tab \tab // 0 <= T <= 1   blending parameter
\par \tab void *Result);\tab \tab \tab // put the result in here (geVec3d)
\par \tab \tab // interpolates to get a vector between the two vectors at the two
\par \tab \tab // keyframes where T==0 returns the vector for KF1 
\par \tab \tab // and T==1 returns the vector for KF2
\par \tab \tab // interpolates using 'hermite' blending
\par 
\par 
\par void GENESISCC geVKFrame_HermiteRecompute(
\par \tab int Looped,\tab \tab \tab \tab \tab // if keylist has the first key connected to last key
\par \tab geBoolean ZeroDerivative,\tab // if each key should have a zero derivatives (good for 2 point S curves)
\par \tab geTKArray *KeyList);\tab \tab // list of keys to recompute hermite values for
\par \tab // rebuild precomputed data for keyframe list.
\par 
\par 
\par geBoolean GENESISCC geVKFrame_LinearRead(geVFile* pFile, void* geVKFrame);
\par geBoolean GENESISCC geVKFrame_HermiteRead(geVFile* pFile, void* geVKFrame);
\par 
\par geBoolean GENESISCC geVKFrame_WriteToFile(geVFile *pFile, void *geVKFrame, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVKFrame_InterpolationType InterpolationType,int Looping);
\par geTKArray *GENESISCC geVKFrame_CreateFromFile(geVFile *pFile, geVKFrame_InterpolationType *InterpolationType, int *Looping);
\par geBoolean GENESISCC geVKFrame_WriteToBinaryFile(geVFile *pFile, void *geVKFrame, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVKFrame_InterpolationType InterpolationType, int Looping);
\par geTKArray *GENESISCC geVKFrame_CreateFromBinaryFile(geVFile *pFile, geVKFrame_InterpolationType *InterpolationType, int *Looping);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069966}xfarray.h{\*\bkmkend _Toc454069966}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  XFARRAY.H\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description: Array of transforms interface.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_XFARRAY_H
\par #define GE_XFARRAY_H
\par 
\par /* This is a simple object to formalize an array of transforms (geXForm3d)
\par 
\par    Unfortunately, it's not a very safe object.
\par 
\par    This object exports data (allows external access to one of it's data members)
\par    This is dangerous - no checking can be done on the use of that data, and no
\par    checking can be done on array boundry conditions.  This is on purpose.
\par    
\par    ...In the name of optimal access to the array.
\par */
\par 
\par #include "xform3d.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct geXFArray geXFArray;
\par 
\par \tab // Create the object.  Creates an array of Size elements.  
\par \tab // All elements are initialized to the identity transform
\par geXFArray *GENESISCC geXFArray_Create(int Size);
\par 
\par \tab // Destroy the object.  Don't use the pointer returned by _GetElements
\par \tab // after destroying the ojbect!
\par void GENESISCC geXFArray_Destroy( geXFArray **XFA );
\par 
\par \tab // Get a pointer to the array.  For external iteration.  The size of the 
\par \tab // array is returned in Size.  Valid array indicies are (0..Size-1)
\par geXForm3d *GENESISCC geXFArray_GetElements(const geXFArray *XFA, int *Size);
\par 
\par \tab // Sets every transform in the array to the given transform.
\par void GENESISCC geXFArray_SetAll(geXFArray *XFA, const geXForm3d *Matrix);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454069967}OpenSource/Source/Bitmap Subdirectory{\*\bkmkend _Toc454069967}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The routines in this subdirectory handle bitmap graphics and apply textures to walls and objects.
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef GE_BITMAP____H
\par #define GE_BITMAP____H
\par 
\par /****************************************************************************************/
\par /*  Bitmap.__h                                                                          */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Bitmap*.c Internal Header (contains the Bitmap Struct)                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "bitmap.h"
\par #include "bitmap._h"
\par 
\par // Hey ! 
\par // this is bitmap.__h : for inclusion by bitmap friends ONLY!
\par //\tab included by bitmap.c , bitmap_blitdata.c
\par 
\par /*\}\{ *********** the bitmap type *******************/
\par 
\par // the Version Major indicates an incompatibility
\par 
\par #define GEBM_VERSION_MAJOR\tab \tab (0x0004)
\par #define GEBM_VERSION_MINOR\tab \tab (0x0000)
\par 
\par #define\tab MAXMIPLEVELS\tab \tab \tab (8)
\par 
\par #define PALETTE_FORMAT_DEFAULT\tab (GE_PIXELFORMAT_24BIT_RGB)
\par 
\par #define ALPHA_TO_TRANSPARENCY_THRESHOLD\tab \tab (80)
\par 
\par struct geBitmap_Palette
\par \{
\par \tab int\tab \tab \tab \tab LockCount,RefCount;
\par \tab gePixelFormat\tab Format;
\par \tab int\tab \tab \tab \tab Size;
\par \tab geBoolean\tab \tab HasColorKey;
\par \tab uint32\tab \tab \tab ColorKey;\tab \tab // the color which is the colorkey
\par \tab int\tab \tab \tab \tab ColorKeyIndex;\tab // the palette index which is the color;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // Bitmap->CK == Bitmap->Pal->CK_Index
\par 
\par \tab // we have EITHER Data or DriverHandle
\par \tab void\tab \tab \tab *Data;\tab \tab //Size * BytesPerPixel(Format)
\par \tab DRV_Driver\tab \tab *Driver;
\par \tab geRDriver_THandle*DriverHandle;
\par \tab void\tab \tab \tab *DriverBits;\tab //only non-null inside a Lock/UnLock
\par \};
\par 
\par struct geBitmap
\par \{
\par \tab int \tab \tab \tab \tab RefCount;
\par \tab geBitmap_Info\tab \tab Info;
\par \tab void *\tab \tab \tab \tab Data[MAXMIPLEVELS];
\par \tab geBoolean\tab \tab \tab Modified[MAXMIPLEVELS];
\par \tab \tab \tab \tab \tab \tab \tab // modified tells whether a mip != a scaledown of mip 0
\par \tab \tab \tab \tab \tab \tab \tab // modified[0] is ignored
\par \tab geBitmap *\tab \tab \tab Alpha;
\par 
\par \tab int\tab \tab \tab \tab \tab LockCount;\tab // -Nmips for 'write' , > 0 for 'read's
\par \tab geBitmap *\tab \tab \tab LockOwner;\tab // this points to our owner and doubles as boolean 'islocked'
\par \tab geBitmap *\tab \tab \tab DataOwner;\tab // if this is set, then my Data is not mine to free
\par 
\par \tab gePixelFormat\tab \tab PreferredFormat;\tab // user's favorite
\par \tab int\tab \tab \tab \tab \tab SeekMipCount;\tab \tab // when we attach to driver, ask for this many mips
\par 
\par \tab \tab // must support any number of locks for read
\par \tab \tab // a lock for read can be a pointer to my raw bits, or a whole different bitmap
\par 
\par \tab geBitmap_Info\tab \tab DriverInfo;\tab \tab \tab // all the driver mess..
\par \tab uint32\tab \tab \tab \tab DriverFlags;
\par \tab DRV_Driver *\tab \tab Driver;
\par \tab geRDriver_THandle *\tab DriverHandle;
\par \tab int\tab \tab \tab \tab \tab DriverMipLock;\tab \tab // which mip to lock on GetBits
\par \tab geBoolean\tab \tab \tab DriverBitsLocked;
\par \tab geBoolean\tab \tab \tab DriverDataChanged;\tab // relative to system copy
\par \tab geFloat\tab \tab \tab \tab DriverGamma;
\par \tab geFloat\tab \tab \tab \tab DriverGammaLast;
\par \tab geBoolean\tab \tab \tab DriverGammaSet;
\par \};
\par 
\par 
\par /*\}\{ ************* internal protos *****************/
\par 
\par //geBitmap * geBitmap_CreateXerox(geBitmap *BmpSrc);
\par 
\par geBoolean geBitmap_IsValid(const geBitmap *Bmp);
\par geBoolean geBitmap_Info_IsValid(const geBitmap_Info *Info);
\par geBoolean geBitmap_Palette_IsValid(const geBitmap_Palette *Pal);
\par 
\par geBoolean geBitmap_BlitMipRect(const geBitmap * Src, int SrcMip, int SrcX,int SrcY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab  geBitmap * Dst, int DstMip, int DstX,int DstY,
\par \tab \tab \tab \tab \tab \tab \tab int SizeX,int SizeY);
\par 
\par geBitmap * geBitmap_CreateLock_CopyInfo(geBitmap *BmpSrc,int LockCnt,int mip);
\par geBitmap * geBitmap_CreateLockFromMip(geBitmap *Src,int mip,
\par \tab gePixelFormat Format,geBoolean HasColorKey,uint32 ColorKey,int LockCnt);
\par geBitmap * geBitmap_CreateLockFromMipSystem(geBitmap *Src,int mip,int LockCnt);
\par geBitmap * geBitmap_CreateLockFromMipOnDriver(geBitmap *Src,int mip,int LockCnt);
\par 
\par geBoolean geBitmap_UnLock_NoChange(geBitmap *Bmp);
\par geBoolean geBitmap_UnLockArray_NoChange(geBitmap **Locks,int Size);
\par 
\par geBoolean geBitmap_Update_SystemToDriver(geBitmap *Bmp);
\par geBoolean geBitmap_Update_DriverToSystem(geBitmap *Bmp);
\par 
\par geBoolean geBitmap_MakeSystemMips(geBitmap *Bmp,int low,int high);
\par geBoolean geBitmap_UpdateMips_Data(\tab geBitmap_Info * FmInfo,void * FmBits,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap_Info * ToInfo,void * ToBits);
\par geBoolean geBitmap_UpdateMips_System(geBitmap *Bmp,int fm,int to);
\par 
\par geBoolean geBitmap_UsesColorKey(const geBitmap * Bmp);
\par 
\par void\tab   geBitmap_MakeMipInfo(  geBitmap_Info *Src,int mip,geBitmap_Info *Into);
\par geBoolean geBitmap_MakeDriverLockInfo(geBitmap *Bmp,int mip,geBitmap_Info *Into);
\par \tab \tab \tab \tab \tab // MakeDriverLockInfo also doesn't full out the full info, so it must be a valid info first!
\par \tab \tab \tab \tab \tab // Bmp also gets some crap written into him.
\par 
\par geBoolean geBitmap_AllocSystemMip(geBitmap *Bmp,int mip);
\par geBoolean geBitmap_AllocPalette(geBitmap *Bmp,gePixelFormat Format,DRV_Driver * Driver);
\par 
\par geBoolean geBitmap_ReadInfo( geBitmap *Bmp,geVFile * F);
\par geBoolean geBitmap_WriteInfo(const geBitmap *Bmp,geVFile * F);
\par 
\par geBoolean geBitmap_FixDriverFlags(uint32 *pFlags);
\par 
\par /*\}\{ ************* end *****************/
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069968}bitmap._h{\*\bkmkend _Toc454069968}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef BITMAP_PRIVATE_H
\par #define BITMAP_PRIVATE_H
\par 
\par /****************************************************************************************/
\par /*  Bitmap._h                                                                           */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Engine-Internal Bitmap Functions                                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par 
\par #include\tab "bitmap.h"
\par #include\tab "dcommon.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /***
\par **
\par *
\par * These functions are intended for internal Genesis use only.
\par *
\par * This can become public once Driver is exposed/formalized. !@@!
\par *
\par * Only engine.c , and maybe world & bitmaplist should include this !
\par *
\par * You MUST DetachDriver from a bitmap, before you change the Driver
\par *
\par **
\par  **/
\par 
\par #define BITMAP_GENESIS_INTERNAL\tab GENESISCC
\par 
\par geBoolean\tab \tab \tab GENESISCC geBitmap_AttachToDriver(geBitmap *Bmp, DRV_Driver * Driver, uint32 DriverFlags);
\par \tab // use Driverflags == 0 to use the flags from _SetDriverFlags
\par 
\par geBoolean\tab \tab \tab GENESISCC geBitmap_DetachDriver(geBitmap *Bmp, geBoolean DoUpdate);
\par \tab // You MUST Detach the Driver while it is identical to the way it was when attached!
\par 
\par geBitmap_Palette *\tab GENESISCC geBitmap_Palette_CreateFromDriver(DRV_Driver * Driver,gePixelFormat Format,int Size); /*<>*/
\par 
\par geRDriver_THandle * GENESISCC geBitmap_GetTHandle(const geBitmap *Bmp);
\par 
\par geBoolean\tab \tab \tab GENESISCC geBitmap_SetDriverFlags(geBitmap *Bmp,uint32 flags);
\par 
\par geBoolean\tab \tab \tab GENESISCC geBitmap_SetGammaCorrection_DontChange(geBitmap *Bmp,geFloat Gamma);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif // BITMAP_PRIVATE_H
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069969}bitmap.h{\*\bkmkend _Toc454069969}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef BITMAP_H
\par #define BITMAP_H
\par 
\par /****************************************************************************************/
\par /*  Bitmap.h                                                                            */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Abstract Bitmap system                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par #include "pixelformat.h"
\par #include "vfile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /***********************************************************************************/
\par 
\par typedef struct geBitmap\tab \tab \tab geBitmap;
\par typedef struct geBitmap_Palette\tab geBitmap_Palette;
\par 
\par typedef struct geBitmap_Info
\par \{
\par \tab int\tab \tab \tab \tab \tab \tab Width;
\par \tab int\tab \tab \tab \tab \tab \tab Height;
\par \tab int\tab \tab \tab \tab \tab \tab Stride;\tab \tab // stride is in *pixels* ; it is the step to the next line : Stride >= Width
\par \tab gePixelFormat\tab \tab \tab Format;
\par \tab int\tab \tab \tab \tab \tab \tab MinimumMip;\tab //*including* minimumMip == 0 often
\par \tab int\tab \tab \tab \tab \tab \tab MaximumMip;\tab //*including* maximumMip == nummips-1
\par \tab geBoolean\tab \tab \tab \tab HasColorKey;
\par \tab uint32\tab \tab \tab \tab \tab ColorKey;\tab // meaningless unless HasColorKey ; the ColorKey is a Pixel in Format
\par \tab geBitmap_Palette *\tab \tab Palette;
\par \} geBitmap_Info;
\par 
\par /***********************************************************************************/\tab \tab 
\par // Bitmap methods
\par 
\par // see a big comment at the end of this file
\par 
\par /************************************************************************/
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_Create(int Width, int Height, int MipCount, gePixelFormat Format ); 
\par GENESISAPI void\tab \tab \tab GENESISCC\tab geBitmap_CreateRef(geBitmap *Bmp);
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_CreateFromInfo(const geBitmap_Info * pInfo);
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_CreateFromFile( geVFile *F );
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_CreateFromFileName(const geVFile *BaseFS,const char *Name);
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_WriteToFile( const geBitmap *Bmp, geVFile *F );
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_WriteToFileName(const geBitmap * Bmp,const geVFile *BaseFS,const char *Name);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // BaseFS is not really const if it is a virtual file;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //  it *is* const if it is a dos directory
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_Destroy(geBitmap **Bmp);
\par \tab // returns whether Bmp was actually destroyed : not success/failure
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_GetInfo(const geBitmap *Bmp, geBitmap_Info *Info, geBitmap_Info *SecondaryInfo);
\par \tab //LockForWrite returns data in Info's format
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_Blit(const\tab geBitmap *Src, int SrcPositionX, int SrcPositionY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Dst, int DstPositionX, int DstPositionY,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int SizeX, int SizeY );
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_BlitMip(const geBitmap * Src, int SrcMip, geBitmap * Dst, int DstMip );
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // don't use this with Src == Dst, use UpdateMips instead !
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_BlitBitmap(const geBitmap * Src, geBitmap * Dst);
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_BlitBestMip(const geBitmap * Src, geBitmap * Dst);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // blits the largest mip from Src that fits in Dst
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_LockForRead(\tab \tab // a non-exclusive lock
\par \tab const geBitmap *\tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip,
\par \tab gePixelFormat \tab \tab Format,
\par \tab geBoolean\tab \tab \tab RespectColorKey,
\par \tab uint32\tab \tab \tab \tab ColorKey);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // not really const, stores lock-count, but *data* is const
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // will do a format conversion!
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_LockForReadNative(
\par \tab const geBitmap *\tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // lock for read in a format that gaurantee no conversions
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // then do GetInfo on the locks to see what you have!
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_LockForWrite(\tab // an exclusive lock
\par \tab geBitmap *\tab \tab \tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip);
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_LockForWriteFormat(
\par \tab geBitmap *\tab \tab \tab Bmp,
\par \tab geBitmap **\tab \tab \tab Target,
\par \tab int\tab \tab \tab \tab \tab MinimumMip,
\par \tab int\tab \tab \tab \tab \tab MaximumMip,
\par \tab gePixelFormat \tab \tab Format);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // Format must be one of the two returned in GetInfo !!
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_UnLock(geBitmap *Bmp);\tab // must be done on All locked mips
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_UnLockArray(geBitmap **Locks,int Size);
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetFormat(geBitmap *Bmp, 
\par \tab \tab \tab \tab \tab \tab \tab gePixelFormat NewFormat, 
\par \tab \tab \tab \tab \tab \tab \tab geBoolean RespectColorKey, uint32 ColorKey,
\par \tab \tab \tab \tab \tab \tab \tab const geBitmap_Palette * Palette);
\par \tab // _SetFormat may cause you to lose color information!
\par \tab // SetFormat does a conversion!
\par \tab // if NewFormat is palettized and Palette is NULL, we create a palette for the bitmap!
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetFormatMin(geBitmap *Bmp,gePixelFormat NewFormat);
\par \tab \tab \tab \tab \tab \tab \tab \tab // the Min version keeps colorkey & palette from the old format
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_SetColorKey(geBitmap *Bmp, geBoolean HasColorKey, uint32 ColorKey, geBoolean Smart);
\par \tab // SetColorKey discards old colorkey information!
\par \tab //\tab does not do a conversion (changes the colorkey in the current data
\par \tab // if 'Smart' is on, we don't set HasColorKey to true unless it is actually used!
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_GetAverageColor(const geBitmap *Bmp,int *pR,int *pG,int *pB);
\par \tab // tells you the average color; computes it and caches it out
\par 
\par GENESISAPI geBitmap_Palette * \tab GENESISCC\tab geBitmap_GetPalette(const geBitmap *Bmp);
\par GENESISAPI geBoolean\tab \tab \tab GENESISCC\tab geBitmap_SetPalette(geBitmap *Bmp, const geBitmap_Palette *Palette);
\par \tab // _SetPal tries to _CreateRef your Palette, so no copy occurs & palettes may be shared
\par \tab // you may _Destroy() palette after using it to set (though its bits may not be freed)
\par \tab //\tab (hence Palette is *not* const)
\par \tab // Warning : SetPalette on any mip changes the palette of ALL mips !
\par \tab // see Palette note at _UnLock
\par \tab // _SetPal destroys the bitmap's original palette and refs the new one, 
\par \tab //\tab \tab so if you setpal with the bitmap's palette, there is no net change in ref counts (good!)
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_HasAlpha(const geBitmap * Bmp);
\par \tab // returns true if bitmap has *any* type of alpha
\par 
\par GENESISAPI geBitmap *\tab GENESISCC\tab geBitmap_GetAlpha(const geBitmap *Bmp);
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetAlpha(geBitmap *Bmp, const geBitmap *AlphaBmp);
\par \tab // we Ref the AlphaBmp, so you may destroy it after calling Set()
\par \tab // it may be NULL
\par \tab // there's only one Alpha per bitmap (for the top Mip) right now
\par 
\par GENESISAPI geBoolean\tab GENESISCC\tab geBitmap_SetGammaCorrection(geBitmap *Bmp,geFloat Gamma,geBoolean Apply);
\par \tab // this Gamma does not change the *original* (system/secondary) bits
\par \tab //\tab it only affects the appearance when drawn
\par \tab // note : if you write to the gamma corrected bits, you must gamma correct manually if you
\par \tab //\tab wish to fit in smoothly with the previous data
\par \tab // warning : if you use this function with many different gammas, performance will suffer!
\par \tab //\tab use one global gamma for all bitmaps!  try to let the engine manage gamma for you,
\par \tab //\tab via geEngine_SetGamma !
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_SetPreferredFormat(geBitmap *Bmp,gePixelFormat Format);
\par GENESISAPI gePixelFormat\tab GENESISCC\tab geBitmap_GetPreferredFormat(const geBitmap *Bmp);
\par 
\par GENESISAPI void *\tab \tab GENESISCC\tab geBitmap_GetBits(geBitmap *Bmp);\tab // works only on a Lock()
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_RefreshMips(geBitmap *Bmp);\tab // rebuilds mips; *tries* to be smart & not overwrite manually-fixed mips
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // RefreshMips does *not* build mips that don't exist
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_UpdateMips(geBitmap *Bmp,int SourceMip,int TargetMip);\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // will create the target if it doesn't exist;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // will overwrite manually-fixed mips!
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_SetMipCount(geBitmap *Bmp,int Count);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // creates or destroys to match the new count
\par 
\par GENESISAPI geBoolean \tab GENESISCC\tab geBitmap_ClearMips(geBitmap *Bmp);\tab // Destroy all mips (except the first) !
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // use with care! this is not polite!
\par 
\par // Shortcuts
\par GENESISAPI int\tab \tab \tab GENESISCC\tab geBitmap_Width(const geBitmap *Bitmap);
\par GENESISAPI int\tab \tab \tab GENESISCC\tab geBitmap_Height(const geBitmap *Bitmap);
\par GENESISAPI uint32\tab \tab GENESISCC\tab geBitmap_MipBytes(const geBitmap * Bitmap,int mip);
\par 
\par /**
\par *
\par * if Bitmap is a lock for read, functions that modify it return failure
\par * if Bitmap is a lock for write, functions that modify it attempt to
\par *\tab modify the owner of the lock
\par *
\par * warning : if you lock multiple mips for write, and then modify one of the mips
\par *\tab \tab (such as via SetPalette) it may affect the owner and all sibling mips!
\par *\tab \tab doing different SetPalettes with different palettes on different locked mips 
\par *\tab \tab has undefined behavior!
\par *
\par **/
\par 
\par #ifdef _DEBUG
\par GENESISAPI uint32\tab \tab GENESISCC\tab geBitmap_Debug_GetCount(void);
\par 
\par \tab // assert this is zero before you shutdown !
\par 
\par #endif
\par 
\par /***********************************************************************************/
\par 
\par typedef enum
\par \{
\par \tab GE_BITMAP_STREAMING_ERROR=0,
\par \tab GE_BITMAP_STREAMING_NOT,
\par \tab GE_BITMAP_STREAMING_STARTED,
\par \tab GE_BITMAP_STREAMING_IDLE,
\par \tab GE_BITMAP_STREAMING_CHANGED,
\par \tab GE_BITMAP_STREAMING_DATADONE,
\par \tab GE_BITMAP_STREAMING_DONE,
\par \} geBitmap_StreamingStatus;
\par 
\par GENESISAPI geBitmap_StreamingStatus GENESISCC geBitmap_GetStreamingStatus(const geBitmap *Bmp);
\par 
\par \tab \tab /** on a file which is streaming, the sequence of returns looks like :
\par 
\par \tab \tab \tab GE_BITMAP_STREAMING_IDLE
\par \tab \tab \tab GE_BITMAP_STREAMING_CHANGED
\par \tab \tab \tab GE_BITMAP_STREAMING_IDLE
\par \tab \tab \tab GE_BITMAP_STREAMING_IDLE
\par \tab \tab \tab GE_BITMAP_STREAMING_CHANGED
\par \tab \tab \tab ...
\par \tab \tab \tab GE_BITMAP_STREAMING_DONE
\par \tab \tab \tab GE_BITMAP_STREAMING_NOT
\par \tab \tab \tab GE_BITMAP_STREAMING_NOT
\par \tab \tab \tab GE_BITMAP_STREAMING_NOT
\par \tab \tab \tab ...
\par 
\par \tab \tab Status >= GE_BITMAP_STREAMING_STARTED means streaming has started & is in progress
\par 
\par \tab \tab the user should never see _STARTED or _DATADONE
\par 
\par \tab \tab ***/
\par 
\par /***********************************************************************************/
\par 
\par // palette methods :
\par 
\par GENESISAPI geBitmap_Palette * \tab GENESISCC\tab geBitmap_Palette_Create(gePixelFormat Format,int Size);
\par 
\par GENESISAPI geBitmap_Palette * \tab GENESISCC\tab geBitmap_Palette_CreateCopy(const geBitmap_Palette *Palette);
\par 
\par GENESISAPI geBitmap_Palette *\tab GENESISCC\tab geBitmap_Palette_CreateFromFile(geVFile *F);
\par 
\par GENESISAPI geBitmap_Palette *\tab GENESISCC\tab geBitmap_Palette_CreateFromBitmap(geBitmap * Bmp,geBoolean Slow);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // does GetPalette, and if NULL, then
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // it create an optimal palette for a
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //\tab non-palettized bitmap
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //\tab (this is a create, you must destroy later!)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // put Slow == TRUE for higher quality & slower
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SortColors(geBitmap_Palette * P,geBoolean Slower);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_CreateRef(geBitmap_Palette *Palette);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_Destroy(geBitmap_Palette ** ppPalette);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_WriteToFile(const geBitmap_Palette *Palette,geVFile *F);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetFormat(geBitmap_Palette * Palette,gePixelFormat Format);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_Copy(const geBitmap_Palette * Src,geBitmap_Palette * Target);
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetInfo(const\tab geBitmap_Palette *P,geBitmap_Info *Into);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // get the info as if it were a bitmap; Into->Height == 1
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_Lock(geBitmap_Palette *Palette, void **pBits, gePixelFormat *pFormat,int *pSize);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // pFormat & pSize are optional
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_UnLock(geBitmap_Palette *Palette);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // palette unlock does NOT notify the bitmap that the palette has changed.
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // call Bitmap_SetPalette() with the same palette pointer 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // \tab to tell the bitmap that it must to some processing
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // (don't worry, it won't duplicate it or copy it onto itself)
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetData(const geBitmap_Palette *P,      void *Into,gePixelFormat Format,int Colors);
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetData(      geBitmap_Palette *P,const void *From,gePixelFormat Format,int Colors);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // does Lock/UnLock for you
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // From and Into are arrays of Colors*gePixelFormat_BytesPerPel bytes
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetEntryColor(      geBitmap_Palette *P,int Color,int R,int G,int B,int A);
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetEntryColor(const geBitmap_Palette *P,int Color,int *R,int *G,int *B,int *A);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Set/Get does Lock/Unlock for you ; these are slow! do not use these to work on all the colors!
\par 
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_SetEntry(      geBitmap_Palette *P,int Color,uint32 Pixel);
\par GENESISAPI geBoolean\tab \tab GENESISCC\tab geBitmap_Palette_GetEntry(const geBitmap_Palette *P,int Color,uint32 *Pixel);
\par 
\par /***********************************************************************************/
\par 
\par /************************************************************************
\par 
\par A brief tutorial on the Bitmap system, by Charles Bloom, cbloom@eclipsegames.com
\par 
\par The Bitmap is a smart wrapper for complex functionality.  You give it hints to
\par the opaque Bitmap object, and it tries its best to follow those hints, but it
\par may not always do so.  The Bitmap is the owner of its bits; you must Lock the
\par bitmap to get permission to touch those bits, and UnLock to tell the bitmap
\par you are done.  The format may change between two Locks.  Bitmaps can also be
\par multiply owned, so you should account for the fact that others may touch your
\par bitmap between your uses.
\par 
\par The Bitmap contains one or two pixel-sets representing an image.  The "primary" is
\par a fast-blitting version of the image, and the "secondary" is a storage version
\par (eventually wavelet compressed) which can be used to rebuild the primary if it is
\par freed or damaged.  Both cary a generalized format.
\par 
\par Let's do an example.  I want to load a bitmap, set it up for drawing with the
\par genesis Engine, and then blit some interactive stuff into it.
\par 
\par ************************************************************************/
\par 
\par #if 0
\par // \{
\par //-----------------------------------------------------------------------------
\par 
\par void Init(geEngine * Engine);
\par void Shutdown(void);
\par void Draw(void);
\par void DrawPolite(void);
\par 
\par static geBitmap * myBM = NULL;
\par static geEngine * myEngine = NULL;
\par 
\par void Init(geEngine * Engine)
\par \{
\par geBoolean success;
\par geBitmap_Info Info;
\par 
\par \tab myEngine = Engine;\tab // this is not looked well upon; for ease of demonstration only!
\par \tab assert(Engine);
\par 
\par \tab myBM = geBitmap_CreateFromFileName(NULL,"mybitmap.bmp");
\par 
\par \tab // CreateFromFile can load windows BMP files, or custom GeBm files.
\par 
\par \tab assert(myBM);
\par 
\par \tab // get the main info; I don't care about the secondary, so leave it NULL
\par 
\par \tab success = geBitmap_GetInfo(myBM,&Info,NULL);
\par \tab assert(success);
\par 
\par \tab // make sure I loaded a bitmap in the format I understand !
\par 
\par \tab if ( Info.Format == GE_PIXELFORMAT_8BIT_PAL )
\par \tab \{
\par \tab \tab // I want palette index 255 to act as transparency, so I must use SetColorKey
\par 
\par \tab \tab success = geBitmap_SetColorKey(myBM,GE_TRUE,255);
\par \tab \tab assert(success);
\par 
\par \tab \tab // just for fun, let's modify the palette:
\par \tab \tab if (1)
\par \tab \tab \{
\par \tab \tab geBitmap_Palette * Pal;
\par 
\par \tab \tab \tab // get the palette ; I don't care if its primary or secondary, so
\par \tab \tab \tab /// I don't use the Info.Palette field
\par 
\par \tab \tab \tab Pal = geBitmap_GetPalette(myBM);
\par \tab \tab \tab assert(Pal);
\par 
\par \tab \tab \tab // I'm only fiddling one entry, so don't bother with a full Lock() UnLock()
\par \tab \tab \tab //  sequence on the palette
\par 
\par \tab \tab \tab // make palette index zero bright red; we use alpha = 255 for opaque
\par 
\par \tab \tab \tab success = geBitmap_Palette_SetEntryColor(Pal,0,255,0,0,255);
\par \tab \tab \tab assert(success);
\par 
\par \tab \tab \tab // tell the bitmap system you've changed the palette; this function
\par \tab \tab \tab //  is smart enough to not do unecessary copies or whatever.
\par 
\par \tab \tab \tab success = geBitmap_SetPalette(myBM,Pal);
\par \tab \tab \tab assert(success);
\par \tab \tab \}
\par 
\par \tab \}
\par \tab else
\par \tab \{
\par \tab \tab // otherwise, treat black as transparent, in whatever format I have
\par 
\par \tab \tab success = geBitmap_SetColorKey(myBM,GE_TRUE,gePixelFormat_ComposePixel(Info.Format,0,0,0,0));
\par \tab \tab assert(success);
\par \tab \}\tab 
\par 
\par \tab // note that I did NOT use SetFormat.  SetFormat may do a conversion, and since the original
\par \tab //\tab bitmap was created without colorkey, it would have been converted to a new format but
\par \tab //\tab kept its property of having no colorkey!
\par \tab // (SetFormat will fiddle the bits and whatever way necessary to keep bitmaps as visually similar
\par \tab //\tab \tab as possible)
\par 
\par \tab // I want to fiddle the fast format in 565 later, so cue the bitmap to try to give me that format.
\par 
\par \tab success = geBitmap_SetPreferredFormat(myBM,GE_PIXELFORMAT_16BIT_565_RGB);
\par \tab assert(success);
\par 
\par \tab // Add it to the engine so it can be used for drawing.
\par 
\par \tab success = geEngine_AddBitmap(myEngine,myBM);
\par \tab assert(success);
\par \}
\par 
\par void Shutdown(void)
\par \{
\par geBoolean WasDestroyed;
\par 
\par \tab assert(myBM);
\par \tab 
\par \tab // clean up
\par 
\par \tab geEngine_RemoveBitmap(myEngine,myBM);
\par 
\par \tab WasDestroyed = geBitmap_Destroy(&myBM);
\par 
\par \tab // someone else might have done _CreateRef on our bitmap,
\par \tab //  so we can't be sure it's actually destroyed.
\par \tab // this code is still ready to be run again with a new call to Init()
\par 
\par \tab //assert(WasDestroyed);
\par 
\par \tab myBM = NULL;
\par \tab myEngine = NULL;
\par \}
\par 
\par void Draw(void)
\par \{
\par geBitmap * Lock;
\par geBoolean success;
\par geBitmap_Info Info;
\par uint16 *bits,*bptr;
\par int x,y;
\par 
\par \tab // lets fiddle the bits.
\par \tab // we need to lock the bitmap for write.
\par \tab //\tab LockForWrite is an exclusive lock, unlike LockForRead which is non-blocking
\par \tab // request our favorite format, and only lock Mip 0 (the full size bitmap)
\par 
\par \tab success = geBitmap_LockForWriteFormat(myBM,&Lock,0,0,GE_PIXELFORMAT_16BIT_565_RGB);
\par \tab if ( ! success )
\par \tab \{
\par \tab \tab // well, we tried to be nice; if we were very polite, we would do a LockForWrite
\par \tab \tab // here, and try to fiddle the bits in whatever format we got; However, we aren't
\par \tab \tab // that polite, so we just do a _SetFormat
\par \tab \tab //
\par \tab \tab // note that we are destroying the original bitmap by changing its format
\par \tab \tab // we should only do this if we are going to draw into the bitmap
\par 
\par \tab \tab success = geBitmap_SetFormat(myBM,GE_PIXELFORMAT_16BIT_565_RGB,GE_TRUE,0,NULL);
\par \tab \tab assert(success);
\par 
\par \tab \tab // now we should be able to get the bits we want, *but* they may not be the
\par \tab \tab // primary (fast) format; oh well, it's the best we can do...
\par \tab \tab // (if you must have the fastest bits, then use only _LockForWrite, never LockForWriteFormat,
\par \tab \tab // which might have to do a conversion)
\par 
\par \tab \tab success = geBitmap_LockForWriteFormat(myBM,&Lock,0,0,GE_PIXELFORMAT_16BIT_565_RGB);
\par \tab \tab assert(success);
\par \tab \}
\par 
\par \tab // now Lock is our bitmap in 565
\par \tab // we do a GetInfo because the Lock's info could be different than
\par \tab //\tab the original bitmap's (particularly the Palette & the Stride)
\par 
\par \tab success = geBitmap_GetInfo(Lock,&Info,NULL);
\par \tab assert(success);
\par 
\par \tab // you can only call _GetBits on a locked bitmap
\par 
\par \tab bits = geBitmap_GetBits(Lock);
\par \tab assert( bits );
\par 
\par \tab bptr = bits;
\par \tab for(y=0; y < Info.Height; y++)
\par \tab \{
\par \tab \tab for(x=0; x < Info.Width; x++)
\par \tab \tab \{
\par \tab \tab uint16 R,G,B;
\par \tab \tab \tab // make a silly 565 gradient
\par \tab \tab \tab R = x & 0x1F;
\par \tab \tab \tab G = x & 0x3F;
\par \tab \tab \tab B = y & 0x1F;
\par 
\par \tab \tab \tab *bptr++ = (R<<11) + (G<<5) + B;
\par \tab \tab \}
\par 
\par \tab \tab // note that bptr is a word pointer, and Stride is in pixels :
\par 
\par \tab \tab bptr += Info.Stride -  Info.Width;
\par \tab \}
\par \tab bits = bptr = NULL;
\par 
\par \tab // you call Unlock on all the mips you locked - not on the original bitmap!
\par 
\par \tab success = geBitmap_UnLock(Lock);
\par \tab assert(success);
\par 
\par \tab // now, we only fiddled the full-size Mip, and there might be more,
\par \tab //  so lets percolate the changes into the smaller mips:
\par 
\par \tab success = geBitmap_RefreshMips(myBM);
\par \tab assert(success);
\par 
\par \tab // a null rect means use the whole bitmap;
\par \tab // Engine_DrawBitmap blits a 2d decal to the framebuffer (fast)
\par 
\par \tab success = geEngine_DrawBitmap(myEngine,myBM,NULL,0,0);
\par \tab assert(success);
\par 
\par \}
\par 
\par void DrawPolite(void)
\par \{
\par geBitmap * Lock;
\par geBoolean success;
\par geBitmap_Info Info;
\par void *bits;
\par int x,y;
\par 
\par \tab // this function does the same thing as Draw() , but is more polite
\par \tab // lock in the fastest format (whatever it is)
\par \tab // because we did SetPreferred, this should be 565_RGB, but might not be
\par 
\par \tab success = geBitmap_LockForWrite(myBM,&Lock,0,0);
\par \tab assert(success);
\par 
\par \tab success = geBitmap_GetInfo(Lock,&Info,NULL);
\par \tab assert(success);
\par 
\par \tab bits = geBitmap_GetBits(Lock);
\par \tab assert( bits );
\par 
\par \tab if ( Info.Format == GE_PIXELFORMAT_16BIT_565_RGB )
\par \tab \{
\par \tab uint16 *wptr;
\par 
\par \tab \tab // our favorite format
\par 
\par \tab \tab wptr = bits;
\par \tab \tab for(y=0; y < Info.Height; y++)
\par \tab \tab \{
\par \tab \tab \tab for(x=0; x < Info.Width; x++)
\par \tab \tab \tab \{
\par \tab \tab \tab uint16 R,G,B;
\par \tab \tab \tab \tab // make a silly 565 gradient
\par \tab \tab \tab \tab R = x & 0x1F;
\par \tab \tab \tab \tab G = x & 0x3F;
\par \tab \tab \tab \tab B = y & 0x1F;
\par 
\par \tab \tab \tab \tab *wptr++ = (R<<11) + (G<<5) + B;
\par \tab \tab \tab \}
\par \tab \tab \tab wptr += Info.Stride -  Info.Width;
\par \tab \tab \}
\par \tab \}
\par \tab else
\par \tab \{
\par \tab uint8 * bptr;
\par 
\par \tab \tab // oh well, do our best
\par \tab \tab // bitmaps must have had a good reason to not give us the format we preferred,
\par 
\par \tab \tab bptr = bits;
\par \tab \tab for(y=0; y < Info.Height; y++)
\par \tab \tab \{
\par \tab \tab \tab for(x=0; x < Info.Width; x++)
\par \tab \tab \tab \{
\par \tab \tab \tab uint32 R,G,B;
\par 
\par \tab \tab \tab \tab // put a color in any format
\par 
\par \tab \tab \tab \tab R = (x & 0x1F)<<3;
\par \tab \tab \tab \tab G = (x & 0x3F)<<2;
\par \tab \tab \tab \tab B = (y & 0x1F)<<3;
\par 
\par \tab \tab \tab \tab // we use alpha of 255 for opaque
\par 
\par \tab \tab \tab \tab gePixelFormat_PutColor(Info.Format,&bptr,R,G,B,255);
\par \tab \tab \tab \}
\par 
\par \tab \tab \tab bptr += (Info.Stride -  Info.Width) * gePixelFormat_BytesPerPel(Info.Format);
\par \tab \tab \}
\par \tab \}
\par \tab bits = NULL;
\par 
\par \tab // same as before:
\par 
\par \tab success = geBitmap_UnLock(Lock);
\par \tab assert(success);
\par 
\par \tab success = geBitmap_RefreshMips(myBM);
\par \tab assert(success);
\par 
\par \tab success = geEngine_DrawBitmap(myEngine,myBM,NULL,0,0);
\par \tab assert(success);
\par 
\par \}
\par 
\par // end tutorial on the Bitmap system
\par //-----------------------------------------------------------------------------
\par // \}
\par 
\par /***********************************************************************************/
\par 
\par #endif
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069970}bitmap_blitdata.h{\*\bkmkend _Toc454069970}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef BITMAP_BLITDATA_H
\par #define BITMAP_BLITDATA_H
\par 
\par #ifndef BITMAP_PRIVATE_H
\par Intentional Error : bitmap_blidata only allowed in bitmap internals!
\par #endif
\par /****************************************************************************************/
\par /*  Bitmap_BlitData.h                                                                   */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  The Bitmap_BlitData function                                          */
\par /*\tab \tab \tab \tab \tab Does all format conversions\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par 
\par extern geBoolean geBitmap_BlitData(
\par \tab \tab \tab \tab \tab \tab \tab \tab const geBitmap_Info * SrcInfo,const void *SrcData,const geBitmap *SrcBmp,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab   geBitmap_Info * DstInfo,\tab \tab void *DstData,const geBitmap *DstBmp,
\par \tab \tab \tab \tab \tab \tab \tab \tab int SizeX,
\par \tab \tab \tab \tab \tab \tab \tab \tab int SizeY);
\par 
\par #endif //BITMAP_BLITDATA_H
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069971}bitmap_gamma.h{\*\bkmkend _Toc454069971}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef BITMAP_GAMMA_H
\par #define BITMAP_GAMMA_H
\par 
\par #ifndef BITMAP_PRIVATE_H
\par Intentional Error : bitmap_blidata only allowed in bitmap internals!
\par #endif
\par 
\par /****************************************************************************************/
\par /*  Bitmap_Gamma.h                                                                      */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  The Bitmap_Gamma_Apply function                                       */
\par /*\tab \tab \tab \tab \tab Fast Gamma correction routines for various pixel formats\tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par 
\par extern geBoolean geBitmap_Gamma_Apply(geBitmap * Bitmap,geBoolean Invert);
\par 
\par #endif //BITMAP_GAMMA_H
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069972}pixelformat.h{\*\bkmkend _Toc454069972}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef\tab PIXELFORMAT_H
\par #define\tab PIXELFORMAT_H
\par 
\par /****************************************************************************************/
\par /*  PixelFormat.h                                                                       */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  The abstract Pixel primitives                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum\tab \tab // all supported formats (including shifts)
\par \{
\par \tab GE_PIXELFORMAT_NO_DATA = 0,
\par \tab GE_PIXELFORMAT_8BIT,\tab \tab \tab \tab // PAL
\par \tab GE_PIXELFORMAT_8BIT_GRAY,\tab \tab // no palette (intensity from bit value)
\par \tab GE_PIXELFORMAT_16BIT_555_RGB,
\par \tab GE_PIXELFORMAT_16BIT_555_BGR,
\par \tab GE_PIXELFORMAT_16BIT_565_RGB,\tab // #5
\par \tab GE_PIXELFORMAT_16BIT_565_BGR, 
\par \tab GE_PIXELFORMAT_16BIT_4444_ARGB, // #7
\par \tab GE_PIXELFORMAT_16BIT_1555_ARGB, 
\par \tab GE_PIXELFORMAT_24BIT_RGB,\tab \tab // #9
\par \tab GE_PIXELFORMAT_24BIT_BGR,
\par \tab GE_PIXELFORMAT_24BIT_YUV,\tab \tab // * see note below
\par \tab GE_PIXELFORMAT_32BIT_RGBX, 
\par \tab GE_PIXELFORMAT_32BIT_XRGB, 
\par \tab GE_PIXELFORMAT_32BIT_BGRX, 
\par \tab GE_PIXELFORMAT_32BIT_XBGR,
\par \tab GE_PIXELFORMAT_32BIT_RGBA, 
\par \tab GE_PIXELFORMAT_32BIT_ARGB,\tab \tab // #17
\par \tab GE_PIXELFORMAT_32BIT_BGRA, 
\par \tab GE_PIXELFORMAT_32BIT_ABGR,
\par \tab 
\par \tab GE_PIXELFORMAT_WAVELET,\tab \tab \tab // #20 , Wavelet Compression
\par 
\par \tab GE_PIXELFORMAT_COUNT
\par \} gePixelFormat;
\par \tab 
\par /******
\par 
\par there's something wacked out about these format names :
\par 
\par \tab for 16 bit & 32 bit , the _RGB or _BGR refers to their order
\par \tab \tab *in the word or dword* ; since we're on intel, this means
\par \tab \tab the bytes in the data file have the *opposite* order !!
\par \tab \tab (for example the 32 bit _ARGB is actually B,G,R,A in raw bytes)
\par \tab for 24 bit , the _RGB or _BGR refers to their order in the
\par \tab \tab actual bytes, so that windows bitmaps actually have
\par \tab \tab _RGB order in a dword !!
\par 
\par * YUV : the pixelformat ops here are identical to those of 24bit_RGB ;
\par \tab \tab this is just a place-keeper to notify you that you should to a YUV_to_RGB conversion
\par 
\par *********/
\par 
\par #define GE_PIXELFORMAT_8BIT_PAL GE_PIXELFORMAT_8BIT
\par 
\par typedef uint32\tab (*gePixelFormat_Composer   )(int R,int G,int B,int A);
\par typedef void\tab (*gePixelFormat_Decomposer )(uint32 Pixel,int *R,int *G,int *B,int *A);
\par 
\par typedef void\tab (*gePixelFormat_ColorGetter)(uint8 **ppData,int *R,int *G,int *B,int *A);
\par typedef void\tab (*gePixelFormat_ColorPutter)(uint8 **ppData,int  R,int  G,int  B,int  A);
\par 
\par typedef uint32\tab (*gePixelFormat_PixelGetter)(uint8 **ppData);
\par typedef void\tab (*gePixelFormat_PixelPutter)(uint8 **ppData,uint32 Pixel);
\par 
\par typedef struct gePixelFormat_Operations
\par \{
\par \tab uint32\tab RMask;
\par \tab uint32\tab GMask;
\par \tab uint32\tab BMask;
\par \tab uint32\tab AMask;
\par 
\par \tab int\tab \tab RShift;
\par \tab int\tab \tab GShift;
\par \tab int\tab \tab BShift;
\par \tab int\tab \tab AShift;
\par 
\par \tab int\tab \tab RAdd;
\par \tab int\tab \tab GAdd;
\par \tab int\tab \tab BAdd;
\par \tab int\tab \tab AAdd;
\par 
\par \tab int\tab \tab \tab BytesPerPel;
\par \tab geBoolean\tab HasPalette;
\par \tab char *\tab \tab Description;
\par \tab 
\par \tab gePixelFormat_Composer\tab \tab ComposePixel;
\par \tab gePixelFormat_Decomposer\tab DecomposePixel;
\par 
\par \tab gePixelFormat_ColorGetter\tab GetColor;
\par \tab gePixelFormat_ColorPutter\tab PutColor;
\par 
\par \tab gePixelFormat_PixelGetter\tab GetPixel;
\par \tab gePixelFormat_PixelPutter\tab PutPixel;
\par \} gePixelFormat_Operations;
\par 
\par \tab // the Masks double as boolean "HaveAlpha" .. etc..
\par 
\par GENESISAPI const gePixelFormat_Operations * GENESISCC gePixelFormat_GetOperations( gePixelFormat Format );
\par 
\par \tab // quick accessors to _GetOps
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_IsValid(\tab \tab gePixelFormat Format);
\par GENESISAPI unsigned int GENESISCC gePixelFormat_BytesPerPel(\tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_HasPalette(\tab \tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_HasAlpha(\tab \tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_HasGoodAlpha(\tab gePixelFormat Format ); // more than 1 bit of alpha
\par GENESISAPI const char * GENESISCC gePixelFormat_Description(\tab gePixelFormat Format );
\par GENESISAPI geBoolean\tab GENESISCC gePixelFormat_IsRaw(\tab \tab \tab gePixelFormat Format );
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab // 'Raw' means pixels can be made with the Compose operations
\par 
\par GENESISAPI uint32\tab \tab GENESISCC gePixelFormat_ComposePixel(\tab gePixelFormat Format,int R,int G,int B,int A);
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_DecomposePixel(\tab gePixelFormat Format,uint32 Pixel,int *R,int *G,int *B,int *A);
\par \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // these four functions move ppData to the next pixel
\par 
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_GetColor(gePixelFormat Format,uint8 **ppData,int *R,int *G,int *B,int *A);
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_PutColor(gePixelFormat Format,uint8 **ppData,int R,int G,int B,int A);
\par 
\par GENESISAPI uint32\tab \tab GENESISCC gePixelFormat_GetPixel(gePixelFormat Format,uint8 **ppData);
\par GENESISAPI void\tab \tab \tab GENESISCC gePixelFormat_PutPixel(gePixelFormat Format,uint8 **ppData,uint32 Pixel);
\par \tab 
\par GENESISAPI uint32\tab \tab GENESISCC gePixelFormat_ConvertPixel(gePixelFormat Format,uint32 Pixel,gePixelFormat ToFormat);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\page }{\i {\*\bkmkstart _Toc454069973}OpenSource/Source/Bitmap/Compression Subdirectory{\*\bkmkend _Toc454069973}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains routines for compression of bitmap data.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069974}Palcreate.h{\*\bkmkend _Toc454069974}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef GE_BRANDO_PALCREATE_H
\par #define GE_BRANDO_PALCREATE_H
\par 
\par #include "basetype.h"
\par #include "bitmap.h"
\par 
\par /****************************************************************************************/
\par /*  PalCreate                                                                           */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Palette Creation code                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par extern geBitmap_Palette * createPaletteGood(const geBitmap_Info * Info,const void * Bits);
\par extern geBitmap_Palette * createPaletteFast(const geBitmap_Info * Info,const void * Bits);
\par 
\par typedef geBitmap_Palette * (*paletteCreater) (const geBitmap_Info * Info,const void * Bits);
\par extern void setCreatePaletteFunc(paletteCreater func);
\par 
\par extern geBitmap_Palette * createPalette(const geBitmap_Info * Info,const void * Bits);
\par 
\par extern geBitmap_Palette * createPaletteFromBitmap(const geBitmap * Bitmap,geBoolean Optimize);
\par 
\par extern void PalCreate_Start(void);
\par extern void PalCreate_Stop(void);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\i0 {\*\bkmkstart _Toc454069975}palettize.h{\*\bkmkend _Toc454069975}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef GE_BRANDO_PALETTIZE_H
\par #define GE_BRANDO_PALETTIZE_H
\par 
\par /****************************************************************************************/
\par /*  Palettize                                                                           */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Palettize-ing code                                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par #include "bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par geBoolean palettizePlane(const\tab geBitmap_Info * SrcInfo,const\tab void * SrcBits,
\par \tab \tab \tab \tab \tab \tab \tab \tab geBitmap_Info * DstInfo,\tab \tab void * DstBits,
\par \tab \tab \tab \tab \tab \tab \tab \tab int SizeX,int SizeY);
\par 
\par // you can create a palette with routines in "palcreate.h"
\par 
\par /******* if you want to do your own palettizing : ******/
\par 
\par typedef struct palInfo palInfo;
\par 
\par extern palInfo *\tab closestPalInit(uint8 * palette);
\par extern void\tab \tab \tab closestPalFree(palInfo *info);
\par extern int\tab \tab \tab closestPal(int R,int G,int B,palInfo *pi);
\par 
\par extern void Palettize_Start(void);
\par extern void Palettize_Stop(void);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\i0 {\*\bkmkstart _Toc454069976}paloptimize.h{\*\bkmkend _Toc454069976}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef GE_PALOPTIMIZE_H
\par #define GE_PALOPTIMIZE_H
\par 
\par /****************************************************************************************/
\par /*  PalOptimize                                                                         */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Palette Perfecting code                                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par #include "bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par extern void paletteOptimize(const geBitmap_Info * Info,const void * Bits,
\par \tab \tab \tab \tab \tab \tab uint8 *palette,int palEntries,int maxSamples);
\par 
\par \tab // use maxIterations == 0 or -1 for infinity
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\i0 {\*\bkmkstart _Toc454069977}utility.h{\*\bkmkend _Toc454069977}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef __COMPUTIL_UTILITY_H
\par #define __COMPUTIL_UTILITY_H
\par 
\par /****************************************************************************************/
\par /*  Utility.h\tab \tab \tab                                                                 */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  Macros\tab \tab \tab \tab                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par #include "ram.h"
\par #include "errorlog.h"
\par #include <assert.h>
\par #include <stdlib.h>
\par #include <string.h>\tab // for memcpy,memset
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef unsigned int uint;
\par 
\par /****************************************/
\par 
\par #define BrandoError(str)\tab geErrorLog_AddString(-1,str,NULL)
\par 
\par #ifndef NULL
\par #define NULL (0)
\par #endif
\par 
\par #define sizeofpointer sizeof(void *)
\par 
\par #define PaddedSize(a) (((a)+3) & (~3))
\par 
\par #define IsOdd(a)  ( ((uint32)a)&1 )
\par #define SignOf(a) (((a) < 0) ? -1 : 1)
\par 
\par #ifndef max
\par #define max(a,b) ((a)>(b)?(a):(b))
\par #endif
\par 
\par #ifndef min
\par #define min(a,b) ((a)<(b)?(a):(b))
\par #endif
\par 
\par #define minmax(x,lo,hi) ( (x)<(lo)?(lo):( (x)>(hi)?(hi):(x)) )
\par #define putminmax(x,lo,hi) x = minmax(x,lo,hi)
\par #define putmin(x,lo) x = min(x,lo)
\par #define putmax(x,hi) x = max(x,hi)
\par #define max3(a,b,c) max(max(a,b),c)
\par #define max4(a,b,c,d) max(a,max3(b,c,d))
\par #define min3(a,b,c) min(min(a,b),c)
\par #define min4(a,b,c,d) min(a,min3(b,c,d))
\par 
\par #ifndef mabs
\par #define mabs(i) ((i) < 0 ? -(i) : (i))
\par #endif
\par 
\par #define isinrange(x,lo,hi)\tab ( (x) >= (lo) && (x) <= (hi) )
\par 
\par #define getuint32(bptr) ( ((((uint8 *)(bptr))[0])<<24) + (((uint8 *)(bptr))[1]<<16) + (((uint8 *)(bptr))[2]<<8) + (((uint8 *)(bptr))[3]) )
\par #define getuint16(bptr) ( (((uint8 *)(bptr))[0]<<8) + (((uint8 *)(bptr))[1]) )
\par 
\par /****************************************/
\par 
\par #ifndef strofval
\par #define strofval(x)\tab (#x)
\par #endif
\par 
\par #ifndef new
\par #define new(type)\tab \tab geRam_AllocateClear(sizeof(type))
\par #endif
\par 
\par #ifndef destroy
\par #define destroy(mem)\tab do \{ if ( mem ) \{ geRam_Free(mem); (mem) = NULL; \} \} while(0)
\par #endif
\par 
\par #ifndef newarray
\par #define newarray(type,num)\tab geRam_AllocateClear((num)*sizeof(type))
\par #endif
\par 
\par #ifndef memclear
\par #define memclear(mem,size)\tab memset(mem,0,size);
\par #endif
\par 
\par /****************************************/
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif // __COMPUTIL_UTILITY_H
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\i0 \page {\*\bkmkstart _Toc454069978}yuv.h{\*\bkmkend _Toc454069978}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {#ifndef GE_BRANDO_YUV_H
\par #define GE_BRANDO_YUV_H
\par 
\par /****************************************************************************************/
\par /*  Yuv                                                                                 */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description:  YUV <-> RGB code                                                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par extern void RGBb_to_YUVb(const uint8 *RGB,uint8 *YUV);
\par extern void YUVb_to_RGBb(const uint8 *YUV,uint8 *RGB);
\par extern void RGBb_to_YUVb_line(const uint8 *RGB,uint8 *YUV,int array);
\par extern void YUVb_to_RGBb_line(const uint8 *YUV,uint8 *RGB,int array);
\par 
\par extern void RGBb_to_YUVi(const uint8 *RGB,int *Y,int *U,int *V);
\par extern void YUVi_to_RGBb(int y,int u,int v,uint8 *RGB);
\par extern void RGBi_to_YUVi(int R,int G,int B,int *Y,int *U,int *V);
\par extern void YUVi_to_RGBi(int y,int u,int v,int *R,int *G,int *B);
\par 
\par extern void YUVi_to_RGBi_line(int *line1,int *line2,int *line3,int len);
\par extern void YUVi_to_BGRb_line(int *line1,int *line2,int *line3,uint8 * bline,int len);
\par 
\par /**************************************************************/
\par 
\par #define YUV_SHIFT \tab 14
\par #define YUV_HALF\tab (1<<(YUV_SHIFT-1))
\par #define YUV_ONE\tab \tab (1<<YUV_SHIFT)
\par #define Y_R   ((int)( 0.29900 * YUV_ONE ))
\par #define Y_G   ((int)( 0.58700 * YUV_ONE ))
\par #define Y_B   ((int)( 0.11400 * YUV_ONE ))
\par #define U_R   ((int)(-0.16874 * YUV_ONE ))
\par #define U_G   ((int)(-0.33126 * YUV_ONE ))
\par #define U_B   ((int)( 0.50000 * YUV_ONE ))
\par #define V_R   ((int)(-0.50000 * YUV_ONE ))\tab // ** important sign change of 'V' from jpeg default
\par #define V_G   ((int)( 0.41869 * YUV_ONE ))
\par #define V_B   ((int)( 0.08131 * YUV_ONE ))
\par #define R_Y   (    \tab \tab \tab \tab YUV_ONE )       
\par #define R_U   (0)
\par #define R_V   ((int)(-1.40200 * YUV_ONE ))
\par #define G_Y   (    \tab \tab \tab \tab YUV_ONE )       
\par #define G_U   ((int)(-0.34414 * YUV_ONE ))
\par #define G_V   ((int)( 0.71414 * YUV_ONE ))
\par #define B_Y   (     \tab \tab \tab YUV_ONE )       
\par #define B_U   ((int)( 1.77200 * YUV_ONE ))
\par #define B_V   (0)       
\par 
\par #define Y_RGB(R,G,B) (( Y_R * (R) + Y_G * (G) + Y_B * (B) + YUV_HALF ) >> YUV_SHIFT)
\par #define U_RGB(R,G,B) (( U_R * (R) + U_G * (G) + U_B * (B) + YUV_HALF ) >> YUV_SHIFT)
\par #define V_RGB(R,G,B) (( V_R * (R) + V_G * (G) + V_B * (B) + YUV_HALF ) >> YUV_SHIFT)
\par #define R_YUV(Y,U,V) (( R_Y * (Y) + R_U * (U) + R_V * (V) + YUV_HALF ) >> YUV_SHIFT)
\par #define G_YUV(Y,U,V) (( G_Y * (Y) + G_U * (U) + G_V * (V) + YUV_HALF ) >> YUV_SHIFT)
\par #define B_YUV(Y,U,V) (( B_Y * (Y) + B_U * (U) + B_V * (V) + YUV_HALF ) >> YUV_SHIFT)
\par 
\par #define RGB_to_YUV_macro(R,G,B,Y,U,V) \\\\
\par do \{ Y = Y_RGB(R,G,B); U = U_RGB(R,G,B) + 127; V = V_RGB(R,G,B) + 127; \} while(0)
\par 
\par #define YUV_to_RGB_macro(Y,U,V,R,G,B) \\\\
\par do \{\tab R = R_YUV(Y,(U)-127,(V)-127); G = G_YUV(Y,(U)-127,(V)-127); B = B_YUV(Y,(U)-127,(V)-127); \\\\
\par \tab \tab R = minmax(R,0,255); G = minmax(G,0,255); B = minmax(B,0,255); \} while(0)
\par 
\par /**************************************************************/
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454069979}OpenSource/Source/Engine Subdirectory{\*\bkmkend _Toc454069979}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the main engine routines.  It's subdirectories contain the individual drivers.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069980}Bitmaplist.h{\*\bkmkend _Toc454069980}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BitmapList.h                                                                        */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description: Maintains a pool of bitmap pointers.                                   */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef BITMAPLIST_H
\par #define BITMAPLIST_H
\par 
\par #include "GeTypes.h"
\par #include "DCommon.h"
\par #include "Bitmap.h"
\par 
\par typedef struct BitmapList\tab \tab BitmapList;
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par BitmapList *BitmapList_Create(void);
\par geBoolean BitmapList_Destroy(BitmapList *pList);
\par 
\par geBoolean BitmapList_SetGamma(BitmapList *pList, geFloat Gamma);
\par 
\par geBoolean BitmapList_AttachAll(BitmapList *pList, DRV_Driver *Drivera, geFloat Gamma);
\par geBoolean BitmapList_DetachAll(BitmapList *pList);
\par 
\par \tab // _Add & _Remove do NOT return Ok/NOk\tab 
\par geBoolean BitmapList_Add(BitmapList *pList, geBitmap *Bitmap);\tab // returns Was It New ?
\par geBoolean BitmapList_Remove(BitmapList *pList,geBitmap *Bitmap);// returns Was It Removed ?
\par \tab // _Add & _Remove also do not do any Attach or Detach
\par 
\par geBoolean BitmapList_Has(BitmapList *pList, geBitmap *Bitmap);
\par 
\par #ifndef NDEBUG
\par int\tab \tab \tab BitmapList_CountMembers(BitmapList *pList);
\par int\tab \tab \tab BitmapList_CountMembersAttached(BitmapList *pList);
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069981}engine.h{\*\bkmkend _Toc454069981}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Engine.h                                                                            */
\par /*                                                                                      */
\par /*  Author: Charles Bloom/John Pollard                                                  */
\par /*  Description: Maintains the driver interface, as well as the bitmaps attached\tab \tab */
\par /*\tab \tab \tab \tab \tab to the driver.\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_ENGINE_H
\par #define GE_ENGINE_H
\par 
\par #include "Genesis.h"
\par #include "System.h"
\par #include "world.h"
\par #include "bitmap.h"
\par #include "BitmapList.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //-------------------------------------------------
\par // fake out windows include
\par //-------------------------------------------------
\par #ifndef WINVER // if you want windows, you must include it first!
\par #ifdef STRICT
\par typedef struct HINSTANCE__ * HINSTANCE;
\par #else // STRICT
\par typedef void * HINSTANCE;
\par #endif // STRICT
\par #endif
\par 
\par //-------------------------------------------------
\par // Engine Functions
\par //-------------------------------------------------
\par 
\par //-------- engine world list funcs
\par GENESISAPI geBoolean geEngine_AddWorld(geEngine *Engine, geWorld *World);
\par GENESISAPI geBoolean geEngine_RemoveWorld(geEngine *Engine, geWorld *World);
\par geBoolean geEngine_RemoveAllWorlds(geEngine *Engine);
\par geBoolean geEngine_HasWorld(const geEngine *Engine, const geWorld *World);
\par void geEngine_SetAllWorldChangedFlag(geEngine *Engine, geBoolean Flag);
\par 
\par //-------- engine attach/detach thandle funcs
\par 
\par // call updategamma when drivers change
\par GENESISAPI geBoolean geEngine_SetGamma(geEngine *Engine, float Gamma);
\par GENESISAPI geBoolean geEngine_GetGamma(geEngine *Engine, float *Gamma);
\par void geEngine_UpdateGamma(geEngine *Engine);
\par 
\par geBoolean geEngine_BitmapListInit(geEngine *Engine);
\par geBoolean geEngine_BitmapListShutdown(geEngine *Engine);
\par geBoolean geEngine_DetachAllWorlds(geEngine *Engine);
\par geBoolean geEngine_CreateWorldLightmapTHandles(geEngine *Engine, geWorld *World);
\par geBoolean geEngine_DestroyWorldLightmapTHandles(geEngine *Engine, geWorld *World);
\par geBoolean geEngine_AttachAllWorlds(geEngine *Engine);
\par geBoolean geEngine_AttachAll(geEngine *Engine);
\par geBoolean geEngine_DetachAll(geEngine *Engine);
\par 
\par //-------- the splash screen
\par geBoolean geEngine_DoSplashScreen(geEngine *Engine, geDriver_Mode *DriverMode);
\par 
\par //-------- engine fonts
\par geBoolean geEngine_InitFonts(geEngine *Engine);
\par geBoolean geEngine_ShutdownFonts(geEngine *Engine);
\par 
\par //-------- engine drivers
\par HINSTANCE geEngine_LoadLibrary( const char * lpLibFileName, const char *DriverDirectory);
\par geBoolean geEngine_ResetDriver(geEngine *Engine);
\par GENESISAPI geDriver_System *geEngine_GetDriverSystem(geEngine *Engine);
\par 
\par GENESISAPI geBoolean geEngine_SetDriverAndMode(\tab geEngine *Engine, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geDriver *Driver, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geDriver_Mode *DriverMode);
\par 
\par //-------- drawing with the engine (Decals & Misc Polys)
\par 
\par GENESISAPI geBoolean GENESISCC geEngine_DrawBitmap(const geEngine *Engine,
\par \tab const geBitmap *Bitmap,
\par \tab const geRect * Source, uint32 x, uint32 y);
\par 
\par GENESISAPI void GENESISCC geEngine_RenderPoly(const geEngine *Engine, const GE_TLVertex *Points, 
\par \tab \tab \tab \tab \tab \tab int NumPoints, const geBitmap *Texture, uint32 Flags);
\par 
\par GENESISAPI void GENESISCC geEngine_RenderPolyArray(const geEngine *Engine, const GE_TLVertex ** pPoints, int * pNumPoints, int NumPolys, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geBitmap *Texture, uint32 Flags);
\par 
\par //-------- temporary pre-geBitmap hacks
\par geBoolean Engine_UploadBitmap(geEngine *Engine, DRV_Bitmap *Bitmap, DRV_Bitmap *ABitmap, geFloat Gamma);
\par geBoolean Engine_SetupPixelFormats(geEngine *Engine);
\par geRDriver_THandle * Engine_CreateTHandle(geEngine *Engine,int Width,int Height,int Mips, int EngineTexType);
\par void Engine_DestroyTHandle(geEngine *Engine,geRDriver_THandle * THandle);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif // GE_ENGINE_H
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069982}system.h{\*\bkmkend _Toc454069982}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  System.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Friend of engine.c.  Takes care of some of the driver work.            */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_SYSTEM_H
\par #define GE_SYSTEM_H
\par 
\par //#define OLD_FONT
\par 
\par #include "ErrorLog.h"
\par #include "Genesis.h"
\par #include <windows.h>
\par #include "dcommon.h"
\par #include "Camera.h"
\par #include "PtrTypes.h"
\par 
\par #define\tab \tab VectorToSUB(a, b) ( *(((float*)&a) + b) )
\par 
\par #define\tab \tab MAX_SUB_DRIVERS\tab \tab \tab \tab 12
\par #define\tab \tab MAX_DRIVER_MODES\tab \tab \tab 32
\par #define\tab \tab DRV_STR_SIZE\tab \tab \tab \tab 512
\par #define\tab \tab DRV_MODE_STR_SIZE\tab \tab \tab 512
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum
\par \{
\par \tab FrameState_None = 0,
\par \tab FrameState_Begin,
\par \} geEngine_FrameState;
\par 
\par //=====================================================================================
\par //\tab Structure defines
\par //=====================================================================================
\par 
\par #define MAX_CLIENT_STRING_LEN\tab 80
\par #define MAX_CLIENT_STRINGS\tab \tab 20
\par 
\par typedef struct 
\par \{
\par \tab int32\tab \tab \tab x,y;
\par \tab char\tab \tab \tab String[MAX_CLIENT_STRING_LEN];
\par \}\tab Sys_String;
\par 
\par typedef struct
\par \{
\par \tab geBitmap\tab \tab *FontBitmap;
\par 
\par \tab uint32\tab \tab \tab FontLUT1[256];
\par \tab Sys_String\tab \tab ClientStrings[MAX_CLIENT_STRINGS];
\par \tab int32\tab \tab \tab NumStrings;
\par \} Sys_FontInfo;
\par 
\par typedef struct
\par \{
\par \tab int32\tab \tab Freq;
\par \} Sys_CPUInfo;
\par 
\par typedef struct geDriver_Mode
\par \{
\par \tab int32\tab \tab \tab Id;\tab \tab \tab \tab \tab \tab \tab // Driver assigned mode id
\par \tab char\tab \tab \tab Name[DRV_MODE_STR_SIZE];\tab \tab // Driver assigned mode name
\par \tab int32\tab \tab \tab Width;\tab \tab \tab \tab \tab \tab // Mode width
\par \tab int32\tab \tab \tab Height;\tab \tab \tab \tab \tab \tab // Mode height
\par \} geDriver_Mode;
\par 
\par typedef struct geDriver
\par \{
\par \tab int32\tab \tab \tab Id;\tab \tab \tab \tab \tab \tab \tab // Driver assigned Id
\par \tab char\tab \tab \tab Name[DRV_STR_SIZE];\tab \tab \tab // Driver assigned name
\par \tab char\tab \tab \tab FileName[256];\tab \tab \tab \tab // FileName of driver
\par 
\par \tab geDriver_Mode\tab Modes[MAX_DRIVER_MODES];\tab // Modes for this driver
\par \tab int32\tab \tab \tab NumModes;\tab \tab \tab \tab \tab // Num modes for this driver
\par 
\par \} geDriver;
\par 
\par typedef struct
\par \{
\par \tab // Info the enuming fills in
\par \tab geDriver\tab \tab SubDrivers[MAX_SUB_DRIVERS];
\par \tab int32\tab \tab \tab NumSubDrivers;
\par \tab char\tab \tab \tab *CurFileName;
\par 
\par \tab //\tab Data for current driver
\par \tab geBoolean\tab \tab Active;\tab \tab \tab \tab // GE_TRUE if a driver and mode has been initialized
\par \tab 
\par \tab HINSTANCE\tab \tab DriverHandle;\tab \tab // CurrentDriver Handle (for DLL)
\par \tab 
\par \tab geDriver\tab \tab *CurDriver;\tab \tab \tab // Current driver
\par \tab geDriver_Mode\tab *CurMode;\tab \tab \tab // Current mode
\par \tab DRV_Driver\tab \tab *RDriver;\tab \tab \tab // Current driver function hook
\par \} Sys_DriverInfo;
\par 
\par typedef struct
\par \{
\par \tab int32\tab \tab \tab TraversedPolys;\tab \tab // Total Polys traversed
\par \tab int32\tab \tab \tab SentPolys;\tab \tab \tab // Total Polys sent to driver
\par \tab int32\tab \tab \tab RenderedPolys;\tab \tab // Total Rendered polys reported by driver
\par 
\par \tab int32\tab \tab \tab NumModels;
\par \tab int32\tab \tab \tab NumMirrors;
\par #ifdef\tab MESHES
\par \tab int32\tab \tab \tab NumMeshes;
\par #endif
\par \tab int32\tab \tab \tab NumActors;
\par \tab int32\tab \tab \tab NumDLights;
\par \tab int32\tab \tab \tab NumFog;
\par \tab int32\tab \tab \tab LMap1;\tab \tab \tab \tab // Lmaps gone through first pass (reg light)
\par \tab int32\tab \tab \tab LMap2;\tab \tab \tab \tab // LMaps gone through 2nd pass (fog)
\par \} Sys_DebugInfo;
\par 
\par //\{\} Hack:
\par 
\par #define ENGINE_PF_WORLD\tab \tab \tab (0)
\par #define ENGINE_PF_LIGHTMAP\tab \tab (1)
\par #define ENGINE_PF_USER\tab \tab \tab (2)
\par #define ENGINE_PF_USER_ALPHA\tab (3)
\par #define ENGINE_PF_DECAL\tab \tab \tab (4)
\par #define ENGINE_PF_PALETTE\tab \tab (5)
\par #define ENGINE_PF_ALPHA_CHANNEL\tab (6)
\par #define ENGINE_PF_COUNT\tab \tab \tab (7)
\par 
\par typedef struct BitmapList BitmapList;
\par 
\par #define ENGINE_MAX_WORLDS\tab \tab 8
\par 
\par typedef struct
\par \{
\par \tab geWorld\tab \tab *World;
\par \tab int32\tab \tab RefCount;
\par 
\par \} geEngine_WorldList;
\par 
\par // System globals initialized by module it belongs to...
\par typedef struct geEngine
\par \{
\par \tab //\tab System info
\par \tab Sys_DriverInfo\tab \tab DriverInfo;\tab \tab \tab // Info about current driver (this should be enumed)
\par \tab Sys_CPUInfo\tab \tab \tab CPUInfo;\tab \tab \tab // Info about the Cpu
\par \tab Sys_DebugInfo\tab \tab DebugInfo;
\par 
\par \tab LARGE_INTEGER\tab \tab CurrentTic;
\par 
\par \tab Sys_FontInfo\tab \tab FontInfo;
\par 
\par \tab User_Info\tab \tab \tab *UserInfo;\tab \tab \tab // Client loaded resources, etc...
\par 
\par \tab HWND\tab \tab \tab \tab hWnd;
\par \tab char\tab \tab \tab \tab AppName[200];
\par 
\par \tab //\tab Global LUT's
\par \tab int16\tab \tab \tab \tab WaveTable[20];\tab \tab // Global Wave table (for wavy effects, pumping, etc)
\par \tab int16\tab \tab \tab \tab WaveDir[20];
\par 
\par \tab // Global info that modules need to render world
\par \tab //geWorld\tab \tab \tab \tab *World;\tab \tab \tab \tab // The global World
\par \tab geEngine_WorldList\tab WorldList[ENGINE_MAX_WORLDS];\tab \tab // Current list of worlds renderable by the engine
\par 
\par \tab int32\tab \tab \tab \tab NumWorlds;\tab \tab \tab \tab \tab \tab // Number of active worlds in world list
\par \tab geWorld\tab \tab \tab \tab *Worlds[ENGINE_MAX_WORLDS];\tab \tab // Linear array of worlds contained in WorldList
\par \tab 
\par \tab // Light module info
\par \tab uint8\tab \tab \tab \tab StyleLUT1[64][256];\tab // Style intensity table (StyleLUT1[Intensity][Number]);
\par 
\par \tab geBoolean\tab \tab \tab Changed;\tab \tab \tab // == GE_TRUE if needs to be updated with Driver
\par 
\par \tab geBoolean\tab \tab \tab DisplayFrameRateCounter; // Whether or not to display the FPS string
\par 
\par \tab char\tab \tab \tab \tab *DriverDirectory;\tab // Path to load driver DLLs from
\par 
\par \tab BitmapList\tab \tab \tab *AttachedBitmaps;
\par 
\par \tab geBoolean\tab \tab \tab HasPixelFormat[ENGINE_PF_COUNT];
\par \tab geRDriver_PixelFormat PixelFormats[ENGINE_PF_COUNT];
\par 
\par \tab float\tab \tab \tab \tab CurrentGamma;
\par \tab float\tab \tab \tab \tab BitmapGamma;
\par 
\par \tab geEngine_FrameState\tab FrameState;
\par 
\par \} geEngine;
\par 
\par //=====================================================================================
\par //\tab Function prototypes
\par //=====================================================================================
\par 
\par //Engine
\par geEngine *Sys_EngineCreate(HWND hWnd, const char *AppName, const char *DriverDirectory, uint32 Version);
\par 
\par geBoolean\tab Sys_ShutdownDriver(geEngine *Engine);
\par 
\par void\tab \tab Sys_EngineFree(geEngine *Engine);
\par 
\par #ifdef\tab MESHES
\par Mesh_RenderQ *Sys_WorldAddMesh(geWorld *World, Mesh_MeshDef *MeshDef, int32 Flags);
\par Mesh_MeshDef *Sys_WorldCreateMesh(geWorld *World, const char *BitmapPath, const char *FileName);
\par void Sys_WorldFreeMesh(geWorld *World, Mesh_MeshDef *MeshDef);
\par #endif
\par 
\par // Misc system
\par geBoolean Sys_GetCPUFreq(Sys_CPUInfo *Info);
\par geBoolean Sys_EnginePrint(geEngine *Engine, int32 x, int32 y, char *String);
\par geBoolean\tab Sys_EngineResetDecorators(geEngine *Engine);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454069983}OpenSource/Source/Engine/DCommon Subdirectory{\*\bkmkend _Toc454069983}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the common driver header file. Its subdirectories contain the individual drivers.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069984}Dcommon.h{\*\bkmkend _Toc454069984}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DCommon.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Header file for all driver modules.                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef DCOMMON_H
\par #define DCOMMON_H
\par 
\par //#include <Windows.h>\tab // \{\} CB commented out windows
\par // If you include Windows it MUST be before dcommon!
\par 
\par // FIXME:  What should we do with these?
\par #include "XForm3d.h"
\par #include "Vec3d.h"
\par #include "PixelFormat.h"
\par #include "geTypes.h"\tab \tab // This is a no no
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #pragma pack(push)
\par #pragma pack(8)
\par 
\par #ifndef WINVER
\par #ifdef STRICT
\par typedef struct HWND__ * HWND;
\par typedef struct HBITMAP__ * HBITMAP;
\par #else // STRICT
\par typedef void * HWND;
\par typedef void * HBITMAP;
\par #endif // STRICT
\par 
\par #ifndef VOID
\par #define VOID void
\par typedef char CHAR;
\par typedef short SHORT;
\par typedef long LONG;
\par #endif
\par 
\par #ifndef BASETYPES
\par #define BASETYPES
\par typedef unsigned long ULONG;
\par typedef ULONG *PULONG;
\par typedef unsigned short USHORT;
\par typedef USHORT *PUSHORT;
\par typedef unsigned char UCHAR;
\par typedef UCHAR *PUCHAR;
\par typedef char *PSZ;
\par #endif  /* !BASETYPES */
\par 
\par typedef unsigned long       DWORD;
\par typedef int                 geBoolean;
\par typedef unsigned char       BYTE;
\par typedef unsigned short      WORD;
\par typedef float               FLOAT;
\par 
\par typedef struct tagRECT
\par \{
\par     LONG    left;
\par     LONG    top;
\par     LONG    right;
\par     LONG    bottom;
\par \} RECT;
\par 
\par #endif // WINVER
\par 
\par #define\tab DRIVERCC _fastcall
\par 
\par #ifndef __cplusplus
\par \tab #define DllImport\tab __declspec( dllimport )
\par \tab #define DllExport\tab __declspec( dllexport )
\par #else
\par \tab #define DllImport\tab extern "C" __declspec( dllimport )
\par \tab #define DllExport\tab extern "C" __declspec( dllexport )
\par #endif
\par 
\par #define DRV_VERSION_MAJOR\tab \tab 100\tab \tab \tab // Genesis 1.0
\par #define DRV_VERSION_MINOR\tab \tab 2
\par #define DRV_VMAJS\tab \tab \tab \tab "100"
\par #define DRV_VMINS\tab \tab \tab \tab "2"
\par 
\par #ifndef US_TYPEDEFS
\par #define US_TYPEDEFS
\par 
\par \tab typedef uint8\tab U8;
\par \tab typedef uint16\tab U16;
\par \tab typedef uint32\tab U32;
\par \tab typedef char\tab C8;
\par \tab typedef int8\tab S8;
\par \tab typedef int16\tab S16;
\par \tab typedef int32\tab S32;
\par #endif
\par 
\par //===
\par typedef struct geRDriver_THandle\tab geRDriver_THandle;
\par 
\par // DriverFormat flags
\par #define RDRIVER_PF_2D_SHIFT\tab \tab \tab \tab \tab (0)\tab \tab \tab // Supports being used as a 2d decal surface
\par #define RDRIVER_PF_3D_SHIFT\tab \tab \tab \tab \tab (1)\tab \tab \tab // Supports being used as a 3d poly surface
\par #define RDRIVER_PF_LIGHTMAP_SHIFT\tab \tab \tab (2)\tab \tab \tab // Surface is a lightmap surface
\par #define RDRIVER_PF_PALETTE_SHIFT\tab \tab \tab (3)\tab \tab \tab // Surface is a palette
\par #define RDRIVER_PF_ALPHA_SHIFT\tab \tab \tab \tab (4)\tab \tab \tab // Surface is an alpha map
\par #define RDRIVER_PF_OPTIONAL_SHIFT\tab \tab \tab (16)
\par #define RDRIVER_PF_HAS_ALPHA_SHIFT\tab \tab \tab (RDRIVER_PF_OPTIONAL_SHIFT + 0)\tab \tab // Surface can take an alpha map
\par #define RDRIVER_PF_CAN_DO_COLORKEY_SHIFT\tab (RDRIVER_PF_OPTIONAL_SHIFT + 1)\tab \tab // Surface supports colorkeying
\par #define RDRIVER_PF_COMBINE_LIGHTMAP_SHIFT\tab (RDRIVER_PF_OPTIONAL_SHIFT + 2)\tab \tab \tab // Supports being rendered with a lightmap (3d will be set as well)
\par 
\par #define RDRIVER_PF_2D\tab \tab \tab \tab \tab (1<<RDRIVER_PF_2D_SHIFT)\tab \tab \tab \tab 
\par #define RDRIVER_PF_3D\tab \tab \tab \tab \tab (1<<RDRIVER_PF_3D_SHIFT)\tab \tab \tab \tab 
\par #define RDRIVER_PF_LIGHTMAP\tab \tab \tab \tab (1<<RDRIVER_PF_LIGHTMAP_SHIFT)\tab \tab \tab 
\par #define RDRIVER_PF_COMBINE_LIGHTMAP\tab \tab (1<<RDRIVER_PF_COMBINE_LIGHTMAP_SHIFT)\tab 
\par #define RDRIVER_PF_PALETTE\tab \tab \tab \tab (1<<RDRIVER_PF_PALETTE_SHIFT)\tab \tab \tab 
\par #define RDRIVER_PF_ALPHA\tab \tab \tab \tab (1<<RDRIVER_PF_ALPHA_SHIFT)\tab \tab \tab 
\par #define RDRIVER_PF_CAN_DO_COLORKEY\tab \tab (1<<RDRIVER_PF_CAN_DO_COLORKEY_SHIFT)
\par #define RDRIVER_PF_HAS_ALPHA\tab \tab \tab (1<<RDRIVER_PF_HAS_ALPHA_SHIFT)\tab \tab 
\par #define RDRIVER_PF_MAJOR_MASK\tab \tab \tab ((1<<RDRIVER_PF_OPTIONAL_SHIFT)-1)
\par 
\par typedef struct
\par \{
\par \tab gePixelFormat\tab PixelFormat;
\par \tab uint32\tab \tab \tab Flags;\tab \tab \tab \tab 
\par \} geRDriver_PixelFormat;
\par 
\par #define RDRIVER_THANDLE_HAS_COLORKEY\tab (1<<0)\tab \tab // The thandle is using color keying
\par 
\par typedef struct
\par \{
\par \tab int32\tab \tab \tab \tab \tab Width;
\par \tab int32\tab \tab \tab \tab \tab Height;
\par \tab int32\tab \tab \tab \tab \tab Stride;
\par \tab uint32\tab \tab \tab \tab \tab ColorKey;
\par \tab uint32\tab \tab \tab \tab \tab Flags;
\par \tab geRDriver_PixelFormat\tab PixelFormat;
\par 
\par \} geRDriver_THandleInfo;
\par 
\par //===
\par 
\par typedef struct
\par \{
\par \tab S32\tab LMapCount[16][4];\tab \tab \tab \tab // LMap size / MipLevel
\par \} DRV_Debug;
\par 
\par typedef struct
\par \{
\par \tab int32\tab \tab CacheFull;
\par \tab int32\tab \tab CacheRemoved;
\par \tab int32\tab \tab CacheFlushes;
\par \tab int32\tab \tab TexMisses;
\par \tab int32\tab \tab LMapMisses;
\par \} DRV_CacheInfo;
\par 
\par typedef struct
\par \{
\par \tab HWND\tab \tab hWnd;
\par \tab 
\par \tab U8\tab \tab \tab *Buffer;
\par 
\par \tab S32\tab \tab \tab Width;
\par \tab S32\tab \tab \tab Height;
\par 
\par \tab S32\tab \tab \tab PixelPitch;
\par \tab S32\tab \tab \tab BytesPerPixel;
\par 
\par \tab S32\tab \tab \tab R_shift;
\par \tab S32\tab \tab \tab G_shift;
\par \tab S32\tab \tab \tab B_shift;
\par 
\par \tab U32\tab \tab \tab R_mask;
\par \tab U32\tab \tab \tab G_mask;
\par \tab U32\tab \tab \tab B_mask;
\par 
\par \tab S32\tab \tab \tab R_width;
\par \tab S32\tab \tab \tab G_width;
\par \tab S32\tab \tab \tab B_width;
\par \} DRV_Window;
\par 
\par typedef struct 
\par \{
\par     U8 r, g, b;\tab \tab \tab \tab \tab \tab \tab \tab // RGB components for RGB lightmaps
\par \} DRV_RGB;
\par 
\par //===========================================================================================
\par // FIXME:  Get palette stuff, and bitmap out of dcommon
\par #define\tab DRV_PALETTE_ENTRIES\tab 256
\par typedef\tab DRV_RGB\tab DRV_Palette[DRV_PALETTE_ENTRIES];
\par 
\par // Bitmap hook into the drivers (engine uses these explicitly as is)
\par typedef struct
\par \{
\par \tab char\tab Name[32];\tab \tab \tab \tab \tab \tab // Duh, name of bitmap...
\par \tab U32\tab \tab Flags;\tab \tab \tab \tab \tab \tab \tab // Flags
\par \tab S32\tab \tab Width;\tab \tab \tab \tab \tab \tab \tab // Width of bitmap
\par \tab S32\tab \tab Height;\tab \tab \tab \tab \tab \tab \tab // Height of bitmap
\par \tab U8\tab \tab MipLevels;
\par \tab U8\tab \tab *BitPtr[4];\tab \tab \tab \tab \tab \tab // Pointer to location of bits (up to 4 miplevels)
\par \tab DRV_RGB *Palette;
\par 
\par \tab // Driver sets these in register functions
\par \tab //S32\tab \tab Id;\tab \tab \tab \tab \tab \tab \tab \tab // Bitmap handle for hardware...
\par \tab geRDriver_THandle\tab *THandle;
\par \} DRV_Bitmap;
\par //===========================================================================================
\par 
\par #define LMAP_TYPE_LIGHT\tab \tab \tab 0
\par #define LMAP_TYPE_FOG\tab \tab \tab 1
\par 
\par // Lightmap hook into the drivers (Engine uses these exlicitly as is...)
\par // Lightmap info
\par typedef struct
\par \{
\par \tab S16\tab \tab \tab \tab \tab Width, Height;\tab \tab \tab \tab // lightmap width/height / 16 +1
\par     S32\tab \tab \tab \tab \tab MinU, MinV;\tab \tab \tab \tab \tab // Min U,V values
\par     DRV_RGB\tab \tab \tab \tab *RGBLight[2];\tab \tab \tab \tab // Pointer to RGB light map data
\par 
\par \tab S32\tab \tab \tab \tab \tab Face;\tab \tab \tab \tab \tab \tab // Face that this map belongs too
\par \tab geRDriver_THandle\tab *THandle;
\par \} DRV_LInfo;
\par 
\par typedef struct
\par \{
\par \tab float\tab \tab ShiftU;\tab \tab \tab \tab \tab \tab // How much to shift right before draw
\par \tab float\tab \tab ShiftV;
\par 
\par \tab float\tab \tab DrawScaleU;\tab \tab \tab \tab \tab \tab // How much to scale right before draw
\par \tab float\tab \tab DrawScaleV;
\par \} DRV_TexInfo;
\par     
\par // Render Flags for ALL render functions
\par #define DRV_RENDER_ALPHA\tab \tab (1<<0)\tab // Render function should expect alpha set in vertices
\par #define DRV_RENDER_FLUSH\tab \tab (1<<1)\tab // Render function should gaurentee that this render happens NOW
\par #define DRV_RENDER_NO_ZMASK\tab \tab (1<<2)\tab // No zbuffering should be performed
\par #define DRV_RENDER_NO_ZWRITE\tab (1<<3)\tab // No z writing will be performed
\par #define DRV_RENDER_CLAMP_UV\tab \tab (1<<4)\tab // Clamp UV in both directions
\par 
\par //
\par //  PolyMode flags\tab (A method to override how polys are drawn for debugging purposes...)
\par //
\par // Put these in the poly flags!!!  They are currently not used right now...
\par #define DRV_POLYMODE_NORMAL\tab \tab 1\tab \tab \tab // Draw as is
\par #define DRV_POLYMODE_GOURAUD\tab 2\tab \tab \tab // Gouraud only
\par #define DRV_POLYMODE_LINES\tab \tab 3\tab \tab \tab // Outlines only
\par 
\par 
\par typedef struct
\par \{
\par \tab float\tab x,y,z;\tab \tab \tab \tab \tab \tab // float 3d z value
\par \tab float\tab u,v;\tab \tab \tab \tab \tab \tab // float texture coords
\par \tab float\tab r,g,b,a;\tab \tab \tab \tab \tab // Color of point, and Alpha
\par \} DRV_TLVertex;
\par 
\par typedef struct
\par \{
\par \tab char\tab \tab \tab \tab AppName[512];
\par \tab S32\tab \tab \tab \tab \tab Driver;
\par \tab char\tab \tab \tab \tab DriverName[512];
\par \tab S32\tab \tab \tab \tab \tab Mode;
\par \tab char\tab \tab \tab \tab ModeName[512];
\par \tab S32\tab \tab \tab \tab \tab Width;
\par \tab S32\tab \tab \tab \tab \tab Height;
\par \tab HWND\tab \tab \tab \tab hWnd;
\par \} DRV_DriverHook;
\par 
\par typedef struct
\par \{
\par \tab // Texture info
\par \tab geVec3d\tab \tab VecU;
\par \tab geVec3d\tab \tab VecV;
\par \tab int32\tab \tab TexMinsX;
\par \tab int32\tab \tab TexMinsY;
\par \tab int32\tab \tab TexWidth;
\par \tab int32\tab \tab TexHeight;
\par \tab float\tab \tab TexShiftX;
\par \tab float\tab \tab TexShiftY;
\par 
\par \tab // Camera info
\par \tab geXForm3d\tab CXForm;
\par \tab geVec3d\tab \tab CPov;
\par 
\par \tab float\tab \tab XCenter;
\par \tab float\tab \tab YCenter;
\par 
\par \tab float\tab \tab XScale;
\par \tab float\tab \tab YScale;
\par \tab float\tab \tab XScaleInv;\tab \tab \tab // 1 / XScale
\par \tab float\tab \tab YScaleInv;\tab \tab \tab // 1 / YScale;
\par \tab float\tab \tab ZScale;\tab \tab \tab \tab // camera z scale
\par 
\par 
\par \tab geVec3d\tab \tab PlaneNormal;\tab \tab // Face normal
\par \tab float\tab \tab PlaneDist;
\par \tab geVec3d\tab \tab RPlaneNormal;\tab \tab // Rotated Face normal
\par \tab geVec3d\tab \tab Pov;
\par \} GInfo;
\par 
\par // What the driver can support as far as texture mapping is concerned
\par #define DRV_SUPPORT_ALPHA\tab \tab \tab \tab \tab (1<<0)\tab \tab // Driver can do alpha blending
\par #define DRV_SUPPORT_COLORKEY\tab \tab \tab \tab (1<<1)\tab \tab // Driver can do pixel masking
\par #define DRV_SUPPORT_GAMMA\tab \tab \tab \tab \tab (1<<2)\tab \tab // Gamma function works with the driver
\par 
\par // A hint to the engine as far as what to turn on and off...
\par #define DRV_PREFERENCE_NO_MIRRORS\tab \tab \tab (1<<0)\tab \tab // Engine should NOT render mirrors
\par #define DRV_PREFERENCE_SORT_WORLD_FB\tab \tab (1<<1)\tab \tab // Sort world Front to Back
\par #define DRV_PREFERENCE_SORT_WORLD_BF\tab \tab (1<<2)\tab \tab // Sort world Back to Front
\par #define DRV_PREFERENCE_DRAW_WALPHA_IN_BSP\tab (1<<3)\tab \tab // Draw world alphas in BSP sort
\par 
\par typedef struct
\par \{
\par \tab U32\tab \tab \tab CanSupportFlags;
\par \tab U32\tab \tab \tab PreferenceFlags;
\par \tab U32\tab \tab \tab Reserved1;
\par \tab U32\tab \tab \tab Reserved2;
\par \} DRV_EngineSettings;
\par 
\par // Enumeration defines
\par typedef geBoolean DRV_ENUM_MODES_CB( S32 Mode, char *ModeName, S32 Width, S32 Height, void *Context);
\par typedef geBoolean DRV_ENUM_DRV_CB( S32 Driver, char *DriverName, void *Context);
\par 
\par typedef geBoolean DRIVERCC DRV_ENUM_DRIVER(DRV_ENUM_DRV_CB *Cb, void *Context); 
\par typedef geBoolean DRIVERCC DRV_ENUM_MODES(S32 Driver, char *DriverName, DRV_ENUM_MODES_CB *Cb, void *Context); 
\par 
\par typedef geBoolean DRV_ENUM_PFORMAT_CB(geRDriver_PixelFormat *Format, void *Context);
\par typedef geBoolean DRIVERCC DRV_ENUM_PFORMAT(DRV_ENUM_PFORMAT_CB *Cb, void *Context); 
\par 
\par // Create/Destroy/Etc Driver functions
\par typedef geBoolean DRIVERCC DRV_INIT(DRV_DriverHook *Hook);
\par typedef geBoolean DRIVERCC DRV_SHUTDOWN(void);
\par typedef geBoolean DRIVERCC DRV_RESET(void);
\par typedef geBoolean DRIVERCC DRV_UPDATE_WINDOW(void);
\par typedef geBoolean DRIVERCC DRV_SET_ACTIVE(geBoolean active);
\par 
\par // Texture surface functions
\par typedef geRDriver_THandle *DRIVERCC CREATE_TEXTURE(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par typedef geBoolean DRIVERCC DESTROY_TEXTURE(geRDriver_THandle *THandle);
\par 
\par typedef geBoolean DRIVERCC LOCK_THANDLE(geRDriver_THandle *THandle, int32 MipLevel, void **Data);
\par typedef geBoolean DRIVERCC UNLOCK_THANDLE(geRDriver_THandle *THandle, int32 MipLevel);
\par 
\par typedef geBoolean DRIVERCC SET_PALETTE(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par typedef geRDriver_THandle *DRIVERCC GET_PALETTE(geRDriver_THandle *THandle);
\par 
\par typedef geBoolean DRIVERCC SET_ALPHA(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par typedef geRDriver_THandle *DRIVERCC GET_ALPHA(geRDriver_THandle *THandle);
\par 
\par typedef geBoolean DRIVERCC THANDLE_GET_INFO(geRDriver_THandle *THandle, int32 MipLevel, geRDriver_THandleInfo *Info);
\par 
\par // Scene management functions
\par typedef geBoolean DRIVERCC BEGIN_SCENE(geBoolean Clear, geBoolean ClearZ, RECT *WorldRect);
\par typedef geBoolean DRIVERCC END_SCENE(void);
\par typedef geBoolean DRIVERCC BEGIN_WORLD(void);
\par typedef geBoolean DRIVERCC END_WORLD(void);
\par typedef geBoolean DRIVERCC BEGIN_MESHES(void);
\par typedef geBoolean DRIVERCC END_MESHES(void);
\par typedef geBoolean DRIVERCC BEGIN_MODELS(void);
\par typedef geBoolean DRIVERCC END_MODELS(void);
\par 
\par // Render functions
\par typedef geBoolean DRIVERCC RENDER_G_POLY(DRV_TLVertex *Pnts, S32 NumPoints, U32 Flags);
\par typedef geBoolean DRIVERCC RENDER_W_POLY(DRV_TLVertex *Pnts, S32 NumPoints, geRDriver_THandle *THandle, DRV_TexInfo *TexInfo, DRV_LInfo *LInfo, U32 Flags);
\par typedef geBoolean DRIVERCC RENDER_MT_POLY(DRV_TLVertex *Pnts, S32 NumPoints, geRDriver_THandle *THandle, U32 Flags);
\par 
\par typedef geBoolean DRIVERCC DRAW_DECAL(geRDriver_THandle *THandle, RECT *SRect, int32 x, int32 y);
\par 
\par typedef geBoolean DRIVERCC SCREEN_SHOT(const char *Name);
\par 
\par typedef geBoolean DRIVERCC SET_GAMMA(float Gamma);
\par typedef geBoolean DRIVERCC GET_GAMMA(float *Gamma);
\par 
\par typedef void SETUP_LIGHTMAP_CB(DRV_LInfo *LInfo, geBoolean *Dynamic);
\par 
\par typedef struct
\par \{
\par \tab char\tab \tab \tab \tab *Name;
\par \tab S32\tab \tab \tab \tab \tab VersionMajor;
\par \tab S32\tab \tab \tab \tab \tab VersionMinor;
\par 
\par \tab // Error handling hooks set by driver
\par \tab S32\tab \tab \tab \tab \tab LastError;\tab \tab \tab \tab \tab \tab \tab // Last error driver made
\par \tab char\tab \tab \tab \tab *LastErrorStr;\tab \tab \tab \tab \tab \tab // NULL terminated error string
\par \tab 
\par \tab // Enum Modes/Drivers
\par \tab DRV_ENUM_DRIVER\tab \tab *EnumSubDrivers;
\par \tab DRV_ENUM_MODES\tab \tab *EnumModes;
\par \tab 
\par \tab DRV_ENUM_PFORMAT\tab *EnumPixelFormats;
\par 
\par \tab // Init/DeInit functions
\par \tab DRV_INIT\tab \tab \tab \tab \tab *Init;
\par \tab DRV_SHUTDOWN\tab \tab \tab \tab *Shutdown;
\par \tab DRV_RESET\tab \tab \tab \tab \tab *Reset;
\par \tab DRV_UPDATE_WINDOW\tab \tab \tab *UpdateWindow;
\par \tab DRV_SET_ACTIVE\tab \tab \tab \tab *SetActive;
\par \tab 
\par \tab // Create/Destroy texture functions
\par \tab CREATE_TEXTURE\tab \tab *THandle_Create;
\par \tab DESTROY_TEXTURE\tab \tab *THandle_Destroy;
\par 
\par \tab // Texture manipulation functions
\par \tab LOCK_THANDLE\tab \tab *THandle_Lock;
\par \tab UNLOCK_THANDLE\tab \tab *THandle_UnLock;
\par 
\par \tab // Palette access functions
\par \tab SET_PALETTE\tab \tab \tab *THandle_SetPalette;
\par \tab GET_PALETTE\tab \tab \tab *THandle_GetPalette;
\par 
\par \tab // Palette access functions
\par \tab SET_ALPHA\tab \tab \tab *THandle_SetAlpha;
\par \tab GET_ALPHA  \tab \tab \tab *THandle_GetAlpha;
\par 
\par \tab THANDLE_GET_INFO\tab *THandle_GetInfo;
\par 
\par \tab // Scene management functions
\par \tab BEGIN_SCENE\tab \tab \tab *BeginScene;
\par \tab END_SCENE\tab \tab \tab *EndScene;
\par \tab BEGIN_WORLD\tab \tab \tab *BeginWorld;
\par \tab END_WORLD\tab \tab \tab *EndWorld;
\par \tab BEGIN_MESHES\tab \tab *BeginMeshes;
\par \tab END_MESHES\tab \tab \tab *EndMeshes;
\par \tab BEGIN_MODELS\tab \tab *BeginModels;
\par \tab END_MODELS\tab \tab \tab *EndModels;
\par \tab 
\par \tab // Render functions
\par \tab RENDER_G_POLY\tab \tab *RenderGouraudPoly;
\par \tab RENDER_W_POLY\tab \tab *RenderWorldPoly;
\par \tab RENDER_MT_POLY\tab \tab *RenderMiscTexturePoly;
\par 
\par \tab //Decal functions
\par \tab DRAW_DECAL\tab \tab \tab *DrawDecal;
\par 
\par \tab S32\tab \tab \tab \tab \tab NumWorldPixels;
\par \tab S32\tab \tab \tab \tab \tab NumWorldSpans;
\par \tab S32\tab \tab \tab \tab \tab NumRenderedPolys;
\par \tab DRV_CacheInfo\tab \tab *CacheInfo;
\par 
\par \tab SCREEN_SHOT\tab \tab \tab *ScreenShot;
\par 
\par \tab SET_GAMMA\tab \tab \tab *SetGamma;
\par \tab GET_GAMMA\tab \tab \tab *GetGamma;
\par \tab 
\par \tab // Driver preferences
\par \tab DRV_EngineSettings\tab *EngineSettings;
\par 
\par \tab // The engine supplies these for the drivers misc use
\par \tab SETUP_LIGHTMAP_CB\tab *SetupLightmap;
\par 
\par \tab // Temp hack global
\par \tab GInfo\tab \tab \tab \tab *GlobalInfo;
\par \} DRV_Driver;
\par 
\par typedef geBoolean DRV_Hook(DRV_Driver **Hook);
\par 
\par //
\par //\tab Error defines set by the driver.  These will be in the LastError member of DRV_Driver
\par //\tab structure.  LastErrorStr will contain a NULL terminated detail error string set by the driver
\par //
\par #define DRV_ERROR_NONE\tab \tab \tab \tab \tab 0\tab // No error has occured
\par #define DRV_ERROR_INVALID_PARMS\tab \tab \tab 1\tab // invalid parameters passed
\par #define DRV_ERROR_NULL_WINDOW\tab \tab \tab 2\tab // Null window supplied
\par #define DRV_ERROR_INIT_ERROR\tab \tab \tab 3\tab // Error intitializing
\par #define DRV_ERROR_INVALID_REGISTER_MODE\tab 4\tab // Invalid register mode
\par #define DRV_ERROR_NO_MEMORY\tab \tab \tab \tab 5\tab // Not enough ram
\par #define DRV_ERROR_MAX_TEXTURES\tab \tab \tab 6\tab // Max texture capacity has been exceeded...
\par #define DRV_ERROR_GENERIC\tab \tab \tab \tab 7\tab // Generic error\tab  
\par #define DRV_ERROR_UNDEFINED\tab \tab \tab \tab 8\tab // An undefined error has occured
\par #define DRV_ERROR_INVALID_WINDOW_MODE\tab 9\tab // Requested window/full not supported
\par 
\par typedef enum
\par \{
\par \tab RENDER_NONE,
\par \tab RENDER_WORLD,
\par \tab RENDER_MESHES,
\par \tab RENDER_MODELS
\par \} DRV_RENDER_MODE;
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #pragma pack(pop)
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454069985}OpenSource/Source/Engine/D3DDrv Subdirectory{\*\bkmkend _Toc454069985}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the routines for the DirectX Direct 3D driver.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069986}D3derr.h{\*\bkmkend _Toc454069986}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  D3D_Err.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: D3D Error code conversions                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef D3D_ERR_H
\par #define D3D_ERR_H
\par 
\par #include <Windows.h>
\par #include <DDraw.h>
\par #include <D3D.h>
\par 
\par //================================================================================
\par //\tab Global functions
\par //================================================================================
\par char *D3DErrorToString(HRESULT error);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069987}D3d_fx.h{\*\bkmkend _Toc454069987}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  D3D_Fx.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: D3D renderstate wrapper                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef D3D_FX_H
\par #define D3D_FX_H
\par 
\par #include <Windows.h>
\par #include <DDraw.h>
\par #include <D3D.h>
\par 
\par #include "D3D_Main.h"
\par #include "DCommon.h"
\par 
\par void D3DSetTexHandle(D3DTEXTUREHANDLE TexHandle);
\par void D3DSetTexture(int32 Stage, LPDIRECT3DTEXTURE2 Texture);
\par void D3DTexturedPolyOld(void *Pnts, int32 NumPoints);
\par void D3DTexturedPoly(void *Pnts, int32 NumPoints);
\par 
\par void D3DBilinearFilter(D3DTEXTUREFILTER Min, D3DTEXTUREFILTER Mag);
\par void D3DBlendEnable(BOOL Enable);
\par 
\par void D3DBlendFunc (D3DBLEND SFunc, D3DBLEND DFunc);
\par 
\par void D3DZWriteEnable (BOOL Enable);
\par void D3DZFunc (D3DCMPFUNC Func);
\par void D3DZEnable(BOOL Enable);
\par 
\par void D3DTexWrap(DWORD Stage, BOOL Wrap);
\par 
\par void D3DPolygonMode (D3DFILLMODE Mode);
\par 
\par void D3DViewport (int32 x, int32 y, int32 width, int32 height);
\par void D3DDepthRange (float zNear, float zFar);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069988}D3d_main.h{\*\bkmkend _Toc454069988}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  D3D_Main.h                                                                          */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: DD/D3D wrapper                                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef D3D_MAIN_H
\par #define D3D_MAIN_H
\par 
\par #include <Windows.h>
\par #include <DDraw.h>
\par #include <D3D.h>
\par 
\par #define INITGUID
\par 
\par #include "DCommon.h"
\par 
\par #define MAX_APP_MODES\tab \tab \tab \tab \tab 50
\par #define DDMAIN_MAX_D3D_DRIVERS\tab \tab \tab 10
\par #define DDMAIN_MAX_TEXTURE_FORMATS\tab \tab 128
\par #define DDMAIN_MAX_SURFACE_FORMATS\tab \tab 128
\par 
\par #define D3DMAIN_LOG_FILENAME\tab \tab \tab "D3DDrv.Log"
\par 
\par //================================================================================
\par //\tab Structure defs
\par //================================================================================
\par 
\par typedef struct
\par \{
\par     char\tab \tab \tab \tab Name[64];\tab \tab \tab \tab // short name of the driver 
\par     char\tab \tab \tab \tab About[128];\tab \tab \tab \tab // short string about the driver 
\par     D3DDEVICEDESC\tab \tab Desc;\tab \tab \tab \tab \tab // D3DDEVICEDESC for complete information 
\par     GUID\tab \tab \tab \tab Guid;\tab \tab \tab \tab \tab // it's GUID 
\par     BOOL\tab \tab \tab \tab IsHardware;\tab \tab \tab \tab // does this driver represent a hardware device? 
\par     BOOL\tab \tab \tab \tab DoesTextures;\tab \tab \tab // does this driver do texture mapping? 
\par     BOOL\tab \tab \tab \tab DoesZBuffer;\tab \tab \tab // can this driver use a z-buffer? 
\par     BOOL\tab \tab \tab \tab CanDoWindow;\tab \tab \tab // can it render to Window's display depth? 
\par \tab BOOL\tab \tab \tab \tab DoesTransparency;
\par \tab BOOL\tab \tab \tab \tab DoesAlpha;
\par \tab BOOL\tab \tab \tab \tab DoesClamping;
\par \tab BOOL\tab \tab \tab \tab DoesSrcBlending;
\par \tab BOOL\tab \tab \tab \tab DoesDestBlending;
\par 
\par     WORD\tab \tab \tab \tab MaxTextureBlendStages;
\par     WORD\tab \tab \tab \tab MaxSimultaneousTextures;\tab 
\par \tab 
\par \tab BOOL\tab \tab \tab \tab CanUse;\tab \tab \tab \tab \tab // We can use this driver
\par \} DDMain_D3DDriver;
\par 
\par typedef struct 
\par \{
\par     int32\tab \tab \tab \tab Width;\tab \tab \tab \tab \tab \tab \tab // width
\par     int32\tab \tab \tab \tab Height;\tab \tab \tab \tab \tab \tab \tab // height
\par     int32\tab \tab \tab \tab Bpp;\tab \tab \tab \tab \tab \tab \tab // bits per pixel 
\par     BOOL\tab \tab \tab \tab ThisDriverCanDo;\tab \tab \tab \tab // == TRUE if d3d driver can render into
\par \} App_Mode;
\par 
\par typedef struct
\par \{
\par     DDSURFACEDESC2\tab \tab ddsd;\tab \tab \tab \tab \tab \tab \tab // DDSURFACEDESC for complete information 
\par     BOOL\tab \tab \tab \tab HasOneBitAlpha;\tab 
\par     BOOL\tab \tab \tab \tab HasFourBitAlpha;
\par \} DDMain_SurfFormat;
\par 
\par typedef struct
\par \{
\par \tab uint32\tab \tab \tab \tab R[256];
\par \tab uint32\tab \tab \tab \tab G[256];
\par \tab uint32\tab \tab \tab \tab B[256];
\par \tab uint32\tab \tab \tab \tab A[256];
\par \} RGB_LUT;
\par 
\par // App_Info, used for everything global. 
\par typedef struct
\par \{
\par \tab // Window info
\par \tab HWND\tab \tab \tab \tab hWnd;\tab \tab \tab \tab \tab \tab \tab \tab // Handle to parent Window
\par 
\par \tab DDSURFACEDESC2\tab \tab ddsd;
\par 
\par \tab // Mode that we were in before initializing
\par \tab int32\tab \tab \tab \tab OldWidth;\tab \tab \tab \tab \tab \tab \tab // Old screen width
\par \tab int32\tab \tab \tab \tab OldHeight;
\par \tab int32\tab \tab \tab \tab OldBpp;
\par 
\par \tab int32\tab \tab \tab \tab CurrentWidth;
\par \tab int32\tab \tab \tab \tab CurrentHeight;
\par \tab int32\tab \tab \tab \tab CurrentBpp;
\par 
\par \tab int32\tab \tab \tab \tab OldWindowWidth;\tab \tab \tab \tab \tab \tab // Old client width
\par \tab int32\tab \tab \tab \tab OldWindowHeight;
\par \tab int32\tab \tab \tab \tab WindowXOffset;
\par \tab int32\tab \tab \tab \tab WindowYOffset;
\par 
\par \tab RECT\tab \tab \tab \tab OldWindowRect;
\par \tab ULONG\tab \tab \tab \tab OldGWL_STYLE;
\par 
\par \tab geBoolean\tab \tab \tab ModeSet;
\par 
\par \tab char\tab \tab \tab \tab DDName[2048];\tab \tab // Have no idea how big to make this.  Anyone?
\par 
\par \tab LPDIRECTDRAW4\tab \tab lpDD;\tab \tab \tab \tab \tab \tab \tab \tab // The current initialized DD object
\par     LPDIRECT3D3\tab \tab     lpD3D;\tab \tab \tab \tab \tab \tab \tab \tab // The current initialized D3D object
\par 
\par     LPDIRECTDRAWSURFACE4\tab lpFrontBuffer;\tab \tab \tab \tab \tab \tab // front buffer surface 
\par     LPDIRECTDRAWSURFACE4\tab lpBackBuffer;\tab \tab \tab \tab \tab \tab // back buffer surface 
\par     LPDIRECTDRAWSURFACE4\tab lpZBuffer;\tab \tab \tab \tab \tab \tab \tab // z-buffer surface 
\par \tab LPDIRECTDRAWCLIPPER lpClipper;\tab \tab \tab \tab \tab \tab \tab // Clipper in windowed case
\par     BOOL\tab \tab \tab \tab BackBufferInVideo;\tab \tab \tab \tab \tab // back buf in video mem? 
\par     BOOL\tab \tab \tab \tab ZBufferInVideo;\tab \tab \tab \tab \tab \tab // is Z-buf in video mem? 
\par     LPDIRECT3DDEVICE3\tab lpD3DDevice;\tab \tab \tab \tab \tab \tab // D3D device 
\par     LPDIRECT3DVIEWPORT3\tab lpD3DViewport;\tab \tab \tab \tab \tab \tab // D3D viewport
\par 
\par \tab // 2d surface format (for blt'ing to the display)
\par \tab DDSURFACEDESC2\tab \tab ddSurfFormat;\tab \tab \tab \tab \tab \tab // 555 or 565 surface desc
\par 
\par \tab // Texture formats (for the D3D device)
\par \tab DDSURFACEDESC2\tab \tab ddTexFormat;\tab \tab \tab \tab \tab \tab // 555 or 565 surface desc
\par \tab DDSURFACEDESC2\tab \tab ddFourBitAlphaSurfFormat;\tab \tab \tab // 4444 surface desc
\par \tab DDSURFACEDESC2\tab \tab ddOneBitAlphaSurfFormat;\tab \tab \tab // 1555 surface desc
\par 
\par \tab RGB_LUT\tab \tab \tab \tab Lut1;
\par \tab RGB_LUT\tab \tab \tab \tab Lut2;
\par \tab RGB_LUT\tab \tab \tab \tab Lut3;
\par 
\par \tab BOOL\tab \tab \tab \tab IsPrimary;\tab \tab \tab \tab \tab \tab \tab // 
\par \tab BOOL\tab \tab \tab \tab FullScreen;
\par \tab 
\par \tab int32\tab \tab \tab \tab NumModes;
\par \tab App_Mode\tab \tab \tab Modes[MAX_APP_MODES];
\par 
\par \tab int32\tab \tab \tab \tab NumDrivers;
\par \tab DDMain_D3DDriver\tab Drivers[DDMAIN_MAX_D3D_DRIVERS];
\par \tab int32\tab \tab \tab \tab CurrentDriver;
\par 
\par \tab // Surface formats
\par \tab int32\tab \tab \tab \tab NumSurfFormats;\tab \tab \tab \tab \tab \tab // Num 2D texture formats avail (from DD4 object)
\par     DDMain_SurfFormat\tab SurfFormats[DDMAIN_MAX_SURFACE_FORMATS];
\par 
\par     // Texture formats
\par \tab int32\tab \tab \tab \tab NumTextureFormats;\tab \tab \tab \tab \tab // Num 3D texture formats avail (from device)
\par     DDMain_SurfFormat\tab TextureFormats[DDMAIN_MAX_TEXTURE_FORMATS];
\par 
\par \tab BOOL\tab \tab \tab \tab LogToFile;
\par \tab BOOL\tab \tab \tab \tab FoundGoodDevice;
\par \tab BOOL\tab \tab \tab \tab CanDoWindow;
\par \tab 
\par \tab BOOL\tab \tab \tab \tab RenderingIsOK;
\par 
\par \tab DWORD\tab \tab \tab \tab VidMemFree;
\par 
\par \tab float\tab \tab \tab \tab Gamma;
\par \tab BOOL\tab \tab \tab \tab GammaChanged;
\par 
\par \tab geBoolean\tab \tab \tab CanDoMultiTexture;
\par 
\par \tab // DD / D3D Flags
\par \tab uint32\tab \tab \tab \tab Flags;
\par \} App_Info;
\par 
\par // DD enum strcuture.  Used when enuming dd
\par typedef struct
\par \{
\par \tab LPDIRECTDRAW4\tab lpDD;
\par \tab char\tab \tab \tab DriverName[256];
\par \tab BOOL\tab \tab \tab FoundDD;
\par \} DD_Enum;
\par 
\par //================================================================================
\par //\tab Globals
\par //================================================================================
\par extern App_Info\tab AppInfo;\tab \tab \tab \tab // Our global structure that knows all... (once initialized)
\par 
\par //================================================================================
\par //\tab Global functions
\par //================================================================================
\par BOOL\tab \tab \tab \tab D3DMain_InitD3D(HWND hWnd, const char *DriverName, int32 Width, int32 Height);
\par BOOL\tab \tab \tab \tab D3DMain_ShutdownD3D(void);
\par geBoolean\tab \tab \tab D3DMain_Reset(void);
\par void\tab \tab \tab \tab D3DMain_Log(LPSTR Str, ... );
\par BOOL\tab \tab \tab \tab D3DMain_RestoreAllSurfaces(void);
\par 
\par BOOL\tab \tab \tab \tab Main_EnumTextureFormats(void);
\par BOOL\tab \tab \tab \tab D3DMain_EnumDisplayModes(void);
\par BOOL\tab \tab \tab \tab Main_ClearBackBuffer(BOOL Clear, BOOL ClearZ);
\par BOOL\tab \tab \tab \tab Main_ShowBackBuffer(void);
\par 
\par LPDIRECTDRAWSURFACE4 Main_CreateSurface(LPDIRECTDRAW4 lpDD, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwWidth, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab LPDDSURFACEDESC2 lpFormat, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD MemoryFlag);
\par 
\par LPDIRECTDRAWSURFACE4 Main_LoadSurface(\tab LPDIRECTDRAW4 lpDD, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab WORD dwFormat, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwWidth, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const void *pixels, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *pal, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab LPDDSURFACEDESC2 lpFormat, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD MemoryFlag);
\par 
\par LPDIRECTDRAWSURFACE4 Main_LoadSurface2(\tab LPDIRECTDRAW4 lpDD, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwWidth, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const USHORT *Source, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab LPDDSURFACEDESC2 lpFormat, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD MemoryFlag);
\par 
\par BOOL\tab \tab \tab \tab Main_UpdateSurface(\tab LPDIRECTDRAWSURFACE4 lpDDS,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab WORD dwFormat, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwWidth, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const void *pixels, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const char *pal);
\par 
\par BOOL\tab \tab \tab \tab Main_UpdateSurface2(LPDIRECTDRAWSURFACE4 lpDDS,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwWidth, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DWORD dwHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const USHORT *Source);
\par 
\par BOOL\tab \tab \tab \tab D3DMain_GetSurfaceFormats(void);
\par 
\par BOOL\tab \tab \tab \tab Main_CheckDD(void);
\par BOOL\tab \tab \tab \tab D3DMain_GetTextureMemory(void);
\par void\tab \tab \tab \tab Main_BuildRGBGammaTables(float Gamma);
\par 
\par BOOL\tab \tab \tab \tab D3DMain_GetClientWindowOffset(HWND hWnd);
\par geBoolean DRIVERCC\tab D3DMain_UpdateWindow(void);
\par geBoolean DRIVERCC\tab D3DMain_SetActive(geBoolean wParam);
\par 
\par BOOL DRIVERCC EnumSubDrivers(DRV_ENUM_DRV_CB *Cb, void *Context);
\par BOOL DRIVERCC EnumModes(int32 Driver, char *DriverName, DRV_ENUM_MODES_CB *Cb, void *Context);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069989}D3dcache.h{\*\bkmkend _Toc454069989}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  D3DCache.h                                                                          */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: D3D cache manager                                                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef D3DCache_H
\par #define D3DCache_H
\par 
\par #include <Windows.h>
\par #include <DDraw.h>
\par #include <D3D.H>
\par 
\par #include "BaseType.h"
\par #include "DDMemMgr.h"\tab \tab \tab 
\par 
\par #define\tab D3DCACHE_MAX_NAME\tab \tab \tab 256
\par 
\par typedef struct D3DCache\tab \tab \tab \tab D3DCache;
\par typedef struct D3DCache_Type\tab \tab D3DCache_Type;
\par typedef struct D3DCache_Slot\tab \tab D3DCache_Slot;
\par 
\par D3DCache\tab *D3DCache_Create(const char *Name, LPDIRECTDRAW4 lpDD, DDMemMgr_Partition *Partition, geBoolean UseStages);
\par void\tab \tab D3DCache_Destroy(D3DCache *Cache);
\par geBoolean\tab D3DCache_IsValid(D3DCache *Cache);
\par geBoolean\tab D3DCache_EvictAllSurfaces(D3DCache *Cache);
\par D3DCache_Type *D3DCache_FindCacheType(D3DCache *Cache, int32 Width, int32 Height, int32 NumMipLevels, int32 Stage, const DDSURFACEDESC2 *ddsd);
\par D3DCache_Type *D3DCache_InsertCacheType(D3DCache *Cache, int32 Width, int32 Height, int32 NumMipLevels, int32 Stage, const DDSURFACEDESC2 *ddsd);
\par D3DCache_Type *D3DCache_TypeCreate(D3DCache *Cache, int32 Width, int32 Height, int32 NumMipLevels, int32 Stage, const DDSURFACEDESC2 *ddsd);
\par void\tab \tab D3DCache_TypeDestroy(D3DCache_Type *CacheType);
\par geBoolean\tab D3DCache_TypeIsValid(D3DCache_Type *Type);
\par geBoolean\tab D3DCache_FreeAllSlots(D3DCache *Cache);
\par geBoolean\tab D3DCache_AdjustSlots(D3DCache *Cache, const int32 *MaxTable, geBoolean UsePartition);
\par geBoolean\tab D3DCache_SlotIsValid(D3DCache_Slot *Slot);
\par int32\tab \tab D3DCache_SetupSlot(D3DCache *Cache, D3DCache_Slot *Slot, int32 Width, int32 Height, const DDSURFACEDESC2 *SurfDesc, geBoolean UseStage, int32 Stage);
\par D3DCache_Slot *D3DCache_TypeFindSlot(D3DCache_Type *CacheType);
\par void\tab \tab D3DCache_SlotSetUserData(D3DCache_Slot *Slot, void *UserData);
\par void\tab \tab *D3DCache_SlotGetUserData(D3DCache_Slot *Slot);
\par void\tab \tab D3DCache_SlotSetLRU(D3DCache_Slot *Slot, uint32 LRU);
\par uint32\tab \tab D3DCache_SlotGetLRU(D3DCache_Slot *Slot);
\par LPDIRECT3DTEXTURE2 D3DCache_SlotGetTexture(D3DCache_Slot *Slot);
\par LPDIRECTDRAWSURFACE4 D3DCache_SlotGetSurface(D3DCache_Slot *Slot);
\par 
\par uint32 Log2(uint32 P2);
\par int32 SnapToPower2(int32 Width);
\par int32 GetLog(int32 Width, int32 Height);
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069990}D3ddrv.h{\*\bkmkend _Toc454069990}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  D3DDrv.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: D3D driver                                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef D3DDRV_H
\par #define D3DDRV_H
\par 
\par #include "DCommon.h"
\par 
\par extern DRV_Window\tab \tab \tab ClientWindow;
\par extern DRV_Driver\tab \tab \tab D3DDRV;
\par 
\par void DRIVERCC ErrorBox(char *Str);
\par BOOL DRIVERCC DrvShutdown(void);
\par void SetLastDrvError(int32 Error, char *ErrorStr);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069991}DDMemMgr.h{\*\bkmkend _Toc454069991}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DDMemMgr.h                                                                          */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Mini D3D memory manager                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef DDMEMMGR_H
\par #define DDMEMMGR_H
\par 
\par #include <Windows.h>
\par #include <Assert.h>
\par 
\par #include "BaseType.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct\tab DDMemMgr\tab \tab \tab \tab DDMemMgr;
\par typedef struct\tab DDMemMgr_Partition\tab \tab DDMemMgr_Partition;
\par 
\par DDMemMgr\tab *DDMemMgr_Create(uint32 Size);
\par void\tab \tab DDMemMgr_Destroy(DDMemMgr *MemMgr);
\par void\tab \tab DDMemMgr_Reset(DDMemMgr *MemMgr);
\par uint32\tab \tab DDMemMgr_GetFreeMem(DDMemMgr *MemMgr);
\par DDMemMgr_Partition *DDMemMgr_PartitionCreate(DDMemMgr *MemMgr, uint32 Size);
\par void\tab \tab DDMemMgr_PartitionDestroy(DDMemMgr_Partition *Partition);
\par void\tab \tab DDMemMgr_PartitionReset(DDMemMgr_Partition *Partition);
\par uint32\tab \tab DDMemMgr_PartitionGetTotalMem(DDMemMgr_Partition *Partition);
\par uint32\tab \tab DDMemMgr_PartitionGetFreeMem(DDMemMgr_Partition *Partition);
\par geBoolean\tab DDMemMgr_PartitionAllocMem(DDMemMgr_Partition *Partition, uint32 Size);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454069992}Gspan.h{\*\bkmkend _Toc454069992}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GSpan.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Front to back span code                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GSPAN
\par #define GSPAN
\par 
\par #include <Windows.h>
\par 
\par #define MAX_SPAN_LINES\tab \tab \tab 1024
\par #define MAX_SPANS\tab \tab \tab \tab 35000
\par 
\par typedef struct 
\par \{
\par \tab int32\tab x1;\tab \tab \tab \tab \tab \tab \tab \tab // Starting x on screen
\par \tab int32\tab x2;\tab \tab \tab \tab \tab \tab \tab \tab // Ending x on screen
\par \} SPAN;
\par 
\par typedef struct _SList
\par \{
\par     int32\tab Min, Max;
\par     uint8\tab Used;
\par     uint32\tab Flags;
\par     _SList\tab *Last;
\par     _SList\tab *Next;
\par \} SLIST;
\par 
\par typedef struct
\par \{
\par \tab SLIST *First;
\par \tab SLIST *Current;
\par \} SPAN_MINMAX;
\par 
\par extern\tab SPAN\tab SpanLines[MAX_SPAN_LINES];
\par 
\par extern\tab SPAN_MINMAX\tab SMinMax[MAX_SPAN_LINES];\tab \tab \tab // Linked list of spans for each scanline...
\par extern\tab SLIST\tab ScanHash[MAX_SPANS];\tab \tab \tab \tab \tab // hash table for SList
\par 
\par extern\tab int32\tab \tab NumWorldPixels;
\par extern\tab int32\tab \tab NumSpans;
\par extern\tab int32\tab \tab NumSpanPixels[MAX_SPAN_LINES];
\par extern\tab int32\tab \tab PolysRendered;
\par 
\par void\tab DRIVERCC EdgeOutNoUV (int32 x1, int32 y1, int32 x2, int32 y2);
\par void\tab DRIVERCC AddSpanNoUV(int32 x1, int32 x2, int32 y);
\par void\tab ResetSList(void);
\par SLIST\tab *NewSList(void);
\par void\tab ResetSpans(int32 Rows);
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069993}Pcache.h{\*\bkmkend _Toc454069993}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  PCache.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: D3D poly cache                                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef PCACHE_H
\par #define PCACHE_H
\par 
\par extern DRV_CacheInfo\tab \tab \tab \tab \tab \tab CacheInfo;
\par 
\par BOOL PCache_InsertWorldPoly(DRV_TLVertex *Verts, int32 NumVerts, geRDriver_THandle *THandle, DRV_TexInfo *TexInfo, DRV_LInfo *LInfo, uint32 Flags);
\par BOOL PCache_FlushWorldPolys(void);
\par 
\par BOOL PCache_FlushMiscPolys(void);
\par BOOL PCache_InsertMiscPoly(DRV_TLVertex *Verts, int32 NumVerts, geRDriver_THandle *THandle, uint32 Flags);
\par 
\par BOOL PCache_Reset(void);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069994}Render.h{\*\bkmkend _Toc454069994}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Render.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Code to render polys under D3D                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef RENDER_H
\par #define RENDER_H
\par 
\par #include <Windows.h>
\par 
\par #include "DCommon.h"
\par 
\par geBoolean DRIVERCC RenderGouraudPoly(DRV_TLVertex *Pnts, int32 NumPoints, uint32 Flags);
\par geBoolean DRIVERCC RenderWorldPoly(DRV_TLVertex *Pnts, int32 NumPoints, geRDriver_THandle *THandle, DRV_TexInfo *TexInfo, DRV_LInfo *LInfo, uint32 Flags);
\par geBoolean DRIVERCC RenderMiscTexturePoly(DRV_TLVertex *Pnts, int32 NumPoints, geRDriver_THandle *THandle, uint32 Flags);
\par geBoolean DRIVERCC DrawDecal(geRDriver_THandle *THandle, RECT *SRect, int32 x, int32 y);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069995}Scene.h{\*\bkmkend _Toc454069995}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Scene.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Begin/EndScene code, etc                                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SCENE_H
\par #define SCENE_H
\par 
\par #include <Windows.H>
\par 
\par #include "DCommon.h"
\par 
\par #define RENDER_NONE\tab \tab \tab \tab 0
\par #define RENDER_WORLD\tab \tab \tab 1
\par #define RENDER_MESHES\tab \tab \tab 2
\par #define RENDER_MODELS\tab \tab \tab 3
\par 
\par extern int32 RenderMode;
\par 
\par BOOL DRIVERCC BeginScene(BOOL Clear, BOOL ClearZ, RECT *WorldRect);
\par BOOL DRIVERCC EndScene(void);
\par BOOL DRIVERCC BeginWorld(void);
\par BOOL DRIVERCC EndWorld(void);
\par BOOL DRIVERCC BeginMeshes(void);
\par BOOL DRIVERCC EndMeshes(void);
\par BOOL DRIVERCC BeginModels(void);
\par BOOL DRIVERCC EndModels(void);
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069996}Thandle.h{\*\bkmkend _Toc454069996}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  THandle.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: THandle manager for D3DDrv                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef THANDLE_H
\par #define THANDLE_H
\par 
\par #include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "DCommon.h"
\par #include "D3DCache.h"
\par 
\par #include "TPage.h"
\par 
\par //============================================================================================
\par //============================================================================================
\par #define THANDLE_MAX_MIP_LEVELS\tab \tab 255
\par //#define\tab MAX_LMAP_LOG_SIZE\tab \tab \tab 8\tab \tab \tab // Max lightmap size in pixels will be 128x128
\par //#define\tab MAX_LMAP_LOG_SIZE\tab \tab \tab 7\tab \tab \tab // Max lightmap size in pixels will be 64x64
\par #define\tab MAX_LMAP_LOG_SIZE\tab \tab \tab 6\tab \tab \tab // Max lightmap size in pixels will be 32x32
\par 
\par typedef struct
\par \{
\par \tab LPDIRECTDRAWSURFACE4\tab Surface;\tab \tab \tab // The DD surface
\par \tab D3DCache_Type\tab \tab \tab *CacheType;
\par \tab D3DCache_Slot\tab \tab \tab *Slot;
\par \tab 
\par \tab LPDIRECT3DTEXTURE2\tab \tab Texture;\tab \tab \tab // The texture interface to the surface
\par 
\par \tab uint8\tab \tab \tab \tab \tab Flags;
\par \} THandle_MipData;
\par 
\par // THandle flags
\par #define THANDLE_LOCKED\tab \tab \tab \tab \tab (1<<0)
\par #define THANDLE_UPDATE\tab \tab \tab \tab \tab (1<<1)
\par 
\par typedef struct geRDriver_THandle
\par \{
\par \tab uint8\tab \tab \tab \tab \tab Active;
\par \tab int32\tab \tab \tab \tab \tab Width;
\par \tab int32\tab \tab \tab \tab \tab Height;
\par \tab int32\tab \tab \tab \tab \tab Stride;
\par \tab uint8\tab \tab \tab \tab \tab NumMipLevels;
\par \tab uint8\tab \tab \tab \tab \tab Log;
\par 
\par \tab THandle_MipData\tab \tab \tab *MipData;\tab \tab \tab \tab // A mipdata per miplevel
\par 
\par \tab geRDriver_PixelFormat\tab PixelFormat;
\par 
\par #ifdef USE_TPAGES
\par \tab TPage_Block\tab \tab \tab \tab *Block;
\par #endif
\par 
\par \} geRDriver_THandle;
\par 
\par extern geRDriver_THandle\tab TextureHandles[];
\par 
\par extern D3DCache\tab \tab \tab \tab *TextureCache;
\par extern D3DCache\tab \tab \tab \tab *LMapCache;
\par 
\par extern TPage_Mgr\tab \tab \tab *TPageMgr;
\par 
\par extern THandle_MipData\tab \tab SystemToVideo[];
\par 
\par extern CacheNeedsUpdate;
\par 
\par //============================================================================================
\par //============================================================================================
\par void FreeAllCaches(void);
\par geRDriver_THandle *FindTextureHandle(void);
\par geBoolean FreeAllTextureHandles(void);
\par geBoolean THandle_Startup(void);
\par void THandle_Shutdown(void);
\par geRDriver_THandle *Create3DTHandle(geRDriver_THandle *THandle, int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geRDriver_THandle *CreateLightmapTHandle(geRDriver_THandle *THandle, int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geRDriver_THandle *Create2DTHandle(geRDriver_THandle *THandle, int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geRDriver_THandle *DRIVERCC THandle_Create(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geBoolean DRIVERCC THandle_Destroy(geRDriver_THandle *THandle);
\par geBoolean DRIVERCC THandle_Lock(geRDriver_THandle *THandle, int32 MipLevel, void **Bits);
\par geBoolean DRIVERCC THandle_UnLock(geRDriver_THandle *THandle, int32 MipLevel);
\par geBoolean DRIVERCC THandle_GetInfo(geRDriver_THandle *THandle, int32 MipLevel, geRDriver_THandleInfo *Info);
\par geBoolean CreateSystemToVideoSurfaces(void);
\par void DestroySystemToVideoSurfaces(void);
\par geBoolean THandle_CreateSurfaces(THandle_MipData *MipData, int32 Width, int32 Height, DDSURFACEDESC2 *SurfDesc, geBoolean ColorKey, int32 Stage);
\par void THandle_DestroySurfaces(THandle_MipData *MipData);
\par geBoolean THandle_CheckCache(void);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069997}Tpage.h{\*\bkmkend _Toc454069997}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  TPage.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: D3D cache manager using pages                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef TPAGE_H
\par #define TPAGE_H
\par 
\par #include <Windows.h>
\par 
\par #include <DDraw.h>
\par #include <D3D.H>
\par 
\par typedef struct TPage_Mgr\tab TPage_Mgr;
\par typedef\tab struct TPage\tab \tab TPage;
\par typedef struct TPage_Block\tab TPage_Block;
\par 
\par //
\par // TPage_Mgr
\par //
\par TPage_Mgr\tab \tab *TPage_MgrCreate(LPDIRECTDRAW4 lpDD, const DDSURFACEDESC2 *SurfaceDesc, int32 NumPages);
\par void\tab \tab \tab TPage_MgrDestroy(TPage_Mgr **TPageMgr);
\par geBoolean\tab \tab TPage_MgrHasTPage(TPage_Mgr *Mgr, TPage *Page);
\par geBoolean\tab \tab TPage_MgrAttachTPage(TPage_Mgr *Mgr, TPage *TPage);
\par void\tab \tab \tab TPage_MgrDetachTPage(TPage_Mgr *Mgr, TPage *TPage);
\par TPage_Block\tab \tab *TPage_MgrFindOptimalBlock(TPage_Mgr *Mgr, uint32 LRU);
\par 
\par //
\par // TPage
\par //
\par TPage\tab \tab \tab *TPage_Create(LPDIRECTDRAW4 lpDD, const DDSURFACEDESC2 *SurfDesc);
\par void\tab \tab \tab TPage_CreateRef(TPage *Page);
\par void\tab \tab \tab TPage_Destroy(TPage **Page1);
\par geBoolean\tab \tab TPage_HasBlock(TPage *TPage, TPage_Block *Block);
\par geBoolean\tab \tab TPage_AttachBlock(TPage *Page, TPage_Block *Block);
\par void\tab \tab \tab TPage_DetachBlock(TPage *TPage, TPage_Block *Block);
\par geBoolean\tab \tab TPage_CreateSurfaces(TPage *Page, LPDIRECTDRAW4 lpDD, const DDSURFACEDESC2 *SurfDesc);
\par void\tab \tab \tab TPage_DestroySurfaces(TPage *Page);
\par 
\par //
\par //TPage_Block
\par //
\par TPage_Block\tab \tab *TPage_BlockCreate(LPDIRECTDRAWSURFACE4 Surface, LPDIRECT3DTEXTURE2 Texture, const RECT *Rect);
\par geBoolean\tab \tab TPage_BlockCreateRef(TPage_Block *Block);
\par void\tab \tab \tab TPage_BlockDestroy(TPage_Block **Block);
\par LPDIRECT3DTEXTURE2\tab \tab TPage_BlockGetTexture(TPage_Block *Block);
\par LPDIRECTDRAWSURFACE4\tab TPage_BlockGetSurface(TPage_Block *Block);
\par const RECT\tab \tab *TPage_BlockGetRect(TPage_Block *Block);
\par void\tab \tab \tab TPage_BlockSetLRU(TPage_Block *Block, uint32 LRU);
\par void\tab \tab \tab TPage_BlockSetUserData(TPage_Block *Block, void *UserData);
\par void\tab \tab \tab *TPage_BlockGetUserData(TPage_Block *Block);
\par 
\par #endif\tab 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454069998}OpenSource/Source/Engine/Drivers/GlideDrv Subdirectory{\*\bkmkend _Toc454069998}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the Glide driver routines.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454069999}GCache.h{\*\bkmkend _Toc454069999}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GCache.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Texture cache manager for glide                                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GCACHE_H
\par #define GCACHE_H
\par 
\par #include <Windows.h>
\par #include "Glide.h"
\par 
\par #include "BaseType.h"
\par #include "GMemMGr.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define GCACHE_MAX_NAME\tab \tab \tab 256
\par 
\par typedef struct GCache\tab \tab \tab GCache;
\par typedef struct GCache_Type\tab \tab GCache_Type;
\par typedef struct GCache_Slot\tab \tab GCache_Slot;
\par 
\par 
\par GCache\tab \tab *GCache_Create(const char *Name, GMemMgr *MemMgr);
\par void\tab \tab GCache_Destroy(GCache *Cache);
\par geBoolean\tab GCache_Reset(GCache *Cache);
\par GCache_Type *GCache_FindCacheTypeByInfo(GCache *Cache, const GrTexInfo *Info);
\par GCache_Type *GCache_InsertCacheTypeByInfo(GCache *Cache, int32 Width, int32 Height, int32 NumMipLevels, const GrTexInfo *Info);
\par geBoolean\tab GCache_UpdateSlot(GCache *Cache, GCache_Slot *Slot, GrTexInfo *Info);
\par geBoolean\tab GCache_SetTexture(GCache *Cache, GCache_Slot *Slot);
\par GCache_Type *GCache_TypeCreate(GCache *Cache, int32 Width, int32 Height, int32 NumMipLevels, const GrTexInfo *Info);
\par void\tab \tab GCache_TypeDestroy(GCache_Type *CacheType);
\par geBoolean\tab GCache_FreeAllSlots(GCache *Cache);
\par geBoolean\tab GCache_AdjustSlots(GCache *Cache);
\par uint32\tab \tab GCache_SlotGetMemAddress(GCache_Slot *Slot);
\par uint32\tab \tab GCache_SlotGetMemAddress(GCache_Slot *Slot);
\par geBoolean\tab GCache_SlotIsValid(GCache_Slot *Slot);
\par GCache_Slot\tab *GCache_TypeFindSlot(GCache_Type *CacheType);
\par void\tab \tab GCache_SlotSetUserData(GCache_Slot *Slot, void *UserData);
\par void\tab \tab *GCache_SlotGetUserData(GCache_Slot *Slot);
\par GrTexInfo\tab *GCache_SlotGetInfo(GCache_Slot *Slot);
\par void\tab \tab GCache_SlotSetLRU(GCache_Slot *Slot, uint32 LRU);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070000}Glidedrv.h{\*\bkmkend _Toc454070000}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GlideDrv.h                                                                          */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Distributes work to other modules.  This is the main GlideDrv file.    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GLIDEDRV_H
\par #define GLIDEDRV_H
\par 
\par #include "BaseType.h"
\par 
\par #include "DCommon.h"
\par 
\par extern\tab \tab DRV_Driver GLIDEDRV;
\par 
\par void SetLastDrvError(int32 Error, char *ErrorStr);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070001}Gmain.h{\*\bkmkend _Toc454070001}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GMain.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Glide initialization code, etc                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GMAIN_H
\par #define GMAIN_H
\par 
\par #include <Windows.h>
\par 
\par #include "GTHandle.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define GMAIN_MAX_TMU_SUPPORT\tab \tab \tab \tab \tab \tab 8
\par 
\par typedef struct
\par \{
\par \tab uint32\tab \tab MainRam;
\par \tab int32\tab \tab NumTMU;
\par \tab uint32\tab \tab TmuRam[GMAIN_MAX_TMU_SUPPORT];
\par \} GMain_BoardInfo;
\par 
\par extern GrChipID_t\tab \tab \tab TMU[3];\tab \tab \tab \tab \tab // TMU number table
\par 
\par extern DRV_Window\tab \tab \tab ClientWindow;
\par extern GrHwConfiguration\tab GlideHwConfig;
\par extern GMain_BoardInfo\tab \tab g_BoardInfo;\tab \tab \tab // Global board info for current hardware
\par 
\par //============================================================================================
\par //============================================================================================
\par 
\par geBoolean GMain_Startup(DRV_DriverHook *Hook);
\par void GMain_Shutdown(void);
\par geBoolean GMain_GetBoardInfo(GMain_BoardInfo *Info);
\par geBoolean GMain_InitGlideRegisters(void);
\par geBoolean GMain_ResetAll(void);
\par geBoolean DRIVERCC GMain_ScreenShot(const char *Name);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070002}GMemMgr.h{\*\bkmkend _Toc454070002}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GMemMgr.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Mini memory manager for glide                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GMEMMGR_H
\par #define GMEMMGR_H
\par 
\par #include <Windows.h>
\par #include "Glide.h"
\par #include "BaseType.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct GMemMgr\tab \tab \tab GMemMgr;
\par 
\par GMemMgr\tab \tab *GMemMgr_Create(GrChipID_t Tmu, uint32 MinAddress, uint32 MaxAddress);
\par void\tab \tab GMemMgr_Destroy(GMemMgr *MemMgr);
\par uint32\tab \tab GMemMgr_GetTotalMemory(GMemMgr *MemMgr);
\par uint32\tab \tab GMemMgr_GetFreeMemory(GMemMgr *MemMgr);
\par geBoolean\tab GMemMgr_AllocMem(GMemMgr *MemMgr, uint32 Size, uint32 *Address);
\par GrChipID_t\tab GMemMgr_GetTmu(GMemMgr *MemMgr);
\par void\tab \tab GMemMgr_Reset(GMemMgr *MemMgr);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070003}GSpan.h{\*\bkmkend _Toc454070003}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GSpan.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Front to back span code                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GSPAN
\par #define GSPAN
\par 
\par #include <Windows.h>
\par 
\par #include "DCommon.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define MAX_SPAN_LINES\tab \tab \tab 1024
\par #define MAX_SPANS\tab \tab \tab \tab 35000
\par 
\par typedef struct 
\par \{
\par \tab int32\tab x1;\tab \tab \tab \tab \tab \tab \tab // Starting x on screen
\par \tab int32\tab x2;\tab \tab \tab \tab \tab \tab \tab // Ending x on screen
\par \} SPAN;
\par 
\par typedef struct SLIST
\par \{
\par     uint8\tab \tab \tab Used;
\par     int32\tab \tab \tab Min, Max;
\par     uint32\tab \tab \tab Flags;
\par     struct\tab SLIST\tab *Last;
\par     struct\tab SLIST\tab *Next;
\par \} SLIST;
\par 
\par typedef struct
\par \{
\par \tab SLIST *First;
\par \tab SLIST *Current;
\par \} SPAN_MINMAX;
\par 
\par extern\tab SPAN\tab SpanLines[MAX_SPAN_LINES];
\par 
\par extern\tab SPAN_MINMAX\tab SMinMax[MAX_SPAN_LINES];\tab \tab \tab // Linked list of spans for each scanline...
\par extern\tab SLIST\tab ScanHash[MAX_SPANS];\tab \tab \tab \tab \tab // hash table for SList
\par 
\par extern\tab int32\tab NumWorldPixels;
\par extern\tab int32\tab NumSpans;
\par extern\tab int32\tab NumSpanPixels[MAX_SPAN_LINES];
\par extern\tab int32\tab PolysRendered;
\par 
\par void\tab DRIVERCC EdgeOutNoUV (int32 x1, int32 y1, int32 x2, int32 y2);
\par void\tab DRIVERCC AddSpanNoUV(int32 x1, int32 x2, int32 y);
\par 
\par void\tab ResetSList(void);
\par SLIST\tab *NewSList(void);
\par void\tab ResetSpans(int32 Rows);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070004}GThandle.h{\*\bkmkend _Toc454070004}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GTHandle.h                                                                          */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: THandle manager for glide                                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef THANDLE_H
\par #define THANDLE_H
\par 
\par #include <Windows.h>
\par 
\par #include "DCommon.h"
\par #include "BaseType.h"
\par #include "GCache.h"
\par #include "Glide.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define\tab MAX_TEXTURE_HANDLES\tab \tab 20000
\par 
\par // THandle flags
\par #define THANDLE_UPDATE\tab \tab (1<<0)\tab \tab // Force a thandle to be uploaded to the card
\par #define THANDLE_LOCKED\tab \tab (1<<1)\tab \tab // THandle is currently locked (invalid for rendering etc)
\par 
\par #define THANDLE_PALETTE_FORMAT\tab (GE_PIXELFORMAT_32BIT_XRGB)
\par 
\par //============================================================================================
\par //============================================================================================
\par typedef struct
\par \{
\par \tab int32\tab \tab \tab \tab \tab RefCount;
\par \tab int32\tab \tab \tab \tab \tab Width;
\par \tab int32\tab \tab \tab \tab \tab Height;
\par \tab int32\tab \tab \tab \tab \tab LogSize;
\par \tab uint8\tab \tab \tab \tab \tab NumMipLevels;
\par \tab geRDriver_PixelFormat\tab PixelFormat;
\par 
\par \tab uint8\tab \tab \tab \tab \tab Log;
\par \tab float\tab \tab \tab \tab \tab OneOverLogSize_255;
\par \} THandle_Info;
\par 
\par typedef struct geRDriver_THandle
\par \{
\par \tab uint8\tab \tab \tab \tab \tab Active;
\par \tab struct geRDriver_THandle\tab *PalHandle;
\par \tab int32\tab \tab \tab \tab \tab Width;\tab \tab \tab \tab // Original width/height
\par \tab int32\tab \tab \tab \tab \tab Height;
\par \tab int32\tab \tab \tab \tab \tab LogSize;\tab \tab \tab // Square width/height in cache
\par \tab uint8\tab \tab \tab \tab \tab NumMipLevels;
\par \tab float\tab \tab \tab \tab \tab OneOverLogSize_255;
\par \tab uint8\tab \tab \tab \tab \tab Log;
\par \tab geRDriver_PixelFormat\tab PixelFormat;
\par \tab //GrTexInfo\tab \tab \tab \tab Info;
\par \tab //uint16\tab \tab \tab \tab InfoIndex;\tab \tab \tab // Use this ASAP!!!
\par 
\par \tab void\tab \tab \tab \tab \tab *Data;\tab \tab \tab \tab // Actual data bits of LogSize*LogSize
\par 
\par \tab GCache_Type\tab \tab \tab \tab *CacheType;
\par \tab GCache_Slot\tab \tab \tab \tab *Slot;\tab \tab \tab \tab // Current slot this handle is being textured with
\par 
\par \tab uint8\tab \tab \tab \tab \tab Flags;\tab \tab \tab 
\par \} geRDriver_THandle;
\par 
\par extern geRDriver_THandle\tab TextureHandles[MAX_TEXTURE_HANDLES];
\par 
\par // Memory managers
\par extern GMemMgr\tab \tab \tab \tab *MemMgr[2];
\par 
\par // Texture caches
\par extern GCache\tab \tab \tab \tab *TextureCache;\tab \tab \tab // Texture cache
\par extern GCache\tab \tab \tab \tab *LMapCache;\tab \tab \tab \tab // Lightmap texture cache
\par 
\par extern geRDriver_THandle\tab TextureHandles[MAX_TEXTURE_HANDLES];\tab \tab // Contain Texture/Decal/Lightmap handles
\par 
\par extern geBoolean\tab \tab \tab TexturesChanged;
\par extern geBoolean\tab \tab \tab LMapsChanged;
\par 
\par //============================================================================================
\par //============================================================================================
\par geBoolean GTHandle_Startup(void);
\par void GTHandle_Shutdown(void);
\par void GTHandle_FreeAllCaches(void);
\par geRDriver_THandle *GTHandle_FindTextureHandle();
\par void GTHandle_FreeTextureHandle(geRDriver_THandle *THandle);
\par void GTHandle_FreeAllTextureHandles(void);
\par geBoolean GTHandle_SetupInfo(GrTexInfo *Info, int32 Width, int32 Height, int32 NumMipLevels, GrTextureFormat_t Format, int32 *Size);
\par geBoolean GlideFormatFromGenesisFormat(gePixelFormat Format, GrTextureFormat_t *Out);
\par geRDriver_THandle *Create3DTexture(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geRDriver_THandle *CreateLightmapTexture(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geRDriver_THandle *Create2DTexture(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geRDriver_THandle *DRIVERCC GTHandle_Create(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geBoolean DRIVERCC GTHandle_Destroy(geRDriver_THandle *THandle);
\par geBoolean DRIVERCC GTHandle_Lock(geRDriver_THandle *THandle, int32 MipLevel, void **Data);
\par geBoolean DRIVERCC GTHandle_UnLock(geRDriver_THandle *THandle, int32 MipLevel);
\par geBoolean DRIVERCC GThandle_SetPal(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par geRDriver_THandle *DRIVERCC GThandle_GetPal(geRDriver_THandle *THandle);
\par geBoolean DRIVERCC GTHandle_GetInfo(geRDriver_THandle *THandle, int32 MipLevel, geRDriver_THandleInfo *Info);
\par geBoolean GTHandle_CheckTextures(void);
\par geBoolean GetLod(S32 Width, GrLOD_t *Lod);
\par geBoolean GetAspectRatio(int32 Width, int32 Height, GrAspectRatio_t *Aspect);
\par uint32 GetLog(uint32 P2);
\par int32 SnapToPower2(int32 Width);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070005}Render.h{\*\bkmkend _Toc454070005}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Render.h                                                                            */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Code to render polys in glide                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef RENDER_H
\par #define RENDER_H
\par 
\par #include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "Glide.h"
\par #include "DCommon.h"
\par #include "GCAche.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par enum 
\par \{  
\par \tab RENDER_UNKNOWN_MODE,
\par \tab RENDER_MISC_TEX_POLY_MODE, 
\par \tab RENDER_MISC_GOURAD_POLY_MODE, 
\par \tab RENDER_LINES_POLY_MODE, 
\par \tab RENDER_WORLD_TRANSPARENT_POLY_MODE,
\par \tab RENDER_WORLD_POLY_MODE,
\par \tab RENDER_LIGHTMAP_POLY_MODE,
\par \tab RENDER_LIGHTMAP_FOG_POLY_MODE,
\par \tab RENDER_DECAL_MODE,
\par \};
\par 
\par extern uint32\tab \tab \tab \tab PolyMode;
\par extern DRV_CacheInfo\tab \tab CacheInfo;
\par 
\par void TextureSource(GrChipID_t Tmu, FxU32 startAddress, FxU32 evenOdd, GrTexInfo  *info );
\par void Render_SetHardwareMode(int32 NewMode, uint32 NewFlags);
\par geBoolean DRIVERCC Render_GouraudPoly(DRV_TLVertex *Pnts, int32 NumPoints, uint32 Flags);
\par geBoolean DRIVERCC Render_LinesPoly(DRV_TLVertex *Pnts, int32 NumPoints);
\par geBoolean DRIVERCC Render_WorldPoly(DRV_TLVertex *Pnts, int32 NumPoints, geRDriver_THandle *THandle, DRV_TexInfo *TexInfo, DRV_LInfo *LInfo, uint32 Flags);
\par void RenderLightmapPoly(GrVertex *vrtx, int32 NumPoints, DRV_LInfo *LInfo, geBoolean Dynamic, uint32 Flags);
\par void DownloadLightmap(DRV_LInfo *LInfo, int32 Wh, GCache_Slot *Slot, int32 LMapNum);
\par geBoolean DRIVERCC Render_MiscTexturePoly(DRV_TLVertex *Pnts, int32 NumPoints, geRDriver_THandle *THandle, uint32 Flags);
\par void SetupTexture(geRDriver_THandle *THandle);
\par GCache_Slot *SetupLMapTexture(geRDriver_THandle *THandle, DRV_LInfo *LInfo, geBoolean Dynamic, int32 LMapNum);
\par geBoolean DRIVERCC Render_DrawDecal(geRDriver_THandle *THandle, RECT *SRect, int32 x, int32 y);
\par geBoolean DRIVERCC BeginScene(geBoolean Clear, geBoolean ClearZ, RECT *WorldRect);
\par geBoolean DRIVERCC EndScene(void);
\par geBoolean DRIVERCC BeginWorld(void);
\par geBoolean DRIVERCC EndWorld(void);
\par geBoolean DRIVERCC BeginMeshes(void);
\par geBoolean DRIVERCC EndMeshes(void);
\par geBoolean DRIVERCC BeginModels(void);
\par geBoolean DRIVERCC EndModels(void);
\par 
\par //============================================================================================
\par //============================================================================================
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454070006}OpenSource/Source/Engine/Drivers/SoftDrv Subdirectory{\*\bkmkend _Toc454070006}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains the current software video driver routines.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070007}3dnowspan.h{\*\bkmkend _Toc454070007}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  3dnowspan.h                                                                         */
\par /*                                                                                      */
\par /*  Author:       Ken Baird                                                             */
\par /*  Description:  Headers for 3dnow assembly calls                                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par typedef struct EdgeAsmTag EdgeAsm;
\par typedef struct EdgeAsmFPUTag EdgeAsmFPU;
\par 
\par //3dnow based non world faces
\par //DRV_RENDER_NO_ZMASK
\par extern void DrawScanLineGouraudNoZBufferZWrite_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par extern void DrawScanLineGouraudNoZBufferZWriteTrans_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //solid color
\par extern void DrawScanLineGouraudNoZBufferZWriteSolid_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE
\par extern void DrawScanLineGouraudNoZ_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par extern void DrawScanLineGouraudNoZTrans_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //solid color
\par extern void DrawScanLineGouraudNoZSolid_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZAlphaTex_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZBufferZWriteAlphaTex_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferNoZWriteAlphaTex_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferAlphaTex_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZAlphaARGB_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZBufferZWriteAlphaARGB_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferNoZWriteAlphaARGB_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferAlphaARGB_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par //!(DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE)
\par extern void DrawScanLineGouraudZBuffer_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par extern void DrawScanLineGouraudZBufferTrans_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //solid color
\par extern void DrawScanLineGouraudZBufferSolid_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par //DRV_RENDER_NO_ZWRITE
\par extern void DrawScanLineGouraudZBufferNoZWrite_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par extern void DrawScanLineGouraudZBufferNoZWriteTrans_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //solid color
\par extern void DrawScanLineGouraudZBufferNoZWriteSolid_Asm3DNow(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par 
\par //world perspective correct faces
\par extern\tab void DrawSpan32_AsmLit3DNow(int32 x1, int32 x2, int32 y);
\par extern\tab void DrawSpan32_AsmLitZWrite3DNow(int32 x1, int32 x2, int32 y);
\par extern\tab void DrawSpan32_AsmLitZBuffer3DNow(int32 x1, int32 x2, int32 y);
\par extern\tab void DrawSpan32_AsmGouraud3DNow(int32 x1, int32 x2, int32 y, float r1, float g1, float b1, float r2, float g2, float b2);
\par extern\tab void DrawSpan32_AsmGouraudZWrite3DNow(int32 x1, int32 x2, int32 y, float r1, float g1, float b1, float r2, float g2, float b2);
\par extern\tab void DrawSpan32_AsmGouraudZBuffer3DNow(int32 x1, int32 x2, int32 y, float r1, float g1, float b1, float r2, float g2, float b2);
\par extern\tab void DrawSpan32_AsmGouraudZBufferAlphaARGB3DNow(int32 x1, int32 x2, int32 y, float r1, float g1, float b1, float r2, float g2, float b2);
\par extern\tab void DrawSpan32_AsmGouraudZBufferVertexAlpha3DNow(int32 x1, int32 x2, int32 y, float r1, float g1, float b1, float r2, float g2, float b2);
\par 
\par typedef struct\tab EdgeAsmWorldTag\tab EdgeAsmWorld;
\par 
\par extern\tab void Femms3DNow(void);
\par extern\tab void StepWorld3DNow(EdgeAsmWorld *edge);
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070008}dmodes.h{\*\bkmkend _Toc454070008}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  dmodes.h                                                                            */
\par /*                                                                                      */
\par /*  Author:       Ken Baird                                                             */
\par /*  Description:  Directdraw related stuff                                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #include "basetype.h"
\par 
\par extern\tab void\tab \tab \tab \tab \tab GetDDrawPixelFormat(DRV_Window *cwnd);
\par extern\tab LPDIRECTDRAWSURFACE4\tab DDrawLoadSurface(U32 dwWidth, U32 dwHeight, const void *pixels, const char *pal);
\par extern\tab geBoolean\tab \tab \tab \tab LockDDrawBackBuffer(DRV_Window *cwnd, RECT *wrect);
\par extern\tab geBoolean\tab \tab \tab \tab UnlockDDrawBackBuffer(DRV_Window *cwnd, RECT *wrect);
\par extern\tab geBoolean\tab \tab \tab \tab RefreshDDraw(DRV_Window *cwnd, VidModeList *cmode, RECT *src, RECT *dst);
\par extern\tab void\tab \tab \tab \tab \tab ClearBackBuffer(DRV_Window *cwnd);
\par extern  geBoolean\tab \tab \tab \tab DDrawBlitDecal(LPDIRECTDRAWSURFACE4 lpDDSDecal, RECT *SRect, S32 x, S32 y);
\par extern  geBoolean\tab \tab \tab \tab DDrawBlitDecalDelayed(LPDIRECTDRAWSURFACE4 lpDDSDecal, RECT *SRect, S32 x, S32 y);
\par extern  geBoolean\tab \tab \tab \tab DDrawBlitDecalToFront(LPDIRECTDRAWSURFACE4 lpDDSDecal, RECT *SRect, S32 x, S32 y);
\par extern\tab geBoolean\tab DRIVERCC\tab DrvSetActive(geBoolean wParam);
\par extern\tab void\tab \tab \tab \tab \tab SetDDrawWindow(HWND hwnd);
\par extern\tab geBoolean\tab \tab \tab \tab SetDDrawMode(U32 top, VidEnumInfo *vinfo);
\par extern\tab geBoolean\tab \tab \tab \tab DoDDrawInit(HWND hwnd, VidEnumInfo *vinfo);
\par extern\tab geBoolean\tab \tab \tab \tab DoModeEnumeration(VidEnumInfo *vinfo);
\par extern\tab geBoolean\tab \tab \tab \tab DoEnumeration(VidEnumInfo *vinfo);
\par extern\tab void\tab \tab \tab \tab \tab GetDDrawPixelFormat(DRV_Window *cwnd);
\par extern\tab void\tab \tab \tab \tab \tab FreeDDraw(VidEnumInfo *vinfo);
\par 
\par extern\tab geBoolean\tab \tab \tab \tab bWindowed, bActive, bBackLocked;
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070009}drawspan.h{\*\bkmkend _Toc454070009}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  drawspan.h                                                                          */
\par /*                                                                                      */
\par /*  Author:       Ken Baird                                                             */
\par /*  Description:  header for span draw code                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #include "softdrv.h"
\par #include "basetype.h"
\par 
\par typedef struct EdgeAsmFPUTag EdgeAsmFPU;
\par 
\par extern\tab uint16\tab *TDest, *pZBufferPtr, *Dest;
\par extern\tab __int64\tab Red, Green;
\par extern\tab float\tab Real65536;
\par extern\tab double\tab Bucket, Bucket2, Bucket3, Magic, RedMask, RedMask2;
\par extern\tab uint32\tab UMask, VShift, VMask, TempPix, Blue;
\par static\tab uint32\tab VStep, UStep, ZStep, u16, v16, z16, Z32;
\par 
\par extern\tab float\tab const\tab Two, MiniRedMask, GreenMask;
\par extern\tab float\tab const\tab MiniRedMask2, GreenMask2, BlueMask;
\par extern\tab geFloat\tab \tab \tab FloatTemp, FTemp0, FTemp1, FTemp2;
\par extern\tab geFloat\tab \tab \tab FTemp3, FTemp4, FTemp5, FTemp6, FTemp7, FTemp8;
\par 
\par extern\tab int32\tab GHMaskShifted, GHMaskShifted16, GWMaskShifted, GWMask, widTemp;
\par extern\tab uint8\tab *GBitPtrHalf;
\par extern\tab double\tab MipMagic;
\par extern\tab double\tab MipMagic2;
\par 
\par extern uint32\tab NumASpans, RemainingCount;
\par extern double\tab DeltaU, DeltaV, DeltaW;
\par extern uint32\tab UFixed, VFixed, WLeft;
\par extern uint8\tab *pTex;
\par 
\par extern\tab int32\tab R1, B1, G1, R2, G2, B2;
\par extern\tab int32\tab RR1, RR2, GG1, GG2, BB1, BB2;
\par extern\tab int32\tab StepR, StepG, StepB;
\par extern\tab int32\tab UDist, VDist;
\par extern\tab int32\tab U1, V1, CKeyTest;
\par extern\tab float\tab GLMapMulU;\tab //lightscale
\par extern\tab float\tab GLMapMulV;\tab //lightscale
\par extern\tab int32\tab ZDelta, ZVal;
\par extern\tab float\tab ZBufferPrec;
\par extern\tab __int64\tab RedDelta, GreenDelta, BlueDelta;
\par 
\par 
\par //555
\par #define\tab REDMASK2\tab 0x7c007c00;
\par #define\tab GREENMASK2\tab 0x03e003e0;
\par #define\tab BLUEMASK2\tab 0x001f001f;
\par 
\par //565
\par #define\tab REDMASK\tab \tab 0xf800f800;
\par #define\tab GREENMASK\tab 0x07e007e0;
\par #define\tab BLUEMASK\tab 0x001f001f;
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070010}Register.h{\*\bkmkend _Toc454070010}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  register.h                                                                          */
\par /*                                                                                      */
\par /*  Author:       John Pollard, Ken Baird                                               */
\par /*  Description:  Texture Handle code header file                                       */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef REGISTER_H
\par #define REGISTER_H
\par 
\par #include <Windows.h>
\par 
\par #include "ddraw.h"
\par 
\par #include "DCommon.h"
\par 
\par #define\tab MAX_TEXTURE_HANDLES\tab \tab 15000
\par 
\par // THandle flags
\par #define THANDLE_UPDATE\tab \tab (1<<0)\tab \tab // Force a thandle to be uploaded to the card
\par #define\tab THANDLE_TRANS\tab \tab (1<<2)\tab \tab // Texture has transparency
\par #define THANDLE_LOCKED\tab \tab (1<<3)\tab \tab // THandle is currently locked (invalid for rendering etc)
\par 
\par typedef struct geRDriver_THandle
\par \{
\par \tab int32\tab \tab \tab \tab \tab \tab Active, Width, Height, MipLevels;
\par \tab geRDriver_PixelFormat\tab PixelFormat;
\par \tab uint16\tab \tab \tab \tab \tab \tab *BitPtr[16];//8 or 16
\par \tab geRDriver_THandle\tab \tab *PalHandle;
\par \tab geRDriver_THandle\tab \tab *AlphaHandle;
\par 
\par \tab uint32\tab \tab \tab \tab \tab \tab Flags;
\par \} geRDriver_THandle;
\par 
\par extern\tab geRDriver_THandle\tab TextureHandles[MAX_TEXTURE_HANDLES];
\par 
\par geBoolean\tab \tab \tab DRIVERCC\tab DrvResetAll(void);
\par geRDriver_THandle\tab *DRIVERCC\tab CreateTexture(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geBoolean\tab \tab \tab DRIVERCC\tab DestroyTexture(geRDriver_THandle *THandle);
\par 
\par geBoolean\tab \tab \tab DRIVERCC\tab LockTextureHandle(geRDriver_THandle *THandle, int32 MipLevel, void **Data);
\par geBoolean\tab \tab \tab DRIVERCC\tab UnLockTextureHandle(geRDriver_THandle *THandle, int32 MipLevel);
\par geBoolean\tab \tab \tab DRIVERCC\tab THandle_GetInfo(geRDriver_THandle *THandle, int32 MipLevel, geRDriver_THandleInfo *Info);
\par 
\par geBoolean\tab \tab \tab DRIVERCC\tab SetPalette(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par geRDriver_THandle\tab *DRIVERCC\tab GetPalette(geRDriver_THandle *THandle);
\par geBoolean\tab \tab \tab DRIVERCC\tab SetAlpha(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par geRDriver_THandle\tab *DRIVERCC\tab GetAlpha(geRDriver_THandle *THandle);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070011}Render.h{\*\bkmkend _Toc454070011}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  render.h                                                                            */
\par /*                                                                                      */
\par /*  Author:       John Pollard, Ken Baird                                               */
\par /*  Description:  header for render.c                                                   */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef RENDER_H
\par #define RENDER_H
\par 
\par #include <Windows.h>
\par 
\par #include "DCommon.h"
\par #include "Span.h"
\par #include "Register.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef int32\tab \tab \tab Fixed16;
\par 
\par #define\tab \tab \tab \tab \tab ZBUFFER_PREC\tab (65536.0f * 65536.0f)
\par //#define\tab \tab \tab \tab ZBUFFER_PREC\tab (32768.0f * 65536.0f)
\par 
\par extern int32\tab \tab \tab \tab SpanMode;
\par extern int32\tab \tab \tab \tab PolyMode;
\par extern BOOL\tab \tab \tab \tab PolyIsTrans;
\par 
\par extern BOOL\tab \tab \tab \tab PolyVisible;
\par extern int32\tab \tab \tab \tab ActuallVisible;
\par extern int32\tab \tab \tab \tab NumPixels;
\par 
\par extern int32\tab \tab \tab \tab SMIN, SMAX;
\par 
\par extern uint8\tab \tab \tab \tab GMipLevel;\tab \tab \tab \tab // Miplevel passed by the latest rendering routine
\par extern int32\tab \tab \tab GMipLevel4, GMipLevel20, GMipLevel4_8;
\par extern int32\tab \tab \tab \tab GLMapAdd;
\par extern DRV_LInfo\tab \tab *GLInfo;
\par extern DRV_Bitmap\tab \tab *GBitmap;
\par extern geRDriver_THandle\tab *GTexture;
\par extern uint16\tab \tab \tab \tab *pScrPtr16bpp;
\par 
\par extern int32\tab \tab \tab GLightWidth;
\par extern uint8\tab \tab \tab *GLightData;
\par 
\par extern int32\tab \tab \tab DeltaX, Remaining, N_Runs, PixelCount;
\par extern uint16\tab \tab \tab *Source, *Dest;
\par extern int32\tab \tab \tab U2, V2, StepU, StepV;
\par extern float\tab \tab \tab UDivZ, VDivZ, Zi, Z, Dx, Dy, PixelEnd;
\par extern int32\tab \tab \tab TxWhole, TyWhole, TxFract, TyFract;
\par extern float\tab \tab \tab UDivZnStepX, VDivZnStepX, ZinStepX;
\par extern int32\tab \tab \tab Junk[2];
\par 
\par extern float\tab \tab \tab Real16 ;\tab 
\par extern float\tab \tab \tab Real65536;
\par 
\par extern int32\tab \tab \tab U, V;
\par 
\par extern int32\tab \tab \tab \tab GW, GWMask;
\par extern int32\tab \tab \tab \tab GH, GHMask;
\par extern uint8\tab \tab \tab \tab *GBitPtr;
\par extern uint16\tab \tab \tab \tab *GBitPtr16;
\par 
\par // 16bit zbuffer
\par extern uint16\tab \tab \tab \tab *ZBuffer;
\par 
\par extern float\tab \tab \tab UDivZStepX;
\par extern float\tab \tab \tab UDivZStepY;
\par extern float\tab \tab \tab VDivZStepX;
\par extern float\tab \tab \tab VDivZStepY;
\par 
\par extern float\tab \tab \tab UDivZOrigin;
\par extern float\tab \tab \tab VDivZOrigin;
\par extern float\tab \tab \tab UDivZ16StepX, VDivZ16StepX, Zi16StepX;
\par extern float\tab \tab \tab UDivZ32StepX, VDivZ32StepX, Zi32StepX;
\par 
\par extern float\tab \tab \tab ZiStepX;
\par extern float\tab \tab \tab ZiStepY;
\par extern float\tab \tab \tab ZiOrigin;
\par 
\par extern Fixed16\tab \tab \tab UAdjust;
\par extern Fixed16\tab \tab \tab VAdjust;
\par extern Fixed16\tab \tab \tab UAdjustL;
\par extern Fixed16\tab \tab \tab VAdjustL;
\par extern Fixed16\tab \tab \tab UAdjust1;
\par extern Fixed16\tab \tab \tab VAdjust1;
\par extern Fixed16\tab \tab \tab UAdjust2;
\par extern Fixed16\tab \tab \tab VAdjust2;
\par 
\par extern Fixed16\tab \tab \tab MaxU;
\par extern Fixed16\tab \tab \tab MaxV;
\par 
\par #define ZBUFFER_SHIFT\tab \tab \tab \tab 21
\par #define ZBUFFER_RIGHT_SHIFT\tab \tab \tab 10
\par 
\par // 16bit zbuffer
\par extern uint16\tab \tab \tab *ZBuffer;
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par BOOL RenderInit(DRV_Window *Window);
\par BOOL RenderShutdown(void);
\par void ClearZBuffer(DRV_Window *Window);
\par 
\par // Render funtions
\par BOOL DRIVERCC RenderGouraudPoly(DRV_TLVertex *Pnts, int32 NumPoints, uint32 Flags);
\par BOOL DRIVERCC RenderWorldPoly(DRV_TLVertex *Pnts, int32 NumPoints, geRDriver_THandle *THandle, DRV_TexInfo *TexInfo, DRV_LInfo *LInfo, uint32 Flags);
\par BOOL DRIVERCC RenderMiscTexturePoly(DRV_TLVertex *Pnts, int32 NumPoints, geRDriver_THandle *THandle, uint32 Flags);
\par BOOL DRIVERCC DrawDecal(geRDriver_THandle *THandle, RECT *SRect, int32 x, int32 y);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070012}sal.h{\*\bkmkend _Toc454070012}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  sal.h                                                                               */
\par /*                                                                                      */
\par /*  Description:  GDI dib handling code                                                 */
\par /*                                                                                      */
\par /*                Code fragments contributed by John Miles                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #ifndef SAL_VERSION
\par 
\par #define SAL_VERSION      "1.00"
\par #define SAL_VERSION_DATE "23-May-96"
\par 
\par #endif
\par 
\par #ifndef SAL_H
\par #define SAL_H
\par 
\par #ifdef WIN32
\par   #define IS_WIN32 1
\par #endif
\par 
\par #ifdef _WIN32
\par   #define IS_WIN32 1
\par #endif
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //
\par // If compiling SAL library, use __declspec(dllexport) for both 
\par // declarations and definitions
\par //
\par // If compiling SAL application, use __declspec(dllimport) for
\par // declarations -- definitions don't matter
\par //
\par // (DOS, other system definitions to be added later)
\par //
\par /*
\par #ifdef IS_WIN32
\par 
\par   #define SALEXPORT WINAPI
\par 
\par   #ifdef BUILD_SAL
\par     #define DXDEC __declspec(dllexport)
\par     #define DXDEF __declspec(dllexport)
\par   #else
\par     #define DXDEC __declspec(dllimport)
\par   #endif
\par 
\par #else
\par 
\par   #define SALEXPORT
\par   #define WINAPI
\par 
\par #endif
\par */
\par 
\par #define SALEXPORT WINAPI
\par #define DXDEC 
\par #define DXDEF 
\par 
\par //
\par // Misc. constant definitions  
\par //
\par 
\par //
\par // General type definitions for portability
\par // 
\par 
\par #ifndef US_TYPEDEFS
\par #define US_TYPEDEFS
\par 
\par   typedef unsigned char   U8 ;
\par   typedef unsigned short  U16;
\par   typedef unsigned long   U32;
\par   typedef          char   C8 ;
\par   typedef signed   char   S8 ;
\par   typedef signed   short  S16;
\par   typedef signed   long   S32;
\par 
\par #endif
\par 
\par #ifndef YES
\par #define YES 1
\par #endif
\par 
\par #ifndef NO
\par #define NO  0
\par #endif
\par 
\par #ifndef TRUE
\par #define TRUE 1
\par #endif
\par 
\par #ifndef FALSE
\par #define FALSE  0
\par #endif
\par 
\par #define SAL_FULLSCREEN     0               // Set fullscreen DDraw mode
\par #define SAL_WINDOW         1               // Set DIB windowed mode
\par #define SAL_TRY_FULLSCREEN 2               // Try fullscreen, fall back to DIB
\par 
\par #define SAL_FRONT_SURFACE 0
\par #define SAL_BACK_SURFACE  1
\par 
\par //
\par // Preference names and default values
\par //
\par 
\par #define SAL_ALLOW_FRONT_LOCK         0     // Disregard request for front surface lock
\par #define DEFAULT_AFL                  NO
\par                                      
\par #define SAL_BUFFER_IF_NO_LFB         1     // Use system RAM page buffer if no LFB available
\par #define DEFAULT_BINL                 YES   
\par                                      
\par #define SAL_DOS_MONO_DEBUG           2     // Set up monochrome TTY debug monitor for DOS
\par #define DEFAULT_DMD                  YES
\par 
\par #define SAL_MAX_VIDEO_PAGES          3     // Allocate up to 3 video pages if possible
\par #define DEFAULT_MVP                  3     
\par 
\par #define SAL_ALLOW_WINDOW_RESIZE      4     // Allow window to be resized
\par #define DEFAULT_AWR                  YES
\par 
\par #define SAL_PREVENT_ALT_MENU_POPUP   5     // Do not allow ALT to pause app
\par #define DEFAULT_PAMP                 YES
\par 
\par #define SAL_ALWAYS_ON_TOP            6     // App has normal window Z order
\par #define DEFAULT_SAOT                 NO
\par 
\par #define SAL_MAXIMIZE_TO_FULLSCREEN   7     // Maximize button switches to FS
\par #define DEFAULT_MTF                  YES   
\par 
\par #define N_SAL_PREFS                  8     // # of preference types
\par 
\par //
\par // Structures
\par //
\par 
\par typedef struct
\par \{
\par    U32 r;
\par    U32 g;
\par    U32 b;
\par    S32 alpha;
\par \}
\par SAL_RGB32;
\par 
\par typedef struct
\par \{
\par    S32 x0;
\par    S32 y0;
\par    S32 x1;
\par    S32 y1;
\par \}
\par SAL_REGION;
\par 
\par typedef struct
\par \{
\par    S32 x;
\par    S32 y;
\par    S32 width;
\par    S32 height;
\par \}
\par SAL_WINAREA;
\par 
\par //
\par // Function pointer types
\par //
\par 
\par typedef void (SALEXPORT * SALFOCUSCB) (S32 status);
\par typedef void (SALEXPORT * SALEXITCB) (void);
\par 
\par //
\par // Miscellaneous/support services (not system-specific)
\par //
\par 
\par DXDEC void __cdecl SAL_debug_printf          (char *fmt, ...);
\par 
\par DXDEC  S32 WINAPI  SAL_get_preference        (U32   number);
\par                    
\par DXDEC  S32 WINAPI  SAL_set_preference        (U32   number, 
\par                                               S32   value);
\par 
\par //
\par // General services (not system-specific)
\par //
\par 
\par DXDEC void WINAPI SAL_set_palette_entry      (S32        index,
\par                                               SAL_RGB32 *entry,
\par                                               S32        wait_flag);
\par                                              
\par DXDEC void WINAPI SAL_get_palette_entry      (S32        index,
\par                                               SAL_RGB32 *entry);
\par 
\par DXDEC void WINAPI SAL_set_palette_range      (S32        index,
\par                                               S32        num_entries,
\par                                               SAL_RGB32 *entry_list,
\par                                               S32        wait_flag);
\par                                              
\par DXDEC void WINAPI SAL_get_palette_range      (S32        index,
\par                                               S32        num_entries,
\par                                               SAL_RGB32 *entry_list);
\par 
\par DXDEC void WINAPI SAL_get_pixel_format       (S32       *pixel_pitch,
\par                                               S32       *bytes_per_pixel,
\par                                               S32       *R_shift,
\par                                               U32       *R_mask,
\par                                               S32       *R_width,
\par                                               S32       *G_shift,
\par                                               U32       *G_mask,
\par                                               S32       *G_width,
\par                                               S32       *B_shift,
\par                                               U32       *B_mask,
\par                                               S32       *B_width);
\par 
\par 
\par DXDEC void WINAPI SAL_flip_surface           (void);
\par DXDEF void WINAPI SAL_blit_surface\tab \tab \tab \tab (void);
\par 
\par DXDEC void WINAPI SAL_wipe_surface           (S32        surface,
\par                                               U32        color);
\par 
\par DXDEC void WINAPI SAL_lock_surface           (S32        surface,
\par                                               U8       **ptr,
\par                                               S32       *pitch);
\par 
\par DXDEC void WINAPI SAL_release_surface        (S32        surface,
\par                                               S32        perform_flip);
\par 
\par DXDEC void WINAPI SAL_lock_region            (S32        surface,
\par                                               SAL_REGION region,
\par                                               U8       **ptr,
\par                                               S32       *pitch);
\par 
\par DXDEC void WINAPI SAL_release_region         (S32        surface,
\par                                               SAL_REGION region);
\par 
\par //
\par // Mouse services
\par //
\par 
\par DXDEC void WINAPI SAL_show_system_mouse      (void);
\par DXDEC void WINAPI SAL_hide_system_mouse      (void);
\par 
\par DXDEC void WINAPI SAL_constrain_mouse        (void);
\par DXDEC void WINAPI SAL_unconstrain_mouse      (void);
\par 
\par //
\par // System-specific functions for Win32 version
\par //
\par 
\par #ifdef IS_WIN32
\par   
\par   DXDEC S32        WINAPI SAL_startup                 (BOOL FileLog);
\par   DXDEC void       WINAPI SAL_shutdown                (void);
\par 
\par   DXDEC BOOL WINAPI SAL_set_main_window(HWND hWindow);
\par   // CHANGE! (12/18/96)
\par   // Must have a menu in my app. 
\par   DXDEC HWND WINAPI SAL_create_main_window  (const char *MenuName);
\par                                                       
\par   DXDEC S32        WINAPI SAL_set_display_mode        (S32   display_size_X,
\par                                                        S32   display_size_Y,
\par                                                        S32   display_bpp,
\par                                                        S32   initial_window_mode,
\par                                                        S32   allow_mode_switch);
\par 
\par   DXDEC S32        WINAPI SAL_window_status           (void);
\par   DXDEC void       WINAPI SAL_window_area             (SAL_WINAREA *area);
\par   DXDEC void       WINAPI SAL_client_area             (SAL_WINAREA *area);
\par   DXDEC S32        WINAPI SAL_set_window_area         (SAL_WINAREA *area);
\par   DXDEC S32        WINAPI SAL_is_app_active           (void);
\par   DXDEC SALFOCUSCB WINAPI SAL_register_focus_callback (SALFOCUSCB fn);
\par   DXDEC WNDPROC    WINAPI SAL_register_WNDPROC        (WNDPROC fn);
\par 
\par   DXDEC void       WINAPI SAL_serve_message_queue     (void);
\par 
\par   DXDEC void      __cdecl SAL_error_box               (C8 *caption,
\par                                                        C8 *fmt, ...);
\par   // CHANGE! (12/18/96) John Pollard
\par   DXDEC void WINAPI SAL_GetBackBufferDC(HDC *dc);
\par   DXDEC void WINAPI SAL_ReleaseBackBufferDC(HDC dc);
\par 
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070013}Scene.h{\*\bkmkend _Toc454070013}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  scene.h                                                                             */
\par /*                                                                                      */
\par /*  Author:       John Pollard, Ken Baird                                               */
\par /*  Description:  scene header                                                          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SCENE_H
\par #define SCENE_H
\par 
\par #include <Windows.H>
\par 
\par #include "DCommon.h"
\par 
\par #define RENDER_NONE\tab \tab \tab 0
\par #define RENDER_WORLD\tab \tab 1
\par #define RENDER_MESHES\tab \tab 2
\par #define RENDER_MODELS\tab \tab 3
\par 
\par extern int32\tab RenderMode;
\par 
\par BOOL DRIVERCC BeginScene(BOOL Clear, BOOL ClearZ, RECT *WorldRect);
\par BOOL DRIVERCC EndScene(void);
\par BOOL DRIVERCC BeginWorld(void);
\par BOOL DRIVERCC EndWorld(void);
\par BOOL DRIVERCC BeginMeshes(void);
\par BOOL DRIVERCC EndMeshes(void);
\par BOOL DRIVERCC BeginModels(void);
\par BOOL DRIVERCC EndModels(void);
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070014}Softdrv.h{\*\bkmkend _Toc454070014}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  softdrv.h                                                                           */
\par /*                                                                                      */
\par /*  Author:       John Pollard, Ken Baird                                               */
\par /*  Description:  header for softdrv                                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SOFTDRV_H
\par #define SOFTDRV_H
\par 
\par #include "DCommon.h"
\par #include "ddraw.h"
\par 
\par #ifdef __cplusplus
\par extern "C" DRV_Window\tab \tab ClientWindow;
\par #else
\par extern DRV_Window\tab \tab ClientWindow;
\par #endif
\par 
\par extern DRV_Driver\tab \tab \tab SOFTDRV;
\par extern DRV_CacheInfo\tab \tab CacheInfo;
\par 
\par enum\tab VidSurfFlags
\par \{
\par \tab SYSTEM\tab \tab \tab \tab =1,\tab //store buffer in system
\par \tab VIDEO\tab \tab \tab \tab =2,\tab //or video ram
\par \tab HARDWARE\tab \tab \tab =4,\tab //refresh choices
\par \tab DMABLT\tab \tab \tab \tab =8,
\par \tab FASTBLT\tab \tab \tab \tab =16,
\par \tab SAFEBLT\tab \tab \tab \tab =32,
\par \tab FLIP\tab \tab \tab \tab =64,
\par \tab DMAPAGELOCKREQUIRED\tab =128,//pagelock for dma req
\par \tab DMAASYNCH\tab \tab \tab =256,//can do asynch dma
\par \tab STRETCHMODE\tab \tab \tab =512,//stretch to fit
\par \tab MODEXMODE\tab \tab \tab =1024
\par \};
\par 
\par typedef struct VidModeListTag
\par \{
\par \tab uint32\tab width;
\par \tab uint32\tab height;
\par \tab uint32\tab pitch;
\par \tab uint32\tab flags;\tab \tab \tab \tab //capabilities
\par \tab uint32\tab current;\tab \tab \tab //caps in use
\par \tab uint32\tab bpp;
\par \}\tab VidModeList;
\par 
\par typedef struct VidEnumInfoTag
\par \{
\par \tab DDDEVICEIDENTIFIER\tab DeviceInfo;
\par \tab DDDEVICEIDENTIFIER\tab DeviceInfoHost;
\par \tab GUID\tab \tab \tab \tab *DeviceGuid;
\par \tab VidModeList\tab \tab \tab VidModes[128];\tab //let's be safe
\par \tab int\tab \tab \tab \tab \tab NumVidModes;
\par \tab int\tab \tab \tab \tab \tab CurrentVidMode;
\par \tab uint32\tab \tab \tab \tab \tab bpp;\tab \tab \tab //bytes per pixel
\par \}\tab VidEnumInfo;
\par 
\par typedef struct\tab CPUInfoTag
\par \{
\par \tab uint32\tab \tab MaxCPUIDVal;
\par \tab char\tab VendorString[16];
\par \tab char\tab ProcName[48];
\par \tab uint32\tab \tab ProcType;
\par \tab uint32\tab \tab ProcFamily;
\par \tab uint32\tab \tab ProcModel;
\par \tab uint32\tab \tab ProcStepping;
\par \tab uint32\tab \tab ProcSpeed;
\par \tab BOOL\tab HasRDTSC;
\par \tab BOOL\tab HasMMX;
\par \tab BOOL\tab Has3DNow;
\par \tab BOOL\tab HasFCMOV;
\par \}\tab CPUInfo;
\par 
\par BOOL DRIVERCC DrvShutdown(void);
\par void DRIVERCC ErrorBox(char *Str);
\par void SetLastDrvError(S32 Error, char *ErrorStr);
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par void\tab ErrorPrintf(char *text, ...);
\par void\tab DumpErrorLogToFile(char *fname);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070015}Span.h{\*\bkmkend _Toc454070015}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  span.h                                                                              */
\par /*                                                                                      */
\par /*  Author:       John Pollard, Ken Baird                                               */
\par /*  Description:  Header for span.c and important defines                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SPAN_H
\par #define SPAN_H
\par 
\par #include "basetype.h"
\par 
\par #define MAXSPANS 25000
\par #define MAXSCANLINES 768
\par 
\par typedef struct SList 
\par \{
\par     uint8\tab \tab Used;
\par \tab int32\tab \tab Min, Max;
\par \tab float\tab z1, z2;\tab \tab // So we can spit z spans out for other spans that need to be occluded
\par     uint32\tab \tab Flags;
\par     struct SList\tab *Last;
\par     struct SList\tab *Next;
\par \} SList;
\par 
\par typedef struct
\par \{
\par \tab SList\tab *First;
\par \tab SList\tab *Current;
\par \} SpanMinMax;
\par 
\par extern\tab int32\tab NumCachedAlphaPolys;
\par extern\tab int32\tab NumCachedAlphaSpans;
\par 
\par SList\tab *NewSList(void);
\par void\tab FreeSList(SList *s);
\par void\tab ResetSList(void);
\par void\tab ResetSpans(uint32 Rows);
\par 
\par extern SpanMinMax SMinMax[MAXSCANLINES];
\par extern SList ScanHash[MAXSPANS];  // hash table for SList
\par extern int32 CurrentSList;
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070016}System.h{\*\bkmkend _Toc454070016}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  system.h                                                                            */
\par /*                                                                                      */
\par /*  Author:       John Pollard, Ken Baird                                               */
\par /*  Description:  header for system.c                                                   */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SYSTEM_H
\par #define SYSTEM_H
\par 
\par #include <Windows.h>
\par #include <stdio.h>
\par 
\par BOOL SysInit(void);
\par BOOL SysShutdown(void);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070017}x86span555.h{\*\bkmkend _Toc454070017}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  x86span555.h                                                                        */
\par /*                                                                                      */
\par /*  Author:       Ken Baird                                                             */
\par /*  Description:  header for x86 renderstates                                           */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par typedef struct EdgeAsmTag EdgeAsm;
\par typedef struct EdgeAsmFPUTag EdgeAsmFPU;
\par 
\par //x86 fpu based non world faces 555
\par //DRV_RENDER_NO_ZMASK
\par extern void DrawScanLineGouraudNoZBufferZWrite_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudNoZBufferZWriteTrans_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudNoZBufferZWriteSolid_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE
\par extern void DrawScanLineGouraudNoZ_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudNoZTrans_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudNoZSolid_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZAlphaTex_Asm555X86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZBufferZWriteAlphaTex_Asm555X86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferNoZWriteAlphaTex_Asm555X86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferAlphaTex_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //!(DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE)
\par extern void DrawScanLineGouraudZBuffer_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudZBufferTrans_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudZBufferSolid_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //DRV_RENDER_NO_ZWRITE
\par extern void DrawScanLineGouraudZBufferNoZWrite_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudZBufferNoZWriteTrans_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudZBufferNoZWriteSolid_Asm555X86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par 
\par //world perspective correct faces
\par void\tab DrawSpan16_AsmLit555X86FPU(int32 x1, int32 x2, int32 y);
\par void\tab DrawSpan16_AsmLitZWrite555X86FPU(int32 x1, int32 x2, int32 y);
\par void\tab DrawSpan16_AsmLitZBuffer555X86FPU(int32 x1, int32 x2, int32 y);
\par void\tab DrawSpan16_AsmGouraud555X86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par void\tab DrawSpan16_AsmGouraudZWrite555X86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par void\tab DrawSpan16_AsmGouraudZBuffer555X86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par void\tab DrawSpan16_AsmGouraudZBufferTrans555X86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070018}x86span565.h{\*\bkmkend _Toc454070018}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  x86span565.h                                                                        */
\par /*                                                                                      */
\par /*  Author:       Ken Baird                                                             */
\par /*  Description:  header for x86 renderstates                                           */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par typedef struct EdgeAsmTag EdgeAsm;
\par typedef struct EdgeAsmFPUTag EdgeAsmFPU;
\par 
\par //x86 fpu based non world faces
\par //DRV_RENDER_NO_ZMASK
\par extern void DrawScanLineGouraudNoZBufferZWrite_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudNoZBufferZWriteTrans_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudNoZBufferZWriteSolid_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE
\par extern void DrawScanLineGouraudNoZ_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudNoZTrans_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void\tab DrawScanLineGouraudNoZSolid_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZAlphaTex_AsmX86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudNoZBufferZWriteAlphaTex_AsmX86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_NO_ZMASK | DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferNoZWriteAlphaTex_AsmX86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par //DRV_RENDER_ALPHA
\par extern void DrawScanLineGouraudZBufferAlphaTex_AsmX86FPU(EdgeAsm *pLeft, EdgeAsm *pRight);
\par 
\par //!(DRV_RENDER_NO_ZMASK | DRV_RENDER_NO_ZWRITE)
\par extern void DrawScanLineGouraudZBuffer_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudZBufferTrans_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudZBufferSolid_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par //DRV_RENDER_NO_ZWRITE
\par extern void DrawScanLineGouraudZBufferNoZWrite_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par extern void DrawScanLineGouraudZBufferNoZWriteTrans_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par //solid color
\par extern void DrawScanLineGouraudZBufferNoZWriteSolid_AsmX86FPU(EdgeAsmFPU *pLeft, EdgeAsmFPU *pRight);
\par 
\par 
\par //world perspective correct faces
\par void\tab DrawSpan16_AsmLitX86FPU(int32 x1, int32 x2, int32 y);
\par void\tab DrawSpan16_AsmLitZWriteX86FPU(int32 x1, int32 x2, int32 y);
\par void\tab DrawSpan16_AsmLitZBufferX86FPU(int32 x1, int32 x2, int32 y);
\par void\tab DrawSpan16_AsmGouraudX86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par void\tab DrawSpan16_AsmGouraudZWriteX86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par void\tab DrawSpan16_AsmGouraudZBufferX86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par void\tab DrawSpan16_AsmGouraudZBufferTransX86FPU(int32 x1, int32 x2, int32 y, int32 r1, int32 g1, int32 b1, int32 r2, int32 g2, int32 b2);
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\page }{\i {\*\bkmkstart _Toc454070019}OpenSource/Source/Engine/Drivers/SoftDrv2 Subdirectory{\*\bkmkend _Toc454070019}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {This subdirectory contains a set of experimental software driver routines.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070020}CPUInfo.h{\*\bkmkend _Toc454070020}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  CPUInfo.H                                                                           */
\par /*                                                                                      */
\par /*  Author:  Mike Sandige, Ken Baird                                                    */
\par /*  Description:  simple cpu capabilities tests                                         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef CPUInfo_H
\par #define CPUInfo_H
\par 
\par //  Tests cpu for various features.
\par 
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par geBoolean CPUInfo_TestFor3DNow(void);
\par geBoolean CPUInfo_TestForMMX(void);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070021}DDrawDisplay.h{\*\bkmkend _Toc454070021}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DDRAWDisplay.H                                                                      */
\par /*                                                                                      */
\par /*  Author:  Mike Sandige                                                               */
\par /*  Description:  display surface manager for full screen Direct Draw using a direct    */
\par /*                draw surface for the the frame buffer                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef DDRAWDISPLAY_H
\par #define DDRAWDISPLAY_H
\par 
\par 
\par #include "basetype.h"
\par #include "DisplayModeInfo.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct DDRAWDisplay DDRAWDisplay;
\par 
\par void\tab  DDRAWDisplay_GetDisplayFormat(\tab \tab const DDRAWDisplay *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *Width, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *Height,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *BitsPerPixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32  *Flags);
\par 
\par geBoolean DDRAWDisplay_GetDisplayInfo(\tab char\tab \tab \tab *DescriptionString, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab unsigned int\tab  DescriptionStringMaxLength,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DisplayModeInfo *Info);
\par 
\par geBoolean DDRAWDisplay_GetPixelFormat(\tab DDRAWDisplay *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //int32       *pixel_pitch,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *bytes_per_pixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *R_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *R_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *R_width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *G_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *G_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *G_width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *B_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *B_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *B_width);
\par 
\par geBoolean\tab DDRAWDisplay_Lock(\tab \tab DDRAWDisplay *D,uint8 **Buffer, int32 *Pitch);
\par geBoolean\tab DDRAWDisplay_Unlock(\tab DDRAWDisplay *D);
\par geBoolean\tab DDRAWDisplay_Blit(\tab \tab DDRAWDisplay *D);
\par geBoolean\tab DDRAWDisplay_Wipe(\tab \tab DDRAWDisplay *D,uint32 color);
\par geBoolean\tab DDRAWDisplay_SetActive(\tab DDRAWDisplay *D, geBoolean Active);
\par void\tab \tab DDRAWDisplay_Destroy(\tab DDRAWDisplay **D);
\par 
\par #ifdef _INC_WINDOWS\tab 
\par DDRAWDisplay *DDRAWDisplay_Create( HWND hwnd, int Width, int Height, int BBP, uint32 Flags);
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070022}DIBDisplay.h{\*\bkmkend _Toc454070022}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DIBDisplay.H                                                                        */
\par /*                                                                                      */
\par /*  Author:  Mike Sandige                                                               */
\par /*  Description:  display surface manager for windows with a DIB as the frame buffer    */
\par /*                Code fragments contributed by John Miles                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par 
\par #ifndef DIBDisplay_H
\par #define DIBDisplay_H
\par 
\par #include "basetype.h"
\par #include "DisplayModeInfo.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct DIBDisplay DIBDisplay;
\par 
\par geBoolean DIBDisplay_GetDisplayInfo(\tab char\tab \tab \tab *DescriptionString, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab unsigned int\tab  DescriptionStringMaxLength,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DisplayModeInfo *Info);
\par 
\par void DIBDisplay_GetDisplayFormat(\tab \tab const DIBDisplay *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *Width, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *Height,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *BitsPerPixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32  *Flags);
\par 
\par geBoolean DIBDisplay_GetPixelFormat  (\tab const DIBDisplay *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //int32       *pixel_pitch,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *bytes_per_pixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *R_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *R_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *R_width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *G_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *G_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *G_width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *B_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *B_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *B_width);
\par 
\par 
\par geBoolean DIBDisplay_Blit\tab \tab (\tab DIBDisplay *D);
\par 
\par geBoolean DIBDisplay_Wipe\tab \tab (\tab DIBDisplay *D,\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32        color);
\par 
\par geBoolean DIBDisplay_Lock\tab \tab (\tab DIBDisplay *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint8       **ptr,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *pitch);
\par 
\par geBoolean DIBDisplay_Unlock\tab \tab (\tab DIBDisplay *D);
\par 
\par void DIBDisplay_Destroy\tab \tab \tab (\tab DIBDisplay **pDIBDisplay);
\par 
\par                          
\par \tab \tab \tab \tab \tab \tab  
\par #ifdef _INC_WINDOWS\tab \tab \tab \tab \tab \tab                              
\par DIBDisplay *DIBDisplay_Create\tab (\tab HWND hWindow,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int  Width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int  Height,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int  display_bpp,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 Flags);
\par #endif
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070023}display.h{\*\bkmkend _Toc454070023}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Display.H                                                                           */
\par /*                                                                                      */
\par /*  Author:  Mike Sandige                                                               */
\par /*  Description:  Abstracts all low-level display surfaces into a single API            */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par // Display
\par //   display manager 
\par //
\par //   manages 
\par //     DIB format window displays
\par //     DDRAW format fullscreen displays
\par 
\par 
\par #ifndef Display_H
\par #define Display_H
\par 
\par #include "basetype.h"
\par #include "DisplayModeInfo.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum \{ DISPLAY_DIB_WINDOW, DISPLAY_DDRAW_FULLSCREEN, DISPLAY_COUNT \} Display_Type;
\par 
\par typedef struct Display Display;
\par 
\par geBoolean Display_GetDisplayInfo(\tab \tab Display_Type\tab  DisplayType,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab char\tab \tab \tab *DescriptionString, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab unsigned int\tab  DescriptionStringMaxLength,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DisplayModeInfo *Info);
\par 
\par geBoolean Display_GetPixelFormat\tab (\tab const Display *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //int32       *pixel_pitch,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *bytes_per_pixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *R_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *R_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *R_width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *G_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *G_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *G_width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *B_shift,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32      *B_mask,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32       *B_width);
\par 
\par void\tab Display_GetDisplayFormat(\tab \tab const Display *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab Display_Type *DisplayType,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *Width, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *Height,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32   *BitsPerPixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32  *Flags);
\par 
\par geBoolean Display_Blit\tab \tab (\tab Display *D);
\par 
\par geBoolean Display_Wipe\tab \tab (\tab Display *D,\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab uint32        color);
\par 
\par geBoolean Display_Lock\tab \tab (\tab Display *D,
\par \tab \tab \tab \tab \tab \tab \tab \tab uint8       **ptr,
\par \tab \tab \tab \tab \tab \tab \tab \tab int32       *pitch);
\par 
\par geBoolean Display_Unlock\tab (\tab Display *D);
\par 
\par void Display_Destroy\tab \tab (\tab Display **pDisplay);
\par 
\par geBoolean Display_SetActive\tab (\tab Display *D, geBoolean Active );
\par 
\par \tab \tab \tab \tab \tab \tab  
\par #ifdef _INC_WINDOWS\tab \tab \tab \tab \tab \tab                              
\par Display *Display_Create\tab (\tab HWND hWindow,
\par \tab \tab \tab \tab \tab \tab \tab Display_Type DisplayType,
\par \tab \tab \tab \tab \tab \tab \tab int32   RenderSizeAcross, 
\par \tab \tab \tab \tab \tab \tab \tab int32   RenderSizeDown,
\par \tab \tab \tab \tab \tab \tab \tab int32   Display_BitsPerPixel,
\par \tab \tab \tab \tab \tab \tab \tab uint32  Display_Flags);
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070024}DisplayModeInfo.h{\*\bkmkend _Toc454070024}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DisplayModeInfo.H                                                                   */
\par /*                                                                                      */
\par /*  Author:  Mike Sandige                                                               */
\par /*  Description:  This is a simple container to hold information about available display*/
\par /*                modes for the software driver.                                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #ifndef DisplayModeInfo_H
\par #define DisplayModeInfo_H
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par enum\tab DisplayModeInfo_Flags
\par \{
\par \tab SYSTEM\tab \tab \tab \tab =1,\tab //store buffer in system
\par \tab VIDEO\tab \tab \tab \tab =2,\tab //or video ram
\par \tab HARDWARE\tab \tab \tab =4,\tab //refresh choices
\par \tab DMABLT\tab \tab \tab \tab =8,
\par \tab FASTBLT\tab \tab \tab \tab =16,
\par \tab SAFEBLT\tab \tab \tab \tab =32,
\par \tab FLIP\tab \tab \tab \tab =64,
\par \tab DMAPAGELOCKREQUIRED\tab =128,//pagelock for dma req
\par \tab DMAASYNCH\tab \tab \tab =256,//can do asynch dma
\par \tab STRETCHMODE\tab \tab \tab =512,//stretch to fit
\par \tab MODEXMODE\tab \tab \tab =1024
\par \};
\par 
\par typedef struct DisplayModeInfo DisplayModeInfo;
\par 
\par DisplayModeInfo *\tab DisplayModeInfo_Create(\tab \tab \tab void );
\par 
\par void\tab \tab \tab \tab DisplayModeInfo_Destroy(\tab \tab DisplayModeInfo **Info );
\par 
\par int\tab \tab \tab \tab \tab DisplayModeInfo_GetModeCount(\tab DisplayModeInfo *Info);
\par 
\par geBoolean\tab \tab \tab DisplayModeInfo_AddEntry(\tab \tab DisplayModeInfo *Info, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int Width,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int Height,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int BitsPerPixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 Flags );
\par 
\par geBoolean\tab \tab \tab DisplayModeInfo_GetNth(\tab \tab \tab DisplayModeInfo *Info, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int Nth,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int *Width, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int *Height,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int *BitsPerPixel,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 *Flags);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070025}DrawDecal.h{\*\bkmkend _Toc454070025}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DrawDecal.H                                                                         */
\par /*                                                                                      */
\par /*  Author: Ken Baird, Mike Sandige                                                     */
\par /*  Description:  This is a simple 2d blitter for the Genesis3d software driver.        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef DRAWDECAL
\par #define DRAWDECAL
\par 
\par #include "SWTHandle.h"\tab // geRDriver_THandle, RECT. 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par geBoolean DRIVERCC DrawDecal(geRDriver_THandle *THandle, RECT *SRect, int32 x, int32 y);
\par 
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070026}rop.h{\*\bkmkend _Toc454070026}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  ROP.H                                                                               */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  This defines the available rops for the software driver triangle      */
\par /*                rasterizer.                                                           */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef ROP_H
\par #define ROP_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par \tab 
\par //\tab light = gourad,map,flat,none(fullbright)
\par //  alpha = none, map(only with a texture), flat
\par typedef enum \{
\par \tab \tab \tab  
\par //ROP ID\tab \tab \tab \tab \tab \tab \tab \tab //\tab  texture   light  alpha\tab \tab z\tab \tab z\tab   \tab span\tab span\tab priority
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //\tab \tab \tab \tab \tab \tab \tab \tab test\tab set\tab \tab test\tab set\tab \tab \tab \tab \tab \tab \tab   
\par GE_ROP_LSHADE,  \tab \tab \tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_LSHADE_ZSET,  \tab \tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab -\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_LSHADE_ZTEST,  \tab \tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_LSHADE_ZTESTSET,  \tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab -\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab h\tab \tab 
\par GE_ROP_LSHADE_AFLAT,\tab \tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab f\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_LSHADE_AFLAT_ZSET,\tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab f\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_LSHADE_AFLAT_ZTEST,\tab \tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab f\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_LSHADE_AFLAT_ZTESTSET,\tab \tab \tab //\tab |\tab -\tab |\tab g\tab |\tab f\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LSHADE,  \tab \tab \tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_ZSET,\tab \tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab -\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_ZTEST,  \tab \tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_ZTESTSET,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab -\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab h\tab \tab 
\par GE_ROP_TMAP_LMAP_ZSET_SBUF,  \tab \tab \tab //\tab |\tab +\tab |\tab m\tab |\tab -\tab |\tab -\tab |\tab +\tab |\tab +\tab |\tab +\tab |\tab h\tab \tab 
\par GE_ROP_TMAP_LSHADE_ZSET_SBUF,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab -\tab |\tab -\tab |\tab +\tab |\tab +\tab |\tab +\tab |\tab h\tab \tab 
\par GE_ROP_TMAP_LMAP_ZTESTSET,\tab \tab \tab \tab //\tab |\tab +\tab |\tab m\tab |\tab -\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab h\tab \tab 
\par GE_ROP_TMAP_LSHADE_AFLAT,\tab \tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab f\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LSHADE_AFLAT_ZSET,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab f\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LSHADE_AFLAT_ZTEST,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab f\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LSHADE_AFLAT_ZTESTSET,\tab \tab //\tab |\tab +\tab |\tab g\tab |\tab f\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP,\tab \tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab m\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_ZSET,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab m\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_ZTEST,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab m\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_ZTESTSET,\tab \tab //\tab |\tab +\tab |\tab g\tab |\tab m\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LMAP_AMAP,\tab \tab \tab \tab \tab //\tab |\tab +\tab |\tab m\tab |\tab m\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LMAP_AMAP_ZSET,\tab \tab \tab \tab //\tab |\tab +\tab |\tab m\tab |\tab m\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LMAP_AMAP_ZTEST,\tab \tab \tab //\tab |\tab +\tab |\tab m\tab |\tab m\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LMAP_AMAP_ZTESTSET,\tab \tab \tab //\tab |\tab +\tab |\tab m\tab |\tab m\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab l\tab \tab 
\par GE_ROP_TMAP_LMAP_AFLAT_ZTESTSET,\tab \tab //\tab |\tab +\tab |\tab m\tab |\tab f\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab h\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_AFLAT,\tab \tab \tab //\tab |\tab +\tab |\tab g\tab |\tab mf\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_AFLAT_ZSET,\tab \tab //\tab |\tab +\tab |\tab g\tab |\tab mf\tab |\tab -\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_AFLAT_ZTEST,\tab //\tab |\tab +\tab |\tab g\tab |\tab mf\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_TMAP_LSHADE_AMAP_AFLAT_ZTESTSET,\tab //\tab |\tab +\tab |\tab g\tab |\tab mf\tab |\tab +\tab |\tab +\tab |\tab -\tab |\tab -\tab |\tab m\tab \tab 
\par GE_ROP_END,
\par \} geROP;
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070027}Softdrv.h{\*\bkmkend _Toc454070027}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  SoftDrv.H                                                                           */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  This is the API layer for the genesis software driver.                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SOFTDRV_H
\par #define SOFTDRV_H
\par 
\par #include "DCommon.h"
\par #include "Display.h"
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par extern DRV_Window\tab \tab \tab  ClientWindow;
\par 
\par extern Display\tab \tab \tab \tab *SD_Display;
\par extern geBoolean             SD_ProcessorHas3DNow;
\par extern geBoolean             SD_ProcessorHasMMX;
\par extern geBoolean\tab \tab \tab  SD_DIBDisplayMode;
\par extern geBoolean\tab \tab \tab  SD_Active;
\par extern DRV_Driver\tab \tab \tab  SOFTDRV;
\par extern int32\tab \tab \tab \tab  RenderMode;
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070028}Span.h{\*\bkmkend _Toc454070028}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Span.H                                                                              */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  Span abstracts and contains all the various ROP functions.            */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SPAN_H
\par #define SPAN_H
\par 
\par #include "basetype.h"
\par #include "rop.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef void (GENESISCC *Span_DrawFunction)(void);
\par 
\par typedef enum 
\par \{
\par \tab GE_SPAN_DESTINATION_FORMAT_555,
\par \tab GE_SPAN_DESTINATION_FORMAT_565,
\par 
\par \tab GE_SPAN_DESTINATION_FORMATS
\par \} geSpan_DestinationFormat;
\par 
\par typedef enum
\par \{
\par \tab GE_SPAN_HARDWARE_INTEL,
\par \tab GE_SPAN_HARDWARE_MMX,
\par \tab GE_SPAN_HARDWARE_AMD,
\par 
\par \tab GE_SPAN_HARDWARE_VERSIONS
\par \} geSpan_CPU;
\par 
\par geBoolean GENESISCC Span_SetOutputMode( geSpan_DestinationFormat DestFormat, geSpan_CPU CPU);
\par 
\par Span_DrawFunction GENESISCC Span_GetDrawFunction(geROP ROP);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070029}Span_AffineLoop.h{\*\bkmkend _Toc454070029}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Span_AffineLoop.H                                                                   */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  This is a template to create multiple affine span line drawing        */
\par /*                routines.  See Span, Span_Factory                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par while(i-- > 0)
\par \tab \{
\par \tab \tab #if SPANROP & ZTEST
\par \tab \tab ZFromMap = *(ZMapBits);
\par \tab \tab if (ZFromMap > (Z>>16))
\par \tab \tab #endif
\par \tab \tab \tab \{
\par \tab \tab \tab \tab #if SPANROP & ZSET
\par \tab \tab \tab \tab *(ZMapBits++) = (ZMAPPIXEL)(Z>>16);
\par \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab #if SPANROP & ZTEST
\par \tab \tab \tab \tab \tab ZMapBits++;
\par \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab #if !(( SPANROP & AFLAT) || (SPANROP & AMAP))\tab \tab // NO alpha
\par \tab \tab \tab \tab \tab #if (SPANROP & TMAP) 
\par \tab \tab \tab \tab \tab \tab #ifdef TEST_LIGHTMAP
\par \tab \tab \tab \tab \tab \tab \tab Color = 0xFFFFFF;
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab Color = Palette[*(TextureBits + ((U>>16)&UMask) + TOPDOWN_OR_BOTTOMUP(((V>>16)&VMask) << StrideShift))];
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #if SPANROP & D565 
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((((Color&0xFF)*R)>>15)&0xF800) | (((((Color&0xFF00)>>8)*G)>>20)&0x7E0) | ((((Color&0xFF0000)>>16)*B)>>26) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((Color&0xF8)<<8) /*R*/ | ((Color&0xFC00)>>5) /*G*/ | ((Color&0xF80000)>>19)/*B*/ );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((((Color&0xFF)*R)>>16)&0x7C00) | (((((Color&0xFF00)>>8)*G)>>21)&0x3E0) | ((((Color&0xFF0000)>>16)*B)>>26) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((Color&0xF8)<<7) /*R*/ | ((Color&0xF800)>>6) /*G*/ | ((Color&0xF80000)>>19)/*B*/ );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab #if SPANROP & D565
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL)\tab (  ((R>>(RGB_FXP_SHIFTER + 3))<<11) | ((G>>(RGB_FXP_SHIFTER + 2))<<5) | (B>>(RGB_FXP_SHIFTER + 3))  );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) Color;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL)(  ((R>>(RGB_FXP_SHIFTER + 3))<<10) | ((G>>(RGB_FXP_SHIFTER + 3))<<5) | (B>>(RGB_FXP_SHIFTER + 3))  );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) Color;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab #if (SPANROP & AFLAT) || (SPANROP & AMAP)\tab \tab // alpha map or alpha flat or both
\par \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab int32 DColor,AR,AG,AB;
\par \tab \tab \tab \tab \tab \tab #if (SPANROP & AMAP) && (SPANROP & AFLAT)
\par \tab \tab \tab \tab \tab \tab int32 Alpha,OneMinusAlpha;
\par \tab \tab \tab \tab \tab \tab #endif 
\par 
\par \tab \tab \tab \tab \tab \tab DColor = *DestBits;
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab #if SPANROP & TMAP\tab 
\par \tab \tab \tab \tab \tab \tab \tab #if (SPANROP & AMAP) 
\par \tab \tab \tab \tab \tab \tab \tab \tab Color = *( ((ALPHAMAPPIXEL *)TextureBits) + ((U>>16)&UMask) + TOPDOWN_OR_BOTTOMUP(((V>>16)&VMask) << StrideShift));\tab //4444 argb
\par \tab \tab \tab \tab \tab \tab \tab \tab #ifdef RGB\tab // alpha map and rgb shading
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = (((Color & 0xF00)>>8 ) * R) >>(4+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = (((Color & 0x0F0)>>4 ) * G) >>(4+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = ( (Color & 0x00F)      * B) >>(4+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab #else\tab \tab // alpha map only
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = ((Color & 0xF00)>>4 ) ;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = ((Color & 0x0F0)    ) ;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = ((Color & 0x00F)<<4 ) ;
\par \tab \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab \tab #if (SPANROP & AFLAT)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Alpha  = ((Color>>12) * A)>>4;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab OneMinusAlpha = 16-Alpha;
\par \tab \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab A = (Color>>12);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab OneMinusA = 16-A;
\par \tab \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab #else\tab // texture map without alpha
\par \tab \tab \tab \tab \tab \tab \tab \tab Color = Palette[*(TextureBits + ((U>>16)&UMask) + TOPDOWN_OR_BOTTOMUP(((V>>16)&VMask) << StrideShift))];\tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = (( Color & 0xFF    )      * R) >>(8+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = (((Color & 0xFF00  )>>8 ) * G) >>(8+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = (((Color & 0xFF0000)>>16) * B) >>(8+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = (Color & 0xFF    );
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = (Color & 0xFF00  )>>8;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = (Color & 0xFF0000)>>16;
\par \tab \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else\tab 
\par \tab \tab \tab \tab \tab \tab \tab // no texture
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = R >>RGB_FXP_SHIFTER;
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = G >>RGB_FXP_SHIFTER;
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = B >>RGB_FXP_SHIFTER;
\par \tab \tab \tab \tab \tab \tab \tab #else\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (Color & 0xFF    );
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (Color & 0xFF00  )>>8;
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (Color & 0xFF0000)>>16; 
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab #if (SPANROP & AMAP) && (SPANROP & AFLAT)
\par \tab \tab \tab \tab \tab \tab \tab #if SPANROP & D565
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0xF800)>>8) * OneMinusAlpha) + (AR * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x7E0)>>3)  * OneMinusAlpha) + (AG * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusAlpha) + (AB * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<11) | ( (AG>>6)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0x7C00)>>7) * OneMinusAlpha) + (AR * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x3E0)>>2)  * OneMinusAlpha) + (AG * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusAlpha) + (AB * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<10) | ( (AG>>7)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab #if SPANROP & D565
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0xF800)>>8) * OneMinusA) + (AR * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x7E0)>>3)  * OneMinusA) + (AG * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusA) + (AB * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<11) | ( (AG>>6)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0x7C00)>>7) * OneMinusA) + (AR * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x3E0)>>2)  * OneMinusA) + (AG * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusA) + (AB * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<10) | ( (AG>>7)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab \}
\par \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \}
\par \tab \tab #if SPANROP & ZTEST
\par \tab \tab else
\par \tab \tab \tab \{
\par \tab \tab \tab \tab ZMapBits++;
\par \tab \tab \tab \tab DestBits++;
\par \tab \tab \tab \}
\par \tab \tab #endif
\par \tab 
\par \tab \tab #if SPANROP & TMAP
\par \tab \tab U += dU;
\par \tab \tab V += dV;
\par \tab \tab #endif
\par \tab \tab #ifdef RGB
\par \tab \tab R += dR;
\par \tab \tab G += dG;
\par \tab \tab B += dB;
\par \tab \tab #endif
\par \tab \tab #ifdef ZBUF
\par \tab \tab Z += dZ;
\par \tab \tab #endif
\par \tab \}
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070030}Span_Factory.h{\*\bkmkend _Toc454070030}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Span_AffineLoop.H                                                                   */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  This is a template to create multiple affine span line drawing        */
\par /*                routines.  See Span, Span_Factory                                     */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par while(i-- > 0)
\par \tab \{
\par \tab \tab #if SPANROP & ZTEST
\par \tab \tab ZFromMap = *(ZMapBits);
\par \tab \tab if (ZFromMap > (Z>>16))
\par \tab \tab #endif
\par \tab \tab \tab \{
\par \tab \tab \tab \tab #if SPANROP & ZSET
\par \tab \tab \tab \tab *(ZMapBits++) = (ZMAPPIXEL)(Z>>16);
\par \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab #if SPANROP & ZTEST
\par \tab \tab \tab \tab \tab ZMapBits++;
\par \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab #if !(( SPANROP & AFLAT) || (SPANROP & AMAP))\tab \tab // NO alpha
\par \tab \tab \tab \tab \tab #if (SPANROP & TMAP) 
\par \tab \tab \tab \tab \tab \tab #ifdef TEST_LIGHTMAP
\par \tab \tab \tab \tab \tab \tab \tab Color = 0xFFFFFF;
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab Color = Palette[*(TextureBits + ((U>>16)&UMask) + TOPDOWN_OR_BOTTOMUP(((V>>16)&VMask) << StrideShift))];
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #if SPANROP & D565 
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((((Color&0xFF)*R)>>15)&0xF800) | (((((Color&0xFF00)>>8)*G)>>20)&0x7E0) | ((((Color&0xFF0000)>>16)*B)>>26) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((Color&0xF8)<<8) /*R*/ | ((Color&0xFC00)>>5) /*G*/ | ((Color&0xF80000)>>19)/*B*/ );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((((Color&0xFF)*R)>>16)&0x7C00) | (((((Color&0xFF00)>>8)*G)>>21)&0x3E0) | ((((Color&0xFF0000)>>16)*B)>>26) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) (\tab ((Color&0xF8)<<7) /*R*/ | ((Color&0xF800)>>6) /*G*/ | ((Color&0xF80000)>>19)/*B*/ );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab #if SPANROP & D565
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL)\tab (  ((R>>(RGB_FXP_SHIFTER + 3))<<11) | ((G>>(RGB_FXP_SHIFTER + 2))<<5) | (B>>(RGB_FXP_SHIFTER + 3))  );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) Color;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL)(  ((R>>(RGB_FXP_SHIFTER + 3))<<10) | ((G>>(RGB_FXP_SHIFTER + 3))<<5) | (B>>(RGB_FXP_SHIFTER + 3))  );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) Color;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab #if (SPANROP & AFLAT) || (SPANROP & AMAP)\tab \tab // alpha map or alpha flat or both
\par \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab int32 DColor,AR,AG,AB;
\par \tab \tab \tab \tab \tab \tab #if (SPANROP & AMAP) && (SPANROP & AFLAT)
\par \tab \tab \tab \tab \tab \tab int32 Alpha,OneMinusAlpha;
\par \tab \tab \tab \tab \tab \tab #endif 
\par 
\par \tab \tab \tab \tab \tab \tab DColor = *DestBits;
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab #if SPANROP & TMAP\tab 
\par \tab \tab \tab \tab \tab \tab \tab #if (SPANROP & AMAP) 
\par \tab \tab \tab \tab \tab \tab \tab \tab Color = *( ((ALPHAMAPPIXEL *)TextureBits) + ((U>>16)&UMask) + TOPDOWN_OR_BOTTOMUP(((V>>16)&VMask) << StrideShift));\tab //4444 argb
\par \tab \tab \tab \tab \tab \tab \tab \tab #ifdef RGB\tab // alpha map and rgb shading
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = (((Color & 0xF00)>>8 ) * R) >>(4+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = (((Color & 0x0F0)>>4 ) * G) >>(4+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = ( (Color & 0x00F)      * B) >>(4+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab #else\tab \tab // alpha map only
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = ((Color & 0xF00)>>4 ) ;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = ((Color & 0x0F0)    ) ;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = ((Color & 0x00F)<<4 ) ;
\par \tab \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab \tab #if (SPANROP & AFLAT)
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Alpha  = ((Color>>12) * A)>>4;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab OneMinusAlpha = 16-Alpha;
\par \tab \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab A = (Color>>12);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab OneMinusA = 16-A;
\par \tab \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab #else\tab // texture map without alpha
\par \tab \tab \tab \tab \tab \tab \tab \tab Color = Palette[*(TextureBits + ((U>>16)&UMask) + TOPDOWN_OR_BOTTOMUP(((V>>16)&VMask) << StrideShift))];\tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab #ifdef RGB
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = (( Color & 0xFF    )      * R) >>(8+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = (((Color & 0xFF00  )>>8 ) * G) >>(8+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = (((Color & 0xFF0000)>>16) * B) >>(8+RGB_FXP_SHIFTER);
\par \tab \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AR = (Color & 0xFF    );
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AG = (Color & 0xFF00  )>>8;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab AB = (Color & 0xFF0000)>>16;
\par \tab \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else\tab 
\par \tab \tab \tab \tab \tab \tab \tab // no texture
\par \tab \tab \tab \tab \tab \tab \tab #ifdef RGB\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = R >>RGB_FXP_SHIFTER;
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = G >>RGB_FXP_SHIFTER;
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = B >>RGB_FXP_SHIFTER;
\par \tab \tab \tab \tab \tab \tab \tab #else\tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (Color & 0xFF    );
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (Color & 0xFF00  )>>8;
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (Color & 0xFF0000)>>16; 
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab #if (SPANROP & AMAP) && (SPANROP & AFLAT)
\par \tab \tab \tab \tab \tab \tab \tab #if SPANROP & D565
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0xF800)>>8) * OneMinusAlpha) + (AR * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x7E0)>>3)  * OneMinusAlpha) + (AG * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusAlpha) + (AB * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<11) | ( (AG>>6)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0x7C00)>>7) * OneMinusAlpha) + (AR * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x3E0)>>2)  * OneMinusAlpha) + (AG * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusAlpha) + (AB * Alpha);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<10) | ( (AG>>7)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab #if SPANROP & D565
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0xF800)>>8) * OneMinusA) + (AR * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x7E0)>>3)  * OneMinusA) + (AG * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusA) + (AB * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<11) | ( (AG>>6)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab \tab \tab \tab AR = (((DColor&0x7C00)>>7) * OneMinusA) + (AR * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AG = (((DColor&0x3E0)>>2)  * OneMinusA) + (AG * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab AB = (((DColor&0x1F)<<3)   * OneMinusA) + (AB * A);
\par \tab \tab \tab \tab \tab \tab \tab \tab *(DestBits++) = (DESTPIXEL) ( ( (AR>>7)<<10) | ( (AG>>7)<<5 ) | (AB>>7) );
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab \}
\par \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \}
\par \tab \tab #if SPANROP & ZTEST
\par \tab \tab else
\par \tab \tab \tab \{
\par \tab \tab \tab \tab ZMapBits++;
\par \tab \tab \tab \tab DestBits++;
\par \tab \tab \tab \}
\par \tab \tab #endif
\par \tab 
\par \tab \tab #if SPANROP & TMAP
\par \tab \tab U += dU;
\par \tab \tab V += dV;
\par \tab \tab #endif
\par \tab \tab #ifdef RGB
\par \tab \tab R += dR;
\par \tab \tab G += dG;
\par \tab \tab B += dB;
\par \tab \tab #endif
\par \tab \tab #ifdef ZBUF
\par \tab \tab Z += dZ;
\par \tab \tab #endif
\par \tab \}
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070031}SpanBuffer.h{\*\bkmkend _Toc454070031}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  SpanBuffer.H                                                                        */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  This is a raster-line based span buffer (like a z buffer but it works */
\par /*                with groups of horizontal pixels, rather than single pixels)          */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SPANBUFFER_H
\par #define SPANBUFFER_H
\par 
\par #include "basetype.h" 
\par  
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct 
\par \{\tab \tab \tab \tab \tab \tab \tab \tab \tab // This is a clipped segment of a span.
\par \tab int LeftOffset;\tab \tab \tab \tab \tab // offset from starting pixel from original span (LeftStart)
\par \tab int Width;\tab \tab \tab \tab \tab \tab // width of this segment
\par \}  SpanBuffer_ClipSegment;\tab \tab 
\par 
\par // this array holds the resulting clipped spans (segments) that result from calling _ClipAndAdd()
\par extern SpanBuffer_ClipSegment *SpanBuffer_Segments;
\par 
\par 
\par \tab // initializes the span buffer
\par geBoolean SpanBuffer_Create(int Width, int Height, int MaxSpans);
\par 
\par \tab // destroys the span buffer
\par void SpanBuffer_Destroy(void);
\par 
\par \tab // empties the span buffer
\par void\tab SpanBuffer_Clear(void);
\par 
\par \tab // adds a new span.  The span is specified by a starting pixel and a width(number of pixels)
\par \tab //  The return value is the number of clipped spans (segments) to draw.  (0 if none)
\par \tab //\tab The clipped spans are put into the exported array (SpanBuffer_Segments[0..return value+1])
\par int\tab \tab SpanBuffer_ClipAndAdd(int Line, int LeftStart, int Width);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070032}SpanEdges_Factory.h{\*\bkmkend _Toc454070032}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  SpanEdges_Factory.H                                                                 */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description:  This is a template to create multiple function with similar structure,*/
\par /*                but with slightly different options.  This template creates           */
\par /*                edge-spanning functions for walking the edges of triangles, generating*/
\par /*                spans for each scan line.                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par // This generates various edge-spanning routines
\par //   The flag bits are
\par //     TMAP:   indicates texture mapping is used.  
\par //\tab \tab \tab \tab \tab \tab \tab 1/Z, U/Z, V/Z are stepped and prepared for the span routine
\par //     SBUF:   indicates span buffering is used.  SpanBuffer is queried and segments are generated.  
\par //\tab \tab \tab \tab \tab \tab \tab 1/Z, Y are stepped and prepared for the span routine
\par //     LSHADE: indicates gouraud rgb lighting is used.  
\par //\tab \tab \tab \tab \tab \tab \tab R,G,B are stepped and prepared for the span routine
\par //\tab    ZBUF:   indicates z buffering is used.  
\par //\tab \tab \tab \tab \tab \tab \tab 1/Z is stepped and prepared for the span routine
\par //    Combinations generate the (minimal) combination of stepping and preparation
\par 
\par 
\par #ifndef SPANEDGES
\par error.  must define SPANEDGES for function creation options.
\par #endif
\par 
\par #define MAX_RGB_VALUE (255<<RGB_FXP_SHIFTER)
\par 
\par // void SpanEdges_xxx(int Height)
\par \{
\par \tab while(Height--) 
\par \tab \{
\par \tab \tab Triangle.SpanWidth = Triangle.Right.X - Triangle.Left.X;
\par \tab \tab if (Triangle.SpanWidth>0)
\par \tab \tab \tab \{
\par 
\par \tab \tab \tab \tab #if SPANEDGES & SBUF
\par \tab \tab \tab \tab \tab int Spans = SpanBuffer_ClipAndAdd(Triangle.Left.Y,Triangle.Left.X,Triangle.SpanWidth);
\par \tab \tab \tab \tab \tab SpanBuffer_ClipSegment *Segment = &(SpanBuffer_Segments[0]);
\par \tab \tab \tab \tab \tab for (;Spans>0; Spans--,Segment++)
\par \tab \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab \tab Triangle.DestBits = ((DESTPIXEL *)Triangle.Left.Dest) + Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab #if SPANEDGES & TMAP
\par \tab \tab \tab \tab \tab \tab \tab Triangle.ZMapBits = ((ZMAPPIXEL *)(Triangle.Left.Dest + Triangle.ZBufferAddressDelta)) + Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab \tab \tab #if (SPANEDGES & TMAP) || (SPANEDGES & ZBUF)
\par \tab \tab \tab \tab \tab \tab \tab OneOverZ = Triangle.Left.OneOverZ + Triangle.Gradients.dOneOverZdX * Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab #if SPANEDGES & TMAP
\par \tab \tab \tab \tab \tab \tab \tab UOverZ   = Triangle.Left.UOverZ   + Triangle.Gradients.dUOverZdX   * Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab VOverZ   = Triangle.Left.VOverZ   + Triangle.Gradients.dVOverZdX   * Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab \tab \tab #if (SPANEDGES & LSHADE)
\par \tab \tab \tab \tab \tab \tab \tab R = Triangle.Left.R + Triangle.Gradients.dRdX * Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab if (R<0) R=0; if (R>MAX_RGB_VALUE) R=MAX_RGB_VALUE;\tab 
\par \tab \tab \tab \tab \tab \tab \tab G = Triangle.Left.G + Triangle.Gradients.dGdX * Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab if (G<0) G=0; if (G>MAX_RGB_VALUE) G=MAX_RGB_VALUE;\tab 
\par \tab \tab \tab \tab \tab \tab \tab B = Triangle.Left.B + Triangle.Gradients.dBdX * Segment->LeftOffset;
\par \tab \tab \tab \tab \tab \tab \tab if (B<0) B=0; if (B>MAX_RGB_VALUE) B=MAX_RGB_VALUE;\tab 
\par 
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab \tab \tab Triangle.SpanWidth = Segment->Width;
\par \tab \tab \tab \tab \tab \tab \tab #if SPANEDGES & LMAP
\par \tab \tab \tab \tab \tab \tab \tab if (!Triangle.IsLightMapSetup)
\par \tab \tab \tab \tab \tab \tab \tab \tab TRaster_LightMapSetup();
\par \tab \tab \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab \tab \tab TRaster_DrawSpan();
\par \tab \tab \tab \tab \tab \tab \}
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab #else
\par \tab \tab \tab \tab \tab Triangle.DestBits = (DESTPIXEL *)Triangle.Left.Dest; 
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab #if SPANEDGES & ZBUF
\par \tab \tab \tab \tab \tab Triangle.ZMapBits = (ZMAPPIXEL *)(Triangle.Left.Dest + Triangle.ZBufferAddressDelta);
\par \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab #if SPANEDGES & TMAP
\par \tab \tab \tab \tab \tab UOverZ   = Triangle.Left.UOverZ;
\par \tab \tab \tab \tab \tab VOverZ   = Triangle.Left.VOverZ;
\par \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab #if (SPANEDGES & TMAP) || (SPANEDGES & ZBUF)
\par \tab \tab \tab \tab \tab OneOverZ = Triangle.Left.OneOverZ;
\par \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab #if (SPANEDGES & LSHADE)
\par \tab \tab \tab \tab \tab R = Triangle.Left.R;\tab 
\par \tab \tab \tab \tab \tab if (R<0) R=0; if (R>MAX_RGB_VALUE) R=MAX_RGB_VALUE;\tab 
\par 
\par \tab \tab \tab \tab \tab G = Triangle.Left.G;
\par \tab \tab \tab \tab \tab if (G<0) G=0; if (G>MAX_RGB_VALUE) G=MAX_RGB_VALUE;\tab 
\par 
\par \tab \tab \tab \tab \tab B = Triangle.Left.B;
\par \tab \tab \tab \tab \tab if (B<0) B=0; if (B>MAX_RGB_VALUE) B=MAX_RGB_VALUE;\tab 
\par 
\par \tab \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab \tab #if SPANEDGES & LMAP
\par \tab \tab \tab \tab \tab if (!Triangle.IsLightMapSetup)
\par \tab \tab \tab \tab \tab \tab TRaster_LightMapSetup();
\par \tab \tab \tab \tab \tab #endif
\par \tab \tab \tab \tab \tab TRaster_DrawSpan();
\par \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \}
\par 
\par \tab \tab // step left edge
\par \tab \tab Triangle.Left.X += Triangle.Left.XStep;\tab \tab \tab   
\par \tab \tab Triangle.Left.Dest += Triangle.Left.DestStep; 
\par \tab \tab Triangle.Left.Height--; 
\par \tab \tab Triangle.Left.ErrorTerm += Triangle.Left.Numerator;\tab \tab \tab 
\par 
\par \tab \tab #if SPANEDGES & TMAP
\par \tab \tab Triangle.Left.UOverZ += Triangle.Left.UOverZStep;\tab \tab \tab 
\par \tab \tab Triangle.Left.VOverZ += Triangle.Left.VOverZStep;\tab \tab 
\par \tab \tab #endif
\par 
\par \tab \tab #if (SPANEDGES & TMAP) || (SPANEDGES & ZBUF)
\par \tab \tab Triangle.Left.OneOverZ  += Triangle.Left.OneOverZStep; 
\par \tab \tab #endif
\par \tab 
\par 
\par \tab \tab #if SPANEDGES & LSHADE
\par \tab \tab Triangle.Left.R += Triangle.Left.RStep; 
\par \tab \tab Triangle.Left.G += Triangle.Left.GStep; 
\par \tab \tab Triangle.Left.B += Triangle.Left.BStep;
\par \tab \tab #endif
\par 
\par \tab \tab #if SPANEDGES & SBUF
\par \tab \tab Triangle.Left.Y ++;
\par \tab \tab #endif
\par 
\par \tab \tab if (Triangle.Left.ErrorTerm >= Triangle.Left.Denominator) 
\par \tab \tab \tab \{
\par \tab \tab \tab \tab Triangle.Left.X++; 
\par \tab \tab \tab \tab Triangle.Left.Dest+=sizeof(DESTPIXEL); 
\par \tab \tab \tab \tab Triangle.Left.ErrorTerm -= Triangle.Left.Denominator; 
\par 
\par \tab \tab \tab \tab #if SPANEDGES & TMAP
\par \tab \tab \tab \tab Triangle.Left.UOverZ    += Triangle.Left.dUOverZdX;\tab 
\par \tab \tab \tab \tab Triangle.Left.VOverZ    += Triangle.Left.dVOverZdX;
\par \tab \tab \tab \tab #endif
\par 
\par \tab \tab \tab \tab #if (SPANEDGES & TMAP) || (SPANEDGES & ZBUF)
\par \tab \tab \tab \tab Triangle.Left.OneOverZ  += Triangle.Left.dOneOverZdX;\tab 
\par \tab \tab \tab \tab #endif
\par 
\par 
\par \tab \tab \tab \tab #if SPANEDGES & LSHADE
\par \tab \tab \tab \tab Triangle.Left.R += Triangle.Left.dRdX; 
\par \tab \tab \tab \tab Triangle.Left.G += Triangle.Left.dGdX; 
\par \tab \tab \tab \tab Triangle.Left.B += Triangle.Left.dBdX;
\par \tab \tab \tab \tab #endif
\par \tab \tab \tab \}
\par 
\par \tab \tab // step right edge
\par \tab \tab Triangle.Right.X += Triangle.Right.XStep; 
\par \tab \tab Triangle.Right.ErrorTerm += Triangle.Right.Numerator;
\par \tab \tab if (Triangle.Right.ErrorTerm >= Triangle.Right.Denominator)\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \\
\par \tab \tab \tab \{\tab 
\par \tab \tab \tab \tab Triangle.Right.X++;  
\par \tab \tab \tab \tab Triangle.Right.ErrorTerm -= Triangle.Right.Denominator;
\par \tab \tab \tab \}\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par \tab \}
\par \}
\par 
\par 
\par #undef SPANEDGES
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070033}SWTHandle.h{\*\bkmkend _Toc454070033}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  SWTHandle.H                                                                         */
\par /*                                                                                      */
\par /*  Author: Mike Sandige, John Pollard                                                  */
\par /*  Description:  Manager for texture construction and available texture formats for    */
\par /*                the software driver                                                   */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef SWTHANDLE_H
\par #define SWTHANDLE_H
\par 
\par #include "DCommon.h"
\par #include "PixelFormat.h"
\par 
\par // THandle flags
\par #define THANDLE_UPDATE\tab \tab (1<<0)\tab \tab // Force a thandle to be uploaded to the card
\par #define\tab THANDLE_TRANS\tab \tab (1<<2)\tab \tab // Texture has transparency
\par #define THANDLE_LOCKED\tab \tab (1<<3)\tab \tab // THandle is currently locked (invalid for rendering etc)
\par 
\par typedef struct geRDriver_THandle
\par \{
\par \tab int32\tab \tab \tab \tab \tab Active, Width, Height, MipLevels;
\par \tab geRDriver_PixelFormat\tab PixelFormat;
\par \tab uint16\tab \tab \tab \tab \tab *BitPtr[16];//8 or 16
\par \tab geRDriver_THandle\tab \tab *PalHandle;
\par \tab geRDriver_THandle\tab \tab *AlphaHandle;
\par 
\par \tab uint32\tab \tab \tab \tab \tab Flags;
\par \} geRDriver_THandle;
\par 
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_EnumPixelFormats(DRV_ENUM_PFORMAT_CB *Cb, void *Context);
\par geBoolean\tab \tab \tab \tab \tab \tab SWTHandle_FreeAllTextureHandles(void);
\par geRDriver_THandle\tab *DRIVERCC\tab SWTHandle_CreateTexture(int32 Width, int32 Height, int32 NumMipLevels, const geRDriver_PixelFormat *PixelFormat);
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_DestroyTexture(geRDriver_THandle *THandle);
\par 
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_LockTextureHandle(geRDriver_THandle *THandle, int32 MipLevel, void **Data);
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_UnLockTextureHandle(geRDriver_THandle *THandle, int32 MipLevel);
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_GetInfo(geRDriver_THandle *THandle, int32 MipLevel, geRDriver_THandleInfo *Info);
\par 
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_SetPalette(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par geRDriver_THandle\tab *DRIVERCC\tab SWTHandle_GetPalette(geRDriver_THandle *THandle);
\par geBoolean\tab \tab \tab DRIVERCC\tab SWTHandle_SetAlpha(geRDriver_THandle *THandle, geRDriver_THandle *PalHandle);
\par geRDriver_THandle\tab *DRIVERCC\tab SWTHandle_GetAlpha(geRDriver_THandle *THandle);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070034}traster.h{\*\bkmkend _Toc454070034}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  TRaster.H                                                                           */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description:  API layer for Triangle Rasterizer                                     */
\par /*                                                                                      */
\par /*  Code fragments from Chris Hecker's texture mapping articles used with               */
\par /*  permission.  http://www.d6.com/users/checker                                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef TRASTER_H
\par #define TRASTER_H
\par //\tab  TRaster
\par //   Triangle Rasterizer
\par //
\par 
\par #include "basetype.h"
\par #include "rop.h"
\par #include "swthandle.h"\tab \tab \tab // geRDriver_THandle
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define TRASTER_DEFAULT_MAX_AFFINE_SIZE (32)
\par 
\par typedef struct
\par \{
\par \tab unsigned short *BitPtr;\tab \tab \tab \tab \tab \tab // pointer to lightmap bits
\par \tab int Height;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Lightmap Height
\par \tab int Width;\tab \tab \tab \tab \tab \tab \tab \tab \tab // Lightmap Width
\par \tab float LightMapShiftU,LightMapShiftV;\tab \tab // Lightmap coordinates u (LMU) = (TextureU-LightMapShiftU)*LightMapScaleU
\par \tab float LightMapScaleU,LightMapScaleV;\tab \tab // Lightmap coordinates v (LMV) = (TextureV-LightMapShiftV)*LightMapScaleV
\par \tab int MipIndex;\tab \tab \tab \tab \tab \tab \tab \tab // Texture's mipping level
\par \} TRaster_Lightmap;
\par 
\par 
\par \tab \tab // Call this before calling _Rasterize
\par void GENESISCC TRaster_Setup(
\par \tab \tab int MaxAffineSize,\tab \tab \tab \tab \tab \tab // maximum width or height for a non-perspective corrected poly
\par \tab \tab geRDriver_THandle *Dest,\tab \tab \tab \tab // destination bitmap
\par \tab \tab geRDriver_THandle *ZBuffer,\tab \tab \tab \tab // zbuffer bitmap
\par \tab \tab void (*Callback)(TRaster_Lightmap *LM));// initialize lightmap callback 
\par 
\par \tab \tab // expected ranges for pVertices elements:
\par \tab \tab //   x,y  (pretty much anything)  but these are in screen space...
\par \tab \tab //   z  (0..65536)  
\par \tab \tab //   r,g,b:  0..255
\par \tab \tab //   a: 0..255
\par \tab \tab //   pVertices expected in clockwise winding order.  Counter clockwise will not be rasterized.
\par void GENESISCC TRaster_Rasterize( 
\par \tab \tab geROP ROP,\tab \tab \tab \tab \tab \tab \tab \tab // ROP (raster operation to use for this triangle)
\par \tab \tab geRDriver_THandle *Texture,\tab \tab \tab \tab // Texture to use (can be NULL if ROP doesn't use it)
\par \tab \tab int MipIndex,\tab \tab \tab \tab \tab \tab \tab // index of MIP level to use. 0 is highest detail
\par \tab \tab const DRV_TLVertex \tab *pVertices);\tab \tab // corners of the triangle (there must be 3 of these!)
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070035}triangle.h{\*\bkmkend _Toc454070035}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Triangle.h                                                                          */
\par /*                                                                                      */
\par /*  Author: Mike Sandige\tab                                                             */
\par /*  Description:  Edge and Gradient calculations for triangle rasterizater              */
\par /*                                                                                      */
\par /*  Code fragments from Chris Hecker's texture mapping articles used with               */
\par /*  permission.  http://www.d6.com/users/checker                                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par 
\par #ifndef TRIANGLE_H
\par #define TRIANGLE_H
\par 
\par #include "basetype.h"
\par #include "swthandle.h"\tab \tab \tab // geRDriver_THandle
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par 
\par 
\par //#define NOISE_FILTER
\par 
\par #define USE_FIXED_POINT 
\par 
\par 
\par 
\par #define OOZ_NUMERATOR_SHIFTER  (32)
\par #define OOZ_NUMERATOR     0xFFFFFFFF
\par /* oz 20 ooz 30 divprec 16 oozmulprec 8 ozmulprec 8  good. */
\par /* oz 20 ooz 26 divprec 16 oozmulprec 10 ozmulprec 6  good. */
\par /* oz 20 ooz 26 divprec 18 oozmulprec 12 ozmulprec 4  good. (small textures suffer a little)*/
\par 
\par //\tab \tab \tab \tab \tab \tab \tab  32
\par #define OZ_FXP_SHIFTER /*________________   *     */  (20)\tab \tab \tab \tab \tab \tab \tab \tab 
\par #define OOZ_FXP_SHIFTER       (26)\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par 
\par #define OOZ_DIV_PRECISION_BITS (18)
\par 
\par #define OOZ_MULTIPLY_PRECISION_BITS   (12)
\par #define OZ_MULTIPLY_PRECISION_BITS    (4)\tab \tab \tab \tab // affects the accuracy to the nearest texel 
\par 
\par #define OOZ_DIV_PREP_RSHIFT    (OOZ_FXP_SHIFTER - OOZ_DIV_PRECISION_BITS)\tab \tab \tab \tab 
\par 
\par #define RGB_FXP_SHIFTER (15)\tab 
\par #define Z_FXP_SHIFTER (8)
\par 
\par #define Z_FXP_MULTIPLIER   ((float)( 1 <<   Z_FXP_SHIFTER ))\tab 
\par #define OOZ_FXP_MULTIPLIER ((float)( 1 << OOZ_FXP_SHIFTER ))\tab 
\par #define OZ_FXP_MULTIPLIER  ((float)( 1 <<  OZ_FXP_SHIFTER )) 
\par #define RGB_FXP_MULTIPLIER ((float)( 1 << RGB_FXP_SHIFTER ))
\par 
\par #define OOZ_MUL_PREP_RSHIFT  (OOZ_NUMERATOR_SHIFTER - OOZ_FXP_SHIFTER + OOZ_DIV_PREP_RSHIFT - OOZ_MULTIPLY_PRECISION_BITS)\tab \tab 
\par #define  OZ_MUL_PREP_RSHIFT  (OZ_FXP_SHIFTER - OZ_MULTIPLY_PRECISION_BITS)\tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par /* fixed point is used for the edge and span iterators.   
\par 
\par \tab \tab The 1/z (OOZ) iterator is stored with 6.26 precision.
\par \tab \tab The other 1/U iterators are stored with 12.20 precision.
\par \tab \tab (These were experimentially determined by minimizing the visible errors.)
\par 
\par \tab \tab (OOZ_NUMERATOR is ~= 0.32)
\par 
\par \tab \tab so, to compute a 16.16 fixed point U from 1/z and U/z
\par 
\par \tab \tab  U  =\{[(2^OZ_FXP_SHIFTER)/((1/z * 2^OOZ_FXP_SHIFTER)>>OOZ_DIV_PRE_RSHIFT)]>>OOZ_MUL_PREP_RSHIFT\} * \{[U/z * 2^OZ_FXP_SHIFTER]>>OZ_MUL_PRE_PRSHIFT\}
\par 
\par \tab \tab  U  =\{[(2^32)/((1/z * 2^26)>>8)]>>2\} * \{[U/z * 2^20]>>16\}
\par \tab \tab     =\{[(2^32)/(   1/z * 2^18   ]>>2\} * \{   U/z * 2^4    \}
\par \tab \tab     =\{[       z * 2^14         ]>>2\} * \{   U/z * 2^4    \}
\par \tab \tab \tab =\{        z * 2^12             \} * \{   U/z * 2^4    \}
\par \tab \tab \tab =                        (z*U/z) * 2^16
\par \tab \tab \tab =                              U * 2^16
\par 
\par 
\par 
\par */
\par 
\par 
\par #if OOZ_DIV_PREP_RSHIFT > 0
\par \tab #define OOZ_DIV_PREP(OOZ)   ((OOZ)>>OOZ_DIV_PREP_RSHIFT)
\par #else
\par \tab #define OOZ_DIV_PREP(OOZ)   ((OOZ)<<(-OOZ_DIV_PREP_RSHIFT))
\par #endif
\par 
\par #if OZ_MUL_PREP_RSHIFT > 0
\par \tab #define OZ_MUL_PREP(OZ)\tab \tab ((OZ)>>OZ_MUL_PREP_RSHIFT)   
\par #else
\par \tab #define OZ_MUL_PREP(OZ)\tab \tab ((OZ)<<(-OZ_MUL_PREP_RSHIFT))   
\par #endif
\par 
\par #if OOZ_MUL_PREP_RSHIFT > 0
\par \tab #define OOZ_MUL_PREP(OZ)\tab ((OZ)>>OOZ_MUL_PREP_RSHIFT)   
\par #else
\par \tab #define OOZ_MUL_PREP(OZ)\tab ((OZ)<<(-OOZ_MUL_PREP_RSHIFT))   
\par #endif
\par 
\par #if (OOZ_MULTIPLY_PRECISION_BITS > 8)
\par \tab #define OOZ_MUL_Z(OOZ,Z)  ( ((OOZ)>>(OOZ_MULTIPLY_PRECISION_BITS-8)) * (Z) )
\par #else
\par \tab #define OOZ_MUL_Z(OOZ,Z)  ( ((OOZ)<<(8-OOZ_MULTIPLY_PRECISION_BITS)) * (Z) )
\par #endif
\par 
\par #if (OOZ_MULTIPLY_PRECISION_BITS > 8)
\par \tab #define GRADIENT_OOZ_MUL_Z(OOZ,Z)  ( ((OOZ)>>(OOZ_FXPMULTIPLY_PRECISION_BITS-8)) * (Z) )
\par #else
\par \tab #define GRADIENT_OOZ_MUL_Z(OOZ,Z)  ( ((OOZ)<<(8-OOZ_MULTIPLY_PRECISION_BITS)) * (Z) )
\par #endif
\par 
\par #if (OZ_MULTIPLY_SHIFTER <0) || (OOZ_MULTIPLY_SHIFTER<0)
\par \tab error.  
\par #endif
\par 
\par #define USE_FIXED_POINT 
\par #define DEST16BIT
\par 
\par #ifdef USE_FIXED_POINT
\par #define FXFL int32
\par #define FXFL_OOZ(XXX)   ((int32)((XXX) * OOZ_FXP_MULTIPLIER))
\par #define FXFL_OZ(XXX)    ((int32)((XXX) *  OZ_FXP_MULTIPLIER))
\par #define FXFL_RGB(XXX)   ((int32)((XXX) * RGB_FXP_MULTIPLIER))
\par #define FXFL_Z(XXX)     ((int32)((XXX) *   Z_FXP_MULTIPLIER))
\par #define OOZ_FXP_TO_16_16(XXX)  ( (XXX)>>(OOZ_FXP_SHIFTER-16) )
\par #define  OZ_FXP_TO_16_16(XXX)  ( (XXX)>>(OZ_FXP_SHIFTER-16)  )
\par #define     Z_FXP_TO_INT(XXX)  ( (XXX)>>Z_FXP_SHIFTER        )
\par #define RGB_FXP_TO_16_16(XXX)  (XXX)
\par #else
\par \tab error.
\par #endif
\par 
\par 
\par #define TEXTUREPIXEL\tab unsigned char 
\par #define LIGHTMAPPIXEL   unsigned char
\par #ifdef DEST16BIT
\par \tab #define DESTPIXEL\tab unsigned short
\par #else
\par \tab #define DESTPIXEL\tab unsigned char
\par #endif
\par #define ZMAPPIXEL\tab \tab unsigned short
\par #define ALPHAMAPPIXEL\tab unsigned short
\par 
\par #define DESTPIXEL_SHIFTER (sizeof(DESTPIXEL)/2)
\par #ifdef USE_DIBS
\par #define TOPDOWN_OR_BOTTOMUP(XXX) (-(XXX))  // + for TOPDOWN, - for BOTTOMUP.
\par #else
\par #define TOPDOWN_OR_BOTTOMUP(XXX) ((XXX))  // + for TOPDOWN, - for BOTTOMUP.
\par #endif
\par 
\par // ROP FLAGS
\par #define TMAP\tab \tab 0x1
\par #define LSHADE\tab \tab 0x2
\par #define LFLAT\tab \tab 0x4
\par #define LMAP        0x8
\par #define AFLAT\tab \tab 0x10
\par #define AMAP\tab \tab 0x20
\par #define ZSET\tab \tab 0x40
\par #define ZTEST\tab \tab 0x80
\par #define ZBUF\tab \tab 0x100\tab \tab // any zbuffering
\par #define SBUF\tab \tab 0x200
\par #define D565\tab \tab 0x200\tab \tab // not really a rop flag, but used in generating spans
\par 
\par 
\par 
\par #define TRASTER_SMALL_DIVIDE_TABLESIZE 129
\par 
\par 
\par 
\par typedef struct Triangle_Gradients 
\par \{
\par \tab float OneOverZ[3];\tab \tab \tab // 1/Z per vtx\tab (if Affine Z per vtx)  Normalized!
\par \tab \tab \tab \tab \tab \tab \tab \tab // all Z's stored here are normalized to [0..1]  see FZScale below
\par \tab float UOverZ[3];\tab \tab \tab // U/Z per vtx\tab (if Affine U per vtx)  
\par \tab float VOverZ[3];\tab \tab \tab // V/Z per vtx\tab (if Affine V per vtx)  
\par \tab float FdOneOverZdX;\tab \tab \tab // d(1/Z)/dX\tab (if Affine dZ/dX )
\par \tab float dOneOverZdY;\tab \tab \tab // d(1/Z)/dY\tab (if Affine dZ/dY )
\par \tab float FdUOverZdX;\tab \tab \tab // d(U/Z)/dX\tab (if Affine dU/dX )
\par \tab float dUOverZdY;\tab \tab \tab // d(U/Z)/dY\tab (if Affine dU/dY )
\par \tab float FdVOverZdX;\tab \tab \tab // d(V/Z)/dX\tab (if Affine dV/dX )
\par \tab float dVOverZdY;\tab \tab \tab // d(V/Z)/dY\tab (if Affine dV/dY )
\par 
\par \tab int SubSpanWidth;\tab \tab \tab // maximum affine subdivision width for this poly (power of 2)
\par \tab int SubSpanShift;\tab \tab \tab //   shift to divide by SubSpanLength   1<<SubSpanShift == SubSpanWidth
\par \tab int Affine;\tab \tab \tab \tab \tab // flag:  if true, then all gradients are NOT 1/Z, just Z
\par 
\par \tab // lighting interpolation is always affine
\par \tab float FdRdX;\tab \tab \tab \tab // dR/dX (the F means float, since there is a fixed point version of this also)
\par \tab float  dRdY;\tab \tab \tab \tab // dR/dY  
\par \tab float FdGdX;\tab \tab \tab \tab // dG/dX (the F means float, since there is a fixed point version of this also)
\par \tab float  dGdY;\tab \tab \tab \tab // dG/dY  
\par \tab float FdBdX;\tab \tab \tab \tab // dB/dX (the F means float, since there is a fixed point version of this also)
\par \tab float  dBdY;\tab \tab \tab \tab // dB/dY  
\par 
\par \tab FXFL dOneOverZdX;\tab \tab \tab // fixed point FdOneOverZdX (FXFL_OOZ)\tab \tab  see precision comments
\par \tab FXFL dUOverZdX;\tab \tab \tab \tab // fixed point FdUOverZdX   (FXFL_OZ)
\par \tab FXFL dVOverZdX;\tab \tab \tab \tab // fixed point FdVOverZdX   (FXFL_OZ)
\par \tab FXFL dRdX;\tab \tab \tab \tab \tab // fixed point FdRdX        (FXFL_RGB)
\par \tab FXFL dGdX;\tab \tab \tab \tab \tab // fixed point FdGdX        (FXFL_RGB)
\par \tab FXFL dBdX;\tab \tab \tab \tab \tab // fixed point FdBdX        (FXFL_RGB)
\par 
\par \tab float FZScale;\tab \tab \tab \tab // Z is normalized to a max Z of 1.0.  so Normalized_Z = Z/FZScale;
\par \tab FXFL  ZScale;\tab \tab \tab \tab // fixed point FZScale      (FXFL_Z)
\par \} Triangle_Gradients;
\par 
\par 
\par typedef struct Triangle_Edge
\par \{
\par \tab int32 X;\tab \tab \tab \tab \tab // current X of edge pixel 
\par \tab int32 XStep;\tab \tab \tab \tab // X + XStep = X for next edge point
\par \tab uint32 Dest;\tab \tab \tab \tab // current address into destination bits for edge pixel
\par \tab int32 DestStep;\tab \tab \tab \tab // Dest + DestStep = Dest for next edge point
\par \tab int32 Numerator, Denominator;// DDA fraction
\par \tab int32 ErrorTerm;\tab \tab \tab \tab // DDA error
\par 
\par \tab FXFL OneOverZ;\tab \tab \tab \tab // current 1/Z \tab  (if Gradients.Affine: Z)
\par \tab FXFL OneOverZStep;\tab \tab \tab // OneOverZ + OneOverZStep = 1/Z for next edge point
\par \tab FXFL UOverZ;\tab \tab \tab \tab // current U/Z   (if Gradients.Affine: U)
\par \tab FXFL UOverZStep;\tab \tab \tab // UOneOverZ + UOverZStep = U/Z for next edge point
\par \tab FXFL VOverZ;\tab \tab \tab \tab // V/Z and step     (if Gradients.Affine: V )
\par \tab FXFL VOverZStep;\tab \tab \tab // VOneOverZ + VOverZStep = V/Z for next edge point
\par \tab FXFL R;\tab \tab \tab \tab \tab \tab // current R
\par \tab FXFL RStep;\tab \tab \tab \tab \tab // R + RStep = R for next edge point
\par \tab FXFL G;\tab \tab \tab \tab \tab \tab // current G
\par \tab FXFL GStep;\tab \tab \tab \tab \tab // G + GStep = G for next edge point
\par \tab FXFL B;\tab \tab \tab \tab \tab \tab // B
\par \tab FXFL BStep;\tab \tab \tab \tab \tab // B + BStep = B for next edge point
\par \tab 
\par \tab // (these are copied from Gradients) 
\par \tab FXFL dOneOverZdX;\tab 
\par \tab FXFL dUOverZdX; \tab 
\par \tab FXFL dVOverZdX; \tab 
\par \tab FXFL dRdX;\tab \tab \tab 
\par \tab FXFL dGdX;\tab \tab \tab 
\par \tab FXFL dBdX;\tab \tab \tab 
\par \tab //--------
\par 
\par \tab int Y;\tab \tab \tab \tab \tab \tab // current Y of edge pixel
\par \tab int Height;\tab \tab \tab \tab \tab // number of vertical pixels in this edge
\par 
\par \} Triangle_Edge;
\par 
\par 
\par #define Triangle_PaletteEntry uint32
\par 
\par typedef struct Triangle_Triangle
\par \{
\par \tab int ROPFlags;\tab \tab \tab \tab \tab \tab // bit flags for rop.
\par \tab Triangle_Gradients Gradients;\tab \tab // Changes across the triangle with respect to the screen
\par \tab Triangle_Edge Left;\tab \tab \tab \tab \tab // current left edge of currently drawing triangle
\par \tab Triangle_Edge Right;\tab \tab \tab \tab // current right edge of currently drawing triangle
\par \tab 
\par \tab DESTPIXEL *DestBits;\tab \tab \tab \tab // pointer into destination bits at left edge of span to draw
\par \tab TEXTUREPIXEL *TextureBits;\tab \tab \tab // pointer to first scan line of texture bits
\par \tab Triangle_PaletteEntry *Palette;\tab \tab // pointer to texture palette
\par \tab int MipIndex;\tab \tab \tab \tab \tab \tab // mip level; index 0 is highest detail
\par \tab int StrideShift;\tab \tab \tab \tab \tab // Texture is always a power of two width.  This is the power.
\par 
\par \tab int   SpanWidth;\tab \tab \tab \tab \tab // Width in pixels of current span
\par 
\par \tab int UMask;\tab \tab \tab \tab \tab \tab \tab // Mask U by this for tiling
\par \tab int VMask;\tab \tab \tab \tab \tab \tab \tab // Mask V by this for tiling
\par \tab 
\par \tab LIGHTMAPPIXEL *LightMapBits;\tab \tab // pointer to first scan line of light map bits as supplied by engine
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // scale a U or V down into the lightmap
\par \tab int LightMapWidth;\tab \tab \tab \tab \tab // in lightmap pixels (luxels)
\par \tab int LightMapStride;\tab \tab \tab \tab \tab // in bytes
\par \tab int LightMapHeight;\tab \tab \tab \tab \tab // in lightmap pixels (luxels)
\par \tab int LightMapMaxU;\tab \tab \tab \tab \tab // maximum lightmap U (in 16:16 fixed point)
\par \tab int LightMapMaxV;\tab \tab \tab \tab \tab // maximum lightmap V (in 16:16 fixed point)
\par \tab int32 LightMapShiftU;\tab \tab \tab \tab \tab \tab // 16:16 shift such that LMU = (u-LightMapShiftU)*LightMapScaleU
\par \tab int32 LightMapScaleU;\tab \tab \tab \tab \tab \tab // 8:8 multiplication such that LMU = (u-LightMapShiftU)*LightMapScaleU
\par \tab int32 LightMapShiftV;\tab \tab \tab \tab \tab \tab // 16:16 shift such that LMV = (v-LightMapShiftV)*LightMapScaleV
\par \tab int32 LightMapScaleV;\tab \tab \tab \tab \tab \tab // 8:8 multiplication such that LMV = (v-LightMapShiftV)*LightMapScaleV
\par 
\par \tab ZMAPPIXEL *ZMapBits;\tab \tab \tab \tab // pointer into zmap bits at left edge of span to draw.
\par \tab geRDriver_THandle *ZMap;\tab \tab \tab // reference to currently selected zmap
\par \tab geRDriver_THandle *DestMap;\tab \tab \tab // reference to currently selected destination bitmap
\par \tab int ZBufferAddressDelta;\tab \tab \tab // Destination bitmap bits + ZBufferAddressDelta = Zbuffer bits
\par 
\par \tab int SmallDivideTable[TRASTER_SMALL_DIVIDE_TABLESIZE];\tab // for quick divides by 1..TRASTER_SMALL_DIVIDE_TABLESIZE
\par 
\par \tab float MaxAffineSize;\tab \tab \tab \tab // if triangle is smaller than this, the rasterizer reverts to affine.
\par 
\par \tab geBoolean IsLightMapSetup;\tab \tab \tab // GE_TRUE if light map is already set up. 
\par \tab void (*LightMapSetup)();\tab \tab \tab // called to set up lightmap 
\par 
\par \tab #ifdef NOISE_FILTER\tab \tab 
\par \tab int RandomIndex;\tab \tab \tab \tab \tab // experimental: to reduce 16bit banding\tab \tab \tab 
\par \tab int RandomTable[256];
\par \tab unsigned char RandomTableIndex=0;
\par \tab #endif
\par \} Triangle_Triangle;
\par 
\par // Global used by span routines.  Not in Triangle for simplified asm addressing.
\par 
\par int32 OneOverZ,UOverZ,VOverZ;\tab \tab \tab // Current 1/Z, U/Z, V/Z for left edge of span (and subspans)
\par int32 R,G,B;\tab \tab \tab \tab \tab \tab \tab // Current R,G,B,A for left edge of span (and subspans) 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //  R = Red Channel, G = Green Channel, B = Blue Channel
\par int32 A,OneMinusA;\tab \tab \tab \tab \tab \tab //  A = Alpha Channel   A is 0..16    OneMinusA is 16..0
\par 
\par Triangle_Triangle Triangle;
\par 
\par \tab // computes gradients for triangle.  
\par \tab // Doesn't set any global variables (Triangle), but may reference them for mode info (sorry)
\par geBoolean GENESISCC Triangle_GradientsCompute( 
\par \tab \tab \tab \tab \tab Triangle_Gradients *G,\tab \tab \tab // Gradients to compute (yeah, this is also global)
\par \tab \tab \tab \tab \tab const DRV_TLVertex *pVertices,\tab // vertex corners of triangle (U,V,R,G,B,etc are [0..1])
\par \tab \tab \tab \tab \tab float TextureWidth,\tab \tab \tab \tab // Width of texture in pixels  (scale U up to [0..Width])
\par \tab \tab \tab \tab \tab float TextureHeight);\tab \tab \tab // Height of texture in pixels (scale V up to [0..Height])
\par 
\par 
\par \tab //\tab computes gradients for an edge of the triangle.
\par \tab //  Doesn't set or reference any global variables (Triangle).
\par void GENESISCC Triangle_EdgeCompute( 
\par \tab \tab Triangle_Edge *E,\tab \tab \tab \tab \tab \tab \tab // Edge to compute
\par \tab \tab const Triangle_Gradients *Gradients,\tab \tab // Gradients to use (yeah, this is also global)
\par \tab \tab const DRV_TLVertex *pVertices,\tab \tab \tab \tab // vertex corners of triangle (U,V,R,G,B,etc are [0..1])
\par \tab \tab int Top,\tab \tab \tab \tab \tab \tab \tab \tab \tab // Index into pVertices for 'top' (smallest y) vertex 
\par \tab \tab int Bottom,\tab \tab \tab \tab \tab \tab \tab \tab \tab // Index into pVertices for 'bottom' (greatest y) vertex
\par \tab \tab int IsLeftEdge);\tab \tab \tab \tab \tab \tab \tab // Flag:  is this on the left side of the triangle
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //   only x is computed for the right side
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\page }{\i {\*\bkmkstart _Toc454070036}OpenSource/Source/Engine/Logo Subdirectory{\*\bkmkend _Toc454070036}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are used to create the Genesis3D logo and it's "electrical" effect.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070037}electric.h{\*\bkmkend _Toc454070037}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  ELECTRIC.H                                                                          */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Animated electrical bolt special effect interface                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab ELECTRIC_H
\par #define ELECTRIC_H
\par 
\par #ifdef\tab __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #include "Genesis.h"
\par 
\par #define\tab ELECTRIC_BOLT_REDDOMINANT\tab 0
\par #define\tab ELECTRIC_BOLT_GREENDOMINANT\tab 1
\par #define\tab ELECTRIC_BOLT_BLUEDOMINANT\tab 2
\par 
\par #pragma warning( disable : 4068 )
\par 
\par typedef struct\tab _Electric_BoltEffect
\par \{
\par \tab int\tab \tab \tab beInitialized;
\par \tab int\tab \tab \tab beNumPoints;
\par \tab geFloat\tab \tab beWildness;
\par 
\par \tab /* For rendering */
\par \tab geVec3d\tab \tab beStart;
\par \tab geVec3d\tab \tab beEnd;
\par 
\par \tab /* For generating the geometry */
\par \tab geVec3d\tab *\tab beCenterPoints;
\par \tab geVec3d *\tab beCurrentPoint;
\par 
\par \tab geFloat\tab \tab beBaseColors[3];
\par \tab geFloat\tab \tab beCurrentColors[3];
\par \tab geFloat\tab \tab beBaseBlue;
\par \tab int\tab \tab \tab beDecayRate;
\par \tab int\tab \tab \tab beDominantColor;
\par 
\par \tab int\tab \tab \tab beWidth;
\par 
\par \}\tab _Electric_BoltEffect;
\par 
\par _Electric_BoltEffect * _Electric_BoltEffectCreate(
\par \tab int \tab \tab \tab \tab \tab NumPolys,\tab /* Number of polys, must be power of 2 */
\par \tab int\tab \tab \tab \tab \tab \tab Width,\tab \tab /* Width in world units of the bolt */
\par \tab geFloat \tab \tab \tab \tab Wildness);\tab /* How wild the bolt is (0 to 1 inclusive) */
\par 
\par void _Electric_BoltEffectDestroy(_Electric_BoltEffect *Effect);
\par 
\par void _Electric_BoltEffectAnimate(
\par \tab _Electric_BoltEffect *\tab Effect,
\par \tab const geVec3d *\tab \tab \tab start,\tab \tab /* Starting point of the bolt */
\par \tab const geVec3d *\tab \tab \tab end);\tab \tab /* Ending point of the bolt */
\par 
\par void _Electric_BoltEffectRender(
\par \tab geWorld *\tab \tab \tab \tab World,\tab \tab /* World to render for */
\par \tab _Electric_BoltEffect *\tab Effect,\tab \tab /* Bolt to render */
\par \tab const geXForm3d *\tab \tab XForm);\tab \tab /* Transform of our point of view */
\par 
\par void _Electric_BoltEffectSetColorInfo(
\par \tab _Electric_BoltEffect *\tab Effect,
\par \tab GE_RGBA *\tab \tab \tab \tab BaseColor,\tab \tab /* Base color of the bolt (2 colors should be the same */
\par \tab int\tab \tab \tab \tab \tab \tab DominantColor);\tab /* Which color is the one to leave fixed */
\par 
\par #ifdef\tab __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\page }{\i {\*\bkmkstart _Toc454070038}OpenSource/Source/Engine/Entities Subdirectory{\*\bkmkend _Toc454070038}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are used to define entities in theGenesis3D world.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070039}Entities.h{\*\bkmkend _Toc454070039}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Entities.h                                                                          */
\par /*                                                                                      */
\par /*  Author: Eli Boling / John Pollard                                                   */
\par /*  Description: EntitySet creation / Entity Compiler                                   */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_ENTITIES_H
\par #define GE_ENTITIES_H
\par 
\par #include <Assert.h>
\par #include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "Errorlog.h"
\par #include "Vec3d.h"
\par #include "System.h"
\par #include "World.h"
\par #include "Ram.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //=====================================================================================
\par //\tab Defines / Structure defines
\par //=====================================================================================
\par // Enumerated types
\par typedef\tab enum
\par \{
\par \tab TYPE_INT,
\par \tab TYPE_FLOAT,
\par \tab TYPE_COLOR,
\par \tab TYPE_POINT,
\par \tab TYPE_STRING,
\par \tab TYPE_MODEL,
\par \tab TYPE_STRUCT,
\par \tab TYPE_PTR,
\par \} geEntity_ClassType;
\par 
\par typedef struct\tab geEntity_Class\tab geEntity_Class;
\par 
\par // Fields within a geEntity_Class
\par typedef struct geEntity_Field
\par \{
\par \tab char\tab \tab \tab \tab \tab *Name;\tab \tab \tab \tab \tab // Name of the field
\par \tab geEntity_Class\tab \tab \tab *TypeClass;\tab \tab \tab \tab // Atomic class the defines field
\par \tab int32\tab \tab \tab \tab \tab Offset;\tab \tab \tab \tab \tab // Offset in Entity's UserData
\par 
\par \tab struct geEntity_Field\tab *Next;\tab \tab \tab \tab \tab // Next Field list
\par 
\par \} geEntity_Field;
\par 
\par typedef\tab struct geEntity_Class
\par \{
\par \tab char\tab \tab \tab \tab \tab *Name;\tab \tab \tab \tab \tab // Class Name
\par \tab geEntity_ClassType\tab \tab Type;\tab \tab \tab \tab \tab // Type of class
\par \tab int32\tab \tab \tab \tab \tab TypeSize;
\par \tab geEntity_Field\tab \tab \tab *Fields;\tab \tab \tab \tab // Fields in this Class
\par \tab int32\tab \tab \tab \tab \tab FieldSize;\tab \tab \tab \tab // Size of all fields
\par 
\par \tab struct geEntity_Class\tab *Next;
\par 
\par \} geEntity_Class; 
\par 
\par typedef struct geEntity_Epair
\par \{
\par \tab struct geEntity_Epair\tab *Next;
\par \tab char\tab \tab \tab \tab \tab *Key;
\par \tab char\tab \tab \tab \tab \tab *Value;
\par \} geEntity_Epair;
\par 
\par typedef struct geEntity
\par \{
\par \tab geEntity_Class\tab \tab \tab *Class;\tab \tab \tab \tab \tab // Class data
\par 
\par \tab geEntity_Epair\tab \tab \tab *Epairs;\tab \tab \tab \tab // Parsed epair list from entity string list
\par 
\par \tab void\tab \tab \tab \tab \tab *UserData;\tab \tab \tab \tab // User structure parsed from entity
\par \} geEntity;
\par 
\par typedef struct geEntity_EntitySet
\par \{
\par \tab struct geEntity_EntitySet\tab *Next;\tab \tab \tab \tab // Next entity in this set
\par \tab struct geEntity_EntitySet\tab *Current;\tab \tab \tab // Current entity set as an iterator
\par 
\par \tab geBoolean\tab \tab \tab \tab \tab OwnsEntities;\tab \tab // GE_TRUE if 
\par 
\par \tab geEntity\tab \tab \tab \tab \tab *Entity;\tab \tab \tab // The entity
\par \tab geEntity_Class\tab \tab \tab \tab *Classes;\tab \tab \tab // List of classes for set
\par 
\par \} geEntity_EntitySet;
\par 
\par 
\par //=====================================================================================
\par //\tab Function prototypes
\par //=====================================================================================
\par geBoolean\tab Ent_WorldInit(geWorld *World);
\par void\tab \tab Ent_WorldShutdown(geWorld *World);
\par 
\par geEntity\tab \tab \tab \tab *geEntity_Create(void);
\par void\tab \tab \tab \tab \tab geEntity_Destroy(geEntity *Entity);
\par geBoolean\tab \tab \tab \tab geEntity_GetModelNumForKey(geEntity *Entity, const char *Key, int32 *ModelNum);
\par geBoolean\tab \tab \tab \tab geEntity_AddEpair(geEntity *Entity, geEntity_Epair *Epair);
\par const char\tab \tab \tab \tab *geEntity_GetStringForKey(const geEntity *Entity, const char *Key);
\par geEntity_Epair\tab \tab \tab *geEntity_EpairCreate(void);
\par void\tab \tab \tab \tab \tab geEntity_EpairDestroy(geEntity_Epair *Epair);
\par geEntity_Field\tab \tab \tab *geEntity_FieldCreate(const char *Name, int32 Offset, geEntity_Class *TypeClass);
\par void\tab \tab \tab \tab \tab geEntity_FieldDestroy(geEntity_Field *Field);
\par geEntity_Class\tab \tab \tab *geEntity_ClassCreate(geEntity_ClassType Type, const char *Name, int32 TypeSize);
\par void\tab \tab \tab \tab \tab geEntity_ClassDestroy(geEntity_Class *Class);
\par geBoolean\tab \tab \tab \tab geEntity_ClassAddField(geEntity_Class\tab *Class, geEntity_Field *Field);
\par geEntity_Field\tab \tab \tab *geEntity_ClassFindFieldByName(geEntity_Class *Class, const char *Name);
\par geEntity_EntitySet\tab \tab *geEntity_EntitySetCreate(void);
\par void\tab \tab \tab \tab \tab geEntity_EntitySetDestroy(geEntity_EntitySet *EntitySet);
\par geEntity_Class\tab \tab \tab *geEntity_EntitySetFindClassByName(geEntity_EntitySet *Set, const char *Name);
\par geEntity\tab \tab \tab \tab *geEntity_EntitySetFindEntityByName(geEntity_EntitySet *EntitySet, const char *Name);
\par GENESISAPI void\tab \tab \tab \tab \tab geEntity_GetName(const geEntity *Entity, char *Buff, int MaxLen);
\par geBoolean \tab geEntity_EntitySetAddEntity(geEntity_EntitySet *EntitySet, geEntity *Entity);
\par GENESISAPI\tab geEntity\tab *geEntity_EntitySetGetNextEntity(geEntity_EntitySet *EntitySet, geEntity *Entity);
\par geBoolean\tab \tab \tab \tab geEntity_EntitySetAddClass(geEntity_EntitySet *EntitySet, geEntity_Class *Class);
\par geEntity_EntitySet\tab \tab *LoadEntitySet(const char *EntityData, int32 EntityDataSize);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454070040}OpenSource/Source/Engine/Font Subdirectory{\*\bkmkend _Toc454070040}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are used to allow Truetype fonts in the Genesis3D world.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070041}Font.h{\*\bkmkend _Toc454070041}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  FONT.H                                                                              */
\par /*                                                                                      */
\par /*  Author: Thom Robertson                                                              */
\par /*  Description: Bitmapped font support interface                                       */
\par /*               This implementation supports any TrueType fonts provided by Windows    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_FONT_H
\par #define GE_FONT_H
\par 
\par // includes
\par #include "genesis.h"
\par #include "basetype.h"
\par #include "bitmap.h"
\par // **************************
\par // to use this API:
\par 
\par // 2.  geFont_CreateFont().
\par 
\par // 3.  (Optionally) geFont_AddCharacters().
\par // 3A. Otherwise, IF you intend to use geFont_DrawText(), call geFont_AddBitmapBuffer().
\par 
\par // 4.  Between geEngine_BeginFrame() and geEngine_EndFrame(), and after geEngine_RenderWorld(),
\par //       geFont_DrawText(). You may call geFont_DrawTextToBitmap() anytime, though.
\par 
\par // 5.  When finished, geFont_Destroy().
\par 
\par 
\par 
\par //*************************************************************************************** 
\par // these are bit flags for _DrawText(). Currently only _WORDWRAP is implemented, and without
\par // it, the function will still wrap, just not on word boundaries.
\par // Note that these will fail for non ascii fonts.
\par #define GE_FONT_WRAP                0x00000001  // wrap to fit inside the drawing rect
\par #define GE_FONT_WORDWRAP            0x00000002  // wrap on word boundaries
\par #define GE_FONT_JUST_RETURN_FIT     0x00000004  // returns number of characters that fit in drawing rectangle, WITHOUT drawing anything.
\par #define GE_FONT_JUSTIFY_RIGHT       0x00000008
\par #define GE_FONT_JUSTIFY_CENTER      0x00000010
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // opaque structure headers.
\par typedef struct geFont geFont;\tab \tab \tab // an instance of a font
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI geFont *GENESISCC geFont_Create(const geEngine *Engine, const char *fontNameString, 
\par                                                const int fontSize,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab    const int fontWeight , const geBoolean antialiased) ;
\par    // Creates a font, and returns a pointer to it.
\par    // Pass in the string name of the TrueType font (case sensitive), and the height in pixels.
\par    
\par    // ARGUMENTS:
\par    // fontNameString - char pointer to a string containing the case sensitive name of the font.
\par    // fontSize - the pixel height of the requested font.
\par 
\par    // RETURNS:
\par    // success: pointer to the newly created font.
\par    // failure: NULL.
\par 
\par    // NOTE: the new font set has NO actual characters in it at first.  You must add characters
\par    // to it with the _AddCharacters() function before you can use the font.
\par    // NOTE: all fonts start out with a grayscale palette, with the range 0 to 128.
\par 
\par //*************************************************************************************** 
\par GENESISAPI void GENESISCC geFont_CreateRef(geFont *font);
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI void GENESISCC geFont_Destroy(geFont **font);
\par    // destroys a font.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to be destroyed.
\par 
\par    // RETURNS:
\par    // nothing.
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_AddCharacters(geFont *font, 
\par                                                   unsigned char leastIndex, 
\par                                                   unsigned char mostIndex
\par                                                   );
\par    // Adds a set of characters to the font defined by the ascii range passed in 
\par    // (leastIndex and mostIndex, inclusive).
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to add characters to.
\par    // e - pointer to a valid geEngine.
\par    // leastIndex and mostIndex - the ASCII range of characters to add.
\par    // cellBuffer - an allocated hunk of ram to temproarily store the character image
\par    // bufferSize - length of the above buffer
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // This is the function that actually uses the
\par    // Win32 GetGlyphOutline() function to draw the character onto a geBitmap, which can be
\par    // blitted to the screen.
\par 
\par 
\par //*******************************************************************************
\par GENESISAPI void GENESISCC geFont_DestroyBitmapBuffer( geFont *font );
\par    // destroys any valid "scratch-pad" buffer attached to the geFont.
\par    // ARGUMENTS:
\par    // font - pointer to the geFont.
\par    //
\par    // NOTES:
\par    // you'll rarely need to call this function; it's called by geFont_Destroy() anyway.
\par    // Calling this function with a geFont that has no initialized buffer doesn't
\par    // hurt anything.
\par 
\par //*******************************************************************************
\par GENESISAPI geBoolean GENESISCC geFont_AddBitmapBuffer(
\par                                   geFont *font, const uint32 width, const uint32 height);
\par    // Adds a geBitmap to the geFont, to be used as a temporary "scratch-pad".  This is
\par    // required for using geFont_DrawText() when no characters have been added.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the geFont to add a buffer to.
\par    // width and height - the size of the buffer to create.  Make sure this size is >=
\par    // the biggest rectagle of text you'll want to write to the screen using this geFont
\par    // and DrawText().
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // You don't need to call this function IF you _AddCharacters() to this geFont.
\par    // You call this function for each geFont you need to use.  geFont's don't share buffers.
\par    // if you call this function on a geFont that already has a valid buffer, the buffer is
\par    // destroyed, and replaced by the new one.
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_DrawText(geFont *font, const char *textString, 
\par                                            const GE_Rect *Rect, const GE_RGBA *Color, 
\par                                            uint32 flags, const GE_Rect *clipRect);
\par    // This is the function you put between geEngine_BeginFrame() and _EndFrame(), the function
\par    // that draws text to the screen.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to draw with.  IF the font has NO characters in it
\par    //  (added by geFont_AddCharacters() ) then a different, more windows-intensive way is
\par    //  used to draw out the characters.
\par    // textString - pointer to the text string to output to the screen.
\par    // Rect - screen rectangle to place the text within.
\par    // Color - RGB color the text should be.
\par    // flags - a bitfield of GE_FONT_ values.
\par    // clipRect - pointer to a screen rectangle to clip the text to.  MAY BE NULL, in which
\par    // case the text is only clipped by the boundaries of the screen.
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // Assuming you've added characters to the font, characters which have NOT been added
\par    // WILL cause an assert if you try to draw them.  
\par    // Only GE_FONTSET_WORDWRAP is meaningfull right now.  Using any other flags will cause
\par    // an assert.
\par    // As stated above, you can use an entirely different way of creating a string, by
\par    // making a font with no characters in it.  This
\par    // jumps through Windows DIB hoops, and draws the text in a non-anti-aliased, but
\par    // (hopefully) more unicode-tolerant way (DrawText() ).
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_DrawTextToBitmap(geFont *font, const char *textString, 
\par                                            const GE_Rect *Rect, const GE_RGBA *Color, 
\par                                            uint32 flags, const GE_Rect *clipRect,
\par                                            geBitmap *targetBitmap);
\par    // This is the function you put between geEngine_BeginFrame() and _EndFrame(), the function
\par    // that draws text to the screen.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to draw with.  IF the font has NO characters in it
\par    //  (added by geFont_AddCharacters() ) then a different, more windows-intensive way is
\par    //  used to draw out the characters.
\par    // textString - pointer to the text string to output to the screen.
\par    // Rect - screen rectangle to place the text within.
\par    // Color - RGB color the text should be.
\par    // flags - a bitfield of GE_FONT_ values.
\par    // clipRect - pointer to a screen rectangle to clip the text to.  MAY BE NULL, in which
\par    // case the text is only clipped by the boundaries of the screen.
\par    // targetBitmap - pointer to a target bitmap to draw the text into.  MAY NOT BE NULL,
\par    // and MUST BE GE_PIXELFORMAT_8BIT.
\par 
\par    // RETURNS:
\par    // success: GE_TRUE.
\par    // failure: GE_FALSE.
\par 
\par    // NOTES:
\par    // Assuming you've added characters to the font, characters which have NOT been added
\par    // WILL cause an assert if you try to draw them.  
\par    // Only GE_FONTSET_WORDWRAP is meaningfull right now.  Using any other flags will cause
\par    // an assert.
\par    // As stated above, you can use an entirely different way of creating a string, by
\par    // making a font with no characters in it.  This
\par    // jumps through Windows DIB hoops, and draws the text in a non-anti-aliased, but
\par    // (hopefully) more unicode-tolerant way (DrawText() ).
\par    // The Color argument is will be used to modify the existing palette of the targetBitmap
\par    // passed in.  Therefore, you won't be able to _DrawTextToBitmap() a red piece of text,
\par    // then a green piece, then a blue piece.  You'll end up with three lines of blue text.
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI int32 GENESISCC geFont_GetStringPixelWidth (geFont *font, const char *textString);
\par GENESISAPI int32 GENESISCC geFont_GetStringPixelHeight(geFont *font, const char *textString);
\par    // These two functions return the pixel width and height of the string passed in.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font to draw with.
\par    // textString - pointer to the text string to output to the screen.
\par 
\par    // RETURNS:
\par    // success: a positive value in pixels.  IF the text passed in contains characters
\par    //          which haven't been added to the font yet, BUT other characters HAVE
\par    //          been added, the function asserts.
\par    // failure: -1.
\par    // NOTES:
\par    // these two functions assume no text wrapping!
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBitmap* GENESISCC geFont_GetBuffer(geFont *font);
\par    // This function returns a pointer to the drawing buffer contained by the font.
\par 
\par    // ARGUMENTS:
\par    // font - pointer to the font.
\par 
\par    // RETURNS:
\par    // a valid pointer to a geBitmap, OR NULL, signifying that the buffer wasn't initialized.
\par 
\par 
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_GetCharMap(geFont *font, uint8 character, GE_Rect *Rect, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  geBitmap **targetBitmap, int32 *fullWidth, int32 *fullHeight, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab  int32 *offsetX, int32 *offsetY);
\par 
\par //*************************************************************************************** 
\par GENESISAPI void GENESISCC geFont_EnableAntialiasing(geFont *font, const geBoolean anti);
\par //*************************************************************************************** 
\par GENESISAPI geBoolean GENESISCC geFont_IsAntialiased(geFont *font);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070042}wgClip.h{\*\bkmkend _Toc454070042}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  WGCLIP.H                                                                            */
\par /*                                                                                      */
\par /*  Author: Thom Robertson                                                              */
\par /*  Description: 2D rectangular clip testing support                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_CLIP_H
\par #define GE_CLIP_H
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define GE_CLIP_CENTER 1
\par #define GE_CLIP_CORNER 0
\par #include\tab "basetype.h"
\par #include\tab "getypes.h"
\par 
\par //***************************************************************
\par // returns true if you need to draw at all.
\par GENESISAPI geBoolean GENESISCC CalculateClipping(
\par                            GE_Rect *artRect, int32 *resultX, int32 *resultY, 
\par                            int32 x, int32 y,
\par                            const GE_Rect bounds, int32 type);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {\page 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i {\*\bkmkstart _Toc454070043}OpenSource/Source/Engine/Math Subdirectory{\*\bkmkend _Toc454070043}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are the essential math routines used to create the Genesis3D world.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070044}Box.h{\*\bkmkend _Toc454070044}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BOX.H                                                                               */
\par /*                                                                                      */
\par /*  Author: Jason Wood                                                                  */
\par /*  Description: Box is a 3D Oriented Bounding Box                                      */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par 
\par #if !defined (GE_BOX_H)
\par #define GE_BOX_H
\par 
\par #include "Vec3d.h"
\par #include "XForm3d.h"
\par 
\par typedef struct geBox
\par \{
\par \tab // all member variables are **PRIVATE**
\par \tab // the Box's scales along the Box's local frame axes
\par 
\par \tab float xScale, yScale, zScale;
\par 
\par \tab // the Box's local frame origin lies at (0, 0, 0) in local space
\par \tab //
\par \tab // these are the scaled Box axes in the global frame
\par \tab  
\par \tab geVec3d GlobalFrameAxes[3];
\par 
\par \tab // the transformation that takes the Box's axes from local space
\par \tab // to global space, and its inverse
\par 
\par \tab geXForm3d Transform, TransformInv;
\par 
\par \}geBox;
\par 
\par /////////////////////////////////////////////////////////////////////////////
\par // call this to set up a Box for the first time or when the Box's
\par // local frame axes scale(s) change
\par void geBox_Set(geBox* Box, float xScale, float yScale, float zScale, const geXForm3d* Transform);
\par 
\par 
\par // call this to set the Box's transformation matrix (does not change the
\par // scales of the Box's local frame axes)
\par void geBox_SetXForm(geBox* Box, const geXForm3d* Transform);
\par 
\par 
\par // returns GE_TRUE if the boxes overlap, GE_FALSE otherwise
\par geBoolean geBox_DetectCollisionBetween(const geBox* Box1, const geBox* Box2);
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070045}CRC32.h{\*\bkmkend _Toc454070045}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  CRC32.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description: CRC construction module                                                */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_CRC32_H
\par #define GE_CRC32_H
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par extern uint32 CRC32_Array(const uint8 * buf,uint32 buflen);
\par 
\par extern uint32 CRC32_Start(void);
\par extern uint32 CRC32_Finish(uint32 crc);
\par 
\par extern uint32 CRC32_AddByte(uint32 crc,uint8 b);
\par extern uint32 CRC32_AddWord(uint32 crc,uint16 w);
\par extern uint32 CRC32_AddLong(uint32 crc,uint32 w);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif /* GE_CRC32_H */
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070046}ExtBox.h{\*\bkmkend _Toc454070046}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  EXTBOX.H                                                                            */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Axial aligned bounding box (extent box) support                        */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_EXTBOX_H
\par #define GE_EXTBOX_H
\par 
\par #include "basetype.h"
\par #include "vec3d.h"
\par 
\par #ifdef __cplusplus
\par \tab extern "C" \{
\par #endif
\par 
\par typedef struct geExtBox
\par \{
\par \tab geVec3d Min;
\par \tab geVec3d Max;
\par \} geExtBox;
\par 
\par // Set the values in a box
\par void GENESISCC geExtBox_Set (  geExtBox *B,
\par \tab \tab \tab \tab   geFloat X1,\tab   geFloat Y1,\tab   geFloat Z1,
\par \tab \tab \tab \tab   geFloat X2,\tab   geFloat Y2,\tab   geFloat Z2 );
\par 
\par // Test a box for validity ( non NULL and max >= min )
\par geBoolean GENESISCC geExtBox_IsValid(  const geExtBox *B );
\par 
\par // Set box Min and Max to the passed point
\par void GENESISCC geExtBox_SetToPoint ( geExtBox *B, const geVec3d *Point );
\par 
\par // Extend a box to encompass the passed point
\par void GENESISCC geExtBox_ExtendToEnclose( geExtBox *B, const geVec3d *Point );
\par 
\par // Return result of box intersection.
\par // If no intersection, returns GE_FALSE and bResult is not modified.
\par // If intersection, returns GE_TRUE and fills bResult (if not NULL)
\par // with the intersected box,
\par // bResult may be one of b1 or b2.
\par // 
\par geBoolean GENESISCC geExtBox_Intersection ( const geExtBox *B1, const geExtBox *B2, geExtBox *Result\tab );
\par 
\par // computes union of b1 and b2 and returns in bResult.
\par void GENESISCC geExtBox_Union ( const geExtBox *B1, const geExtBox *B2, geExtBox *Result );
\par 
\par geBoolean GENESISCC geExtBox_ContainsPoint ( const geExtBox *B, const geVec3d  *Point );
\par 
\par void GENESISCC geExtBox_GetTranslation ( const geExtBox *B,       geVec3d *pCenter );
\par void GENESISCC geExtBox_SetTranslation (       geExtBox *B, const geVec3d *pCenter );
\par void GENESISCC geExtBox_Translate      (       geExtBox *B, geFloat DX, geFloat DY, geFloat DZ );
\par 
\par void GENESISCC geExtBox_GetScaling     ( const geExtBox *B,       geVec3d *pScale );
\par void GENESISCC geExtBox_SetScaling     (       geExtBox *B, const geVec3d *pScale );
\par void GENESISCC geExtBox_Scale          (       geExtBox *B, geFloat DX, geFloat DY,geFloat DZ );
\par 
\par //  Creates a box that encloses the entire area of a box that moves along linear path
\par void GENESISCC geExtBox_LinearSweep(\tab const geExtBox *BoxToSweep, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *StartPoint, 
\par \tab \tab \tab \tab \tab \tab const geVec3d *EndPoint, 
\par \tab \tab \tab \tab \tab \tab geExtBox *EnclosingBox );
\par 
\par // Collides a ray with box B.  The ray is directed, from Start to End.  
\par //   Only returns a ray hitting the outside of the box.  
\par //     on success, GE_TRUE is returned, and 
\par //       if T is non-NULL, T is returned as 0..1 where 0 is a collision at Start, and 1 is a collision at End
\par //       if Normal is non-NULL, Normal is the surface normal of the box where the collision occured.
\par geBoolean GENESISCC geExtBox_RayCollision( const geExtBox *B, const geVec3d *Start, const geVec3d *End, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geFloat *T, geVec3d *Normal );
\par 
\par #ifdef __cplusplus
\par \tab \}
\par #endif
\par 
\par 
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070047}QUATERN.H{\*\bkmkend _Toc454070047}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  QUATERN.H                                                                           */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description: Quaternion mathematical system interface                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_QUATERNION_H
\par #define GE_QUATERNION_H
\par 
\par /***************************************************************************
\par 
\par \tab The quatern module contains basic support for a quaternion object.
\par 
\par \tab quaternions are an extension of complex numbers that allows an
\par \tab expression for rotation that can be easily interpolated.  geQuaternion_s are also 
\par \tab more numericaly stable for repeated rotations than matrices.
\par 
\par \tab 
\par \tab A quaternion is a 4 element 'vector'  [w,x,y,z] where:
\par 
\par \tab q = w + xi + yj + zk
\par \tab i*i = -1
\par \tab j*j = -1
\par \tab k*k = -1
\par \tab i*j = -j*i = k
\par \tab j*k = -k*j = i
\par \tab k*i = -i*k = j
\par \tab q' (conjugate) = w - xi - yj - zk
\par \tab ||q|| (magnitude) = sqrt(q*q') = sqrt(w*w + x*x + y*y + z*z)
\par \tab unit quaternion ||q|| == 1; this implies  q' == qinverse 
\par \tab quaternions are associative (q1*q2)*q3 == q1*(q2*q3)
\par \tab quaternions are not commutative  q1*q2 != q2*q1
\par \tab qinverse (inverse (1/q) ) = q'/(q*q')
\par \tab 
\par \tab q can be expressed by w + xi + yj + zk or [w,x,y,z] 
\par \tab or as in this implementation (s,v) where s=w, and v=[x,y,z]
\par 
\par \tab quaternions can represent a rotation.  The rotation is an angle t, around a 
\par \tab unit vector u.   q=(s,v);  s= cos(t/2);   v= u*sin(t/2).
\par 
\par \tab quaternions can apply the rotation to a point.  let the point be p [px,py,pz],
\par \tab and let P be a quaternion(0,p).  Protated = q*P*qinverse 
\par \tab ( Protated = q*P*q' if q is a unit quaternion)
\par 
\par \tab concatenation rotations is similar to matrix concatenation.  given two rotations
\par \tab q1 and q2,  to rotate by q1, then q2:  let qc = (q2*q1), then the combined 
\par \tab rotation is given by qc*P*qcinverse (= qc*P*qc' if q is a unit quaternion)
\par 
\par \tab multiplication: 
\par \tab q1 = w1 + x1i + y1j + z1k
\par \tab q2 = w2 + x2i + y2j + z2k
\par \tab q1*q2 = q3 =
\par \tab \tab \tab (w1*w2 - x1*x2 - y1*y2 - z1*z2)     \{w3\}
\par \tab         (w1*x2 + x1*w2 + y1*z2 - z1*y2)i\tab \{x3\}
\par \tab \tab \tab (w1*y2 - x1*z2 + y1*w2 + z1*x2)j    \{y3\}
\par \tab \tab \tab (w1*z2 + x1*y2 + y1*x2 + z1*w2)k\tab \{z3\}
\par 
\par \tab also, 
\par \tab q1 = (s1,v1) = [s1,(x1,y1,z1)]
\par \tab q2 = (s2,v2) = [s2,(x2,y2,z2)]
\par \tab q1*q2 = q3\tab =\tab (s1*s2 - dot_product(v1,v2),\tab \tab \tab \{s3\}
\par \tab \tab \tab \tab \tab (s1*v2 + s2*v1 + cross_product(v1,v2))\tab \{v3\}
\par 
\par 
\par \tab interpolation - it is possible (and sometimes reasonable) to interpolate between
\par \tab two quaternions by interpolating each component.  This does not quarantee a 
\par \tab resulting unit quaternion, and will result in an animation with non-linear 
\par \tab rotational velocity.
\par 
\par \tab spherical interpolation: (slerp) treat the quaternions as vectors 
\par \tab find the angle between them (w = arccos(q1 dot q2) ).
\par \tab given 0<=t<=1,  q(t) = q1*(sin((1-t)*w)/sin(w) + q2 * sin(t*w)/sin(w).
\par \tab since q == -q, care must be taken to rotate the proper way.  
\par 
\par \tab this implementation uses the notation quaternion q = (quatS,quatV) 
\par \tab   where quatS is a scalar, and quatV is a 3 element vector.
\par 
\par ********************************************/
\par 
\par #include "basetype.h"
\par #include "xform3d.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct 
\par \{
\par \tab geFloat\tab W;
\par \tab geFloat   X,Y,Z;
\par \tab //geVec3d   QuatV;
\par \} geQuaternion;
\par 
\par 
\par #define\tab QUATERNION_PI\tab (GE_PI)
\par 
\par geBoolean GENESISCC geQuaternion_IsValid( const geQuaternion *Q );
\par \tab // return GE_TRUE if Q is non null and for has no NAN's in its components
\par 
\par void GENESISCC geQuaternion_Set( geQuaternion *Q, geFloat W, geFloat X, geFloat Y, geFloat Z);
\par \tab // set quaternion components.  Doesn't normalize
\par void GENESISCC geQuaternion_SetVec3d( geQuaternion *Q, geFloat W, const geVec3d *V);
\par \tab // set quaternion components.  Doesn't normalize
\par GENESISAPI void GENESISCC geQuaternion_SetFromAxisAngle(geQuaternion *Q, const geVec3d *Axis, geFloat Theta);
\par \tab // set a quaternion from an axis and a rotation around the axis
\par geBoolean GENESISCC geQuaternion_GetAxisAngle(const geQuaternion *Q, geVec3d *Axis, geFloat *Theta);
\par \tab // gets an axis and angle of rotation around the axis from a quaternion
\par \tab // returns GE_TRUE if there is an axis.  
\par \tab // returns GE_FALSE if there is no axis (and Axis is set to 0,0,0, and Theta is 0)
\par 
\par void GENESISCC geQuaternion_Get( const geQuaternion *Q, 
\par \tab \tab \tab \tab \tab geFloat *W, geFloat *X, geFloat *Y, geFloat *Z);
\par \tab // get quaternion components into W,X,Y,Z
\par void GENESISCC geQuaternion_GetVec3d( const geQuaternion *Q, geFloat *W, geVec3d *V);
\par \tab // get quaternion components into W and V
\par 
\par void GENESISCC geQuaternion_FromMatrix(
\par \tab const geXForm3d\tab \tab *RotationMatrix,
\par \tab       geQuaternion\tab *QDest);
\par \tab // takes upper 3 by 3 portion of matrix (rotation sub matrix) 
\par \tab // and generates a quaternion
\par 
\par GENESISAPI void GENESISCC geQuaternion_ToMatrix(
\par \tab const geQuaternion\tab *Q, 
\par \tab \tab   geXForm3d\tab \tab *RotationMatrixDest);
\par \tab // takes a unit quaternion and makes RotationMatrixDest an equivelant rotation xform.
\par \tab // (any translation in RotationMatrixDest will be list)
\par 
\par void GENESISCC geQuaternion_Slerp(
\par \tab const geQuaternion\tab \tab *Q0, 
\par \tab const geQuaternion\tab \tab *Q1, 
\par \tab geFloat\tab \tab \tab \tab \tab T,\tab \tab 
\par \tab geQuaternion\tab \tab \tab *QT);
\par \tab // spherical interpolation between q0 and q1.   0<=t<=1 
\par \tab // resulting quaternion is 'between' q0 and q1
\par \tab // with t==0 being all q0, and t==1 being all q1.
\par \tab // returns a quaternion with a positive W - always takes shortest route
\par \tab // through the positive W domain.
\par 
\par void GENESISCC geQuaternion_SlerpNotShortest(
\par \tab const geQuaternion\tab \tab *Q0, 
\par \tab const geQuaternion\tab \tab *Q1, 
\par \tab geFloat\tab \tab \tab \tab \tab T,\tab \tab 
\par \tab geQuaternion\tab \tab \tab *QT);
\par \tab // spherical interpolation between q0 and q1.   0<=t<=1 
\par \tab // resulting quaternion is 'between' q0 and q1
\par \tab // with t==0 being all q0, and t==1 being all q1.
\par 
\par 
\par void GENESISCC geQuaternion_Multiply(
\par \tab const geQuaternion\tab *Q1, 
\par \tab const geQuaternion\tab *Q2, 
\par \tab geQuaternion\tab \tab \tab *QProduct);
\par \tab // multiplies q1 * q2, and places the result in q.
\par \tab // no failure. \tab renormalization not automatic
\par 
\par void GENESISCC geQuaternion_Rotate(
\par \tab const geQuaternion\tab *Q, 
\par \tab const geVec3d       *V, 
\par \tab geVec3d\tab \tab \tab \tab *VRotated);
\par \tab // Rotates V by the quaternion Q, places the result in VRotated.
\par 
\par geBoolean GENESISCC geQuaternion_IsUnit(const geQuaternion *Q);
\par \tab // returns GE_TRUE if q is a unit quaternion.  GE_FALSE otherwise.
\par 
\par GENESISAPI geFloat GENESISCC geQuaternion_Normalize(geQuaternion *Q);
\par \tab // normalizes q to be a unit quaternion.  returns original magnitude of q
\par 
\par GENESISAPI void GENESISCC geQuaternion_Copy(const geQuaternion *QSrc, geQuaternion *QDst);
\par \tab // copies quaternion QSrc into QDst
\par 
\par void GENESISCC geQuaternion_SetNoRotation(geQuaternion *Q);
\par \tab // sets Q to be a quaternion with no rotation (like an identity matrix)
\par 
\par void GENESISCC geQuaternion_Ln(
\par \tab const geQuaternion *Q, 
\par \tab geQuaternion *LnQ);
\par \tab // ln(Q) for unit quaternion only!
\par 
\par void GENESISCC geQuaternion_Exp(
\par \tab const geQuaternion *Q,
\par \tab geQuaternion *ExpQ);
\par \tab // exp(Q) for pure quaternion only!  (zero scalar part (W))
\par 
\par void GENESISCC geQuaternion_Scale(
\par \tab const geQuaternion *Q,
\par \tab geFloat Scale,
\par \tab geQuaternion *QScaled);
\par \tab // Q = Q * Scale  (result is not generally a unit quaternion!)
\par 
\par void GENESISCC geQuaternion_Add(
\par \tab const geQuaternion *Q1,
\par \tab const geQuaternion *Q2,
\par \tab geQuaternion *QSum);
\par \tab // QSum = Q1 + Q2  (result is not generally a unit quaternion!)
\par 
\par void GENESISCC geQuaternion_Subtract(
\par \tab const geQuaternion *Q1, 
\par \tab const geQuaternion *Q2, 
\par \tab geQuaternion *QSum);
\par \tab // QSum = Q1 - Q2  (result is not generally a unit quaternion!)
\par 
\par void GENESISCC geQuaternion_Inverse(const geQuaternion *Q, geQuaternion *QInv);
\par \tab // sets QInv to the inverse of Q.  
\par 
\par geFloat GENESISCC geQuaternion_Magnitude(const geQuaternion *Q);
\par \tab // returns Magnitude of Q.  
\par 
\par geBoolean GENESISCC geQuaternion_Compare( geQuaternion *Q1, geQuaternion *Q2, geFloat Tolerance );
\par \tab // return GE_TRUE if quaternions differ elementwise by less than Tolerance.
\par 
\par 
\par #ifndef NDEBUG
\par void GENESISCC geQuaternion_SetMaximalAssertionMode( geBoolean Enable );
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par 
\par #endif // GE_QUATERNION_H
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070048}VEC3D.H{\*\bkmkend _Toc454070048}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  VEC3D.H                                                                             */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: 3D Vector interface                                                    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_VEC3D_H
\par #define GE_VEC3D_H
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct
\par \{
\par \tab geFloat X, Y, Z;
\par \} geVec3d;
\par 
\par #ifndef NDEBUG
\par GENESISAPI\tab geFloat GENESISCC   geVec3d_GetElement(geVec3d *V, int Index);
\par #else
\par \tab #define geVec3d_GetElement(Vector,Index)  (* ((&((Vector)->X)) +  (Index) ))
\par #endif
\par 
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Set(geVec3d *V, geFloat X, geFloat Y, geFloat Z);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Get(const geVec3d *V, geFloat *X, geFloat *Y, geFloat *Z);
\par 
\par GENESISAPI geFloat GENESISCC\tab geVec3d_DotProduct(const geVec3d *V1, const geVec3d *V2);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_CrossProduct(const geVec3d *V1, const geVec3d *V2, geVec3d *VResult);
\par GENESISAPI geBoolean GENESISCC\tab geVec3d_Compare(const geVec3d *V1, const geVec3d *V2,geFloat tolarance);
\par GENESISAPI geFloat GENESISCC\tab geVec3d_Normalize(geVec3d *V1);
\par GENESISAPI geBoolean GENESISCC \tab geVec3d_IsNormalized(const geVec3d *V);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Scale(const geVec3d *VSrc, geFloat Scale, geVec3d *VDst);
\par GENESISAPI geFloat GENESISCC\tab geVec3d_Length(const geVec3d *V1); 
\par GENESISAPI geFloat GENESISCC\tab geVec3d_LengthSquared(const geVec3d *V1);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Subtract(const geVec3d *V1, const geVec3d *V2, geVec3d *V1MinusV2);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Add(const geVec3d *V1, const geVec3d *V2,  geVec3d *VSum);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Copy(const geVec3d *Vsrc, geVec3d *Vdst);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Clear(geVec3d *V);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_Inverse(geVec3d *V);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_MA(geVec3d *V1, geFloat Scale, const geVec3d *V2, geVec3d *V1PlusV2Scaled);
\par GENESISAPI void GENESISCC\tab \tab geVec3d_AddScaled(const geVec3d *V1, const geVec3d *V2, geFloat Scale, geVec3d *V1PlusV2Scaled);
\par 
\par GENESISAPI geFloat GENESISCC\tab \tab geVec3d_DistanceBetween(const geVec3d *V1, const geVec3d *V2);\tab // returns length of V1-V2\tab 
\par 
\par GENESISAPI geBoolean GENESISCC geVec3d_IsValid(const geVec3d *V);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070049}XFORM3D.h{\*\bkmkend _Toc454070049}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  XFORM3D.H                                                                           */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: 3D transform interface                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_XFORM_H
\par #define GE_XFORM_H
\par 
\par 
\par #include "Vec3d.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct
\par \{\tab 
\par \tab geFloat AX,AY,AZ;\tab // e[0][0],e[0][1],e[0][2]
\par \tab geFloat BX,BY,BZ;\tab // e[1][0],e[1][1],e[1][2]
\par \tab geFloat CX,CY,CZ;\tab // e[2][0],e[2][1],e[2][2]
\par \tab geVec3d Translation;  // e[0][3],e[1][3],e[2][3]
\par \tab //\tab   0,0,0,1\tab \tab // e[3][0],e[3][1],e[3][2]
\par \} geXForm3d;
\par 
\par /*   this is essentially a 'standard' 4x4 transform matrix,
\par      with the bottom row always 0,0,0,1
\par 
\par \tab | AX, AY, AZ, Translation.X |  
\par \tab | BX, BY, BZ, Translation.Y |  
\par \tab | CX, CY, CZ, Translation.Z |  
\par \tab |  0,  0,  0,      1        |  
\par */
\par 
\par //  all geXForm3d_Set* functions return a right-handed transform.
\par 
\par #define GEXFORM3D_MINIMUM_SCALE (0.00001f)
\par 
\par 
\par GENESISAPI void GENESISCC geXForm3d_Copy(
\par \tab const geXForm3d *Src, 
\par \tab geXForm3d *Dst);
\par \tab // copies Src to Dst.  
\par 
\par GENESISAPI geBoolean GENESISCC geXForm3d_IsValid(const geXForm3d *M);
\par \tab // returns GE_TRUE if M is 'valid'  
\par \tab // 'valid' means that M is non NULL, and there are no NAN's in the matrix.
\par 
\par GENESISAPI geBoolean GENESISCC geXForm3d_IsOrthonormal(const geXForm3d *M);
\par \tab // returns GE_TRUE if M is orthonormal 
\par \tab // (if the rows and columns are all normalized (transform has no scaling or shearing)
\par \tab // and is orthogonal (row1 cross row2 = row3 & col1 cross col2 = col3)
\par \tab // * does not check for right-handed convention *
\par 
\par GENESISAPI geBoolean GENESISCC geXForm3d_IsOrthogonal(const geXForm3d *M);
\par \tab // returns GE_TRUE if M is orthogonal
\par \tab // (row1 cross row2 = row3 & col1 cross col2 = col3)
\par \tab // * does not check for right-handed convention *
\par 
\par GENESISAPI void GENESISCC geXForm3d_Orthonormalize(geXForm3d *M);
\par \tab // essentially removes scaling (or other distortions) from 
\par \tab // an orthogonal (or nearly orthogonal) matrix 
\par \tab // returns a right-handed matrix
\par 
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetIdentity(geXForm3d *M);\tab \tab \tab 
\par \tab // sets M to an identity matrix (clears it)
\par \tab 
\par GENESISAPI void GENESISCC geXForm3d_SetXRotation(geXForm3d *M,geFloat RadianAngle);
\par \tab // sets up a transform that rotates RadianAngle about X axis
\par \tab // all existing contents of M are replaced
\par \tab 
\par GENESISAPI void GENESISCC geXForm3d_SetYRotation(geXForm3d *M,geFloat RadianAngle);
\par \tab // sets up a transform that rotates RadianAngle about Y axis
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetZRotation(geXForm3d *M,geFloat RadianAngle);
\par \tab // sets up a transform that rotates RadianAngle about Z axis
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetTranslation(geXForm3d *M,geFloat x, geFloat y, geFloat z);
\par \tab // sets up a transform that translates x,y,z
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetScaling(geXForm3d *M,geFloat x, geFloat y, geFloat z);
\par \tab // sets up a transform that scales by x,y,z
\par \tab // all existing contents of M are replaced
\par 
\par GENESISAPI void GENESISCC geXForm3d_RotateX(geXForm3d *M,geFloat RadianAngle);  
\par \tab // Rotates M by RadianAngle about X axis   
\par \tab // applies the rotation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_RotateY(geXForm3d *M,geFloat RadianAngle);
\par \tab // Rotates M by RadianAngle about Y axis
\par \tab // applies the rotation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_RotateZ(geXForm3d *M,geFloat RadianAngle);
\par \tab // Rotates M by RadianAngle about Z axis
\par \tab // applies the rotation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_Translate(geXForm3d *M,geFloat x, geFloat y, geFloat z);\tab 
\par \tab // Translates M by x,y,z
\par \tab // applies the translation to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_Scale(geXForm3d *M,geFloat x, geFloat y, geFloat z);\tab \tab 
\par \tab // Scales M by x,y,z
\par \tab // applies the scale to the existing contents of M
\par 
\par GENESISAPI void GENESISCC geXForm3d_Multiply(
\par \tab const geXForm3d *M1, 
\par \tab const geXForm3d *M2, 
\par \tab geXForm3d *MProduct);
\par \tab // MProduct = matrix multiply of M1*M2
\par \tab // Concatenates the transformation in the M2 matrix onto the transformation in M1
\par 
\par GENESISAPI void GENESISCC geXForm3d_Transform(
\par \tab const geXForm3d *M,
\par \tab const geVec3d *V, 
\par \tab geVec3d *Result);
\par \tab // Result is Matrix M * Vector V:  V Tranformed by M
\par 
\par GENESISAPI void GENESISCC geXForm3d_TransformArray(\tab const geXForm3d *XForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Source, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Dest, 
\par \tab \tab \tab \tab \tab \tab \tab \tab int32 Count);
\par 
\par GENESISAPI void GENESISCC geXForm3d_Rotate(
\par \tab const geXForm3d *M,
\par \tab const geVec3d *V, 
\par \tab geVec3d *Result);
\par \tab // Result is Matrix M * Vector V:  V Rotated by M (no translation)
\par 
\par 
\par /***
\par *
\par \tab "Left,Up,In" are just the basis vectors in the new coordinate space.
\par \tab You can get them by multiplying the unit bases into the transforms.
\par *
\par ******/
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetLeft(const geXForm3d *M, geVec3d *Left);
\par \tab // Gets a vector that is 'left' in the frame of reference of M (facing -Z)
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetUp(const geXForm3d *M,    geVec3d *Up);
\par \tab // Gets a vector that is 'up' in the frame of reference of M (facing -Z)
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetIn(const geXForm3d *M,  geVec3d *In);
\par \tab // Gets a vector that is 'in' in the frame of reference of M (facing -Z)
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetTranspose(const geXForm3d *M, geXForm3d *MTranspose);
\par \tab // Gets the Transpose transform of M   (M^T) 
\par \tab // Transpose of a matrix is the switch of the rows and columns
\par \tab // The transpose is usefull because it is rapidly computed and is equal to the inverse 
\par \tab // transform for orthonormal transforms    [inverse is (M')  where M*M' = Identity ]
\par 
\par GENESISAPI void GENESISCC geXForm3d_TransposeTransform(
\par \tab const geXForm3d *M, 
\par \tab const geVec3d *V, 
\par \tab geVec3d *Result);
\par \tab // applies the transpose transform of M to V.  Result = (M^T) * V
\par 
\par /*****
\par *
\par \tab the Euler angles are subsequent rotations :
\par \tab \tab by Angles->Z around the Z axis
\par \tab \tab then by Angles->Y around the Y axis, in the newly rotate coordinates
\par \tab \tab then by Angles->X around the X axis
\par *
\par ******/\tab 
\par 
\par GENESISAPI void GENESISCC geXForm3d_GetEulerAngles(const geXForm3d *M, geVec3d *Angles);
\par \tab // Finds Euler angles from M and puts them into Angles
\par \tab 
\par GENESISAPI void GENESISCC geXForm3d_SetEulerAngles(geXForm3d *M, const geVec3d *Angles);
\par \tab // Applies Euler angles to build M
\par 
\par GENESISAPI void GENESISCC geXForm3d_SetFromLeftUpIn(
\par \tab geXForm3d *M,
\par \tab const geVec3d *Left, 
\par \tab const geVec3d *Up, 
\par \tab const geVec3d *In);
\par \tab // Builds an geXForm3d from orthonormal Left, Up and In vectors
\par 
\par GENESISAPI void GENESISCC geXForm3d_Mirror(
\par \tab const\tab \tab geXForm3d *Source, 
\par \tab const\tab \tab geVec3d *PlaneNormal, 
\par \tab float\tab \tab PlaneDist, 
\par \tab geXForm3d\tab *Dest);
\par \tab // Mirrors a XForm3d about a plane
\par 
\par 
\par //--------------
\par 
\par #ifndef NDEBUG
\par \tab GENESISAPI \tab void GENESISCC geXForm3d_SetMaximalAssertionMode( geBoolean Enable );
\par #else
\par \tab #define geXForm3d_SetMaximalAssertionMode(Enable)
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\i \page {\*\bkmkstart _Toc454070050}OpenSource/Source/Engine/Support Subdirectory{\*\bkmkend _Toc454070050}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are used to allow Truetype fonts in the Genesis3D world.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070051}BASETYPE.H{\*\bkmkend _Toc454070051}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  BASETYPE.H                                                                          */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Basic type definitions and calling convention defines                  */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_BASETYPE_H
\par #define GE_BASETYPE_H
\par  
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par /******** The Genesis Calling Conventions ***********/ 
\par 
\par #define\tab GENESISCC\tab _fastcall
\par 
\par #if\tab defined(BUILDGENESIS) && defined(GENESISDLLVERSION)
\par   #define GENESISAPI\tab _declspec(dllexport)
\par #else
\par   #if\tab defined(GENESISDLLVERSION)
\par     #define GENESISAPI\tab _declspec(dllimport)
\par   #else
\par     #define GENESISAPI
\par   #endif
\par #endif
\par 
\par /******** The Basic Types ****************************/
\par 
\par typedef signed int geBoolean;
\par #define GE_FALSE\tab (0)
\par #define GE_TRUE\tab \tab (1)
\par 
\par typedef float geFloat;
\par 
\par #ifndef NULL
\par #define NULL\tab ((void *)0)
\par #endif
\par 
\par typedef signed long     int32;
\par typedef signed short    int16;
\par typedef signed char     int8 ;
\par typedef unsigned long  uint32;
\par typedef unsigned short uint16;
\par typedef unsigned char  uint8 ;
\par 
\par /******** Macros on Genesis basic types *************/
\par 
\par #define GE_ABS(x)\tab \tab \tab \tab ( (x) < 0 ? (-(x)) : (x) )
\par #define GE_CLAMP(x,lo,hi)\tab \tab ( (x) < (lo) ? (lo) : ( (x) > (hi) ? (hi) : (x) ) )
\par #define GE_CLAMP8(x)\tab \tab \tab GE_CLAMP(x,0,255)
\par #define GE_CLAMP16(x)\tab \tab \tab GE_CLAMP(x,0,65536)
\par #define GE_BOOLSAME(x,y)\tab \tab ( ( (x) && (y) ) || ( !(x) && !(y) ) )
\par 
\par #define GE_EPSILON\tab \tab \tab \tab ((geFloat)0.000797f)
\par #define GE_FLOATS_EQUAL(x,y)\tab ( GE_ABS((x) - (y)) < GE_EPSILON )
\par #define GE_FLOAT_ISZERO(x)\tab \tab GE_FLOATS_EQUAL(x,0.0f)
\par 
\par #define\tab GE_PI\tab \tab \tab \tab \tab ((geFloat)3.14159265358979323846f)
\par 
\par /****************************************************/
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par  
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070052}Errorlog.h{\*\bkmkend _Toc454070052}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  ERRORLOG.H                                                                          */
\par /*                                                                                      */
\par /*  Author: Mike Sandige                                                                */
\par /*  Description: Generic error logging system interface                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_ERRORLOG_H
\par #define GE_ERRORLOG_H
\par 
\par #include "basetype.h"
\par 
\par #ifndef NDEBUG 
\par \tab #define ERRORLOG_FULL_REPORTING
\par #endif
\par 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef enum
\par \{
\par \tab GE_ERR_INVALID_DRIVER_HANDLE,\tab \tab \tab // Driver not supported
\par \tab GE_ERR_INVALID_MODE_HANDLE,\tab \tab \tab \tab // Mode not supported
\par \tab GE_ERR_DRIVER_INIT_FAILED,\tab \tab \tab \tab // Could not init Driver
\par \tab GE_ERR_DRIVER_ALLREADY_INITIALIZED,\tab \tab // Driver init failure
\par \tab GE_ERR_DRIVER_NOT_FOUND,\tab \tab \tab \tab // File open error for driver
\par \tab GE_ERR_DRIVER_NOT_INITIALIZED,\tab \tab \tab // Driver shutdown failure
\par \tab GE_ERR_INVALID_DRIVER,\tab \tab \tab \tab \tab // Wrong driver version, or bad driver
\par \tab GE_ERR_DRIVER_BEGIN_SCENE_FAILED,
\par \tab GE_ERR_DRIVER_END_SCENE_FAILED,
\par \tab GE_ERR_CREATE_SOUND_MANAGER_FAILED,
\par \tab GE_ERR_CREATE_SOUND_BUFFER_FAILED,
\par \tab GE_ERR_DS_ERROR,
\par \tab GE_ERR_INVALID_WAV,
\par \tab GE_ERR_NO_PERF_FREQ,
\par \tab GE_ERR_FILE_OPEN_ERROR,
\par \tab GE_ERR_FILE_READ_ERROR,
\par \tab GE_ERR_FILE_WRITE_ERROR,
\par \tab GE_ERR_PALETTE_LOAD_FAILURE,
\par \tab GE_ERR_GBSP_LOAD_FAILURE,
\par \tab GE_ERR_INVALID_PARMS,
\par \tab GE_ERR_INVALID_CAMERA,
\par \tab GE_ERR_RENDER_WORLD_FAILED,
\par \tab GE_ERR_BEGIN_WORLD_FAILED,
\par \tab GE_ERR_END_WORLD_FAILED,
\par \tab GE_ERR_BEGIN_MODELS_FAILED,
\par \tab GE_ERR_END_MODELS_FAILED,
\par \tab GE_ERR_BEGIN_MESHES_FAILED,
\par \tab GE_ERR_END_MESHES_FAILED,
\par \tab GE_ERR_RENDER_MESH_FAILED,
\par \tab GE_ERR_BAD_LMAP_EXTENTS,
\par \tab GE_ERR_INVALID_TEXTURE,
\par \tab GE_ERR_REGISTER_WORLD_TEXTURE_FAILED,
\par \tab GE_ERR_REGISTER_LIGHTMAPS_FAILED,
\par \tab GE_ERR_REGISTER_WORLD_PALETTE_FAILED,
\par \tab GE_ERR_REGISTER_MISC_TEXTURE_FAILED,
\par \tab GE_ERR_INVALID_MESH_FILE,
\par \tab GE_ERR_LOAD_BITMAP_FAILED,
\par \tab GE_ERR_MAX_MESH_DEFS,
\par \tab GE_ERR_MESH_MAX_NODES,
\par \tab GE_ERR_INVALID_MESH_MATERIAL,
\par \tab GE_ERR_MAX_MESH_MATERIALS,
\par \tab GE_ERR_MAX_MESH_CLIP_PLANES,
\par \tab GE_ERR_RENDERQ_OVERFLOW,
\par \tab GE_ERR_INVALID_LTYPE,
\par \tab GE_ERR_MAX_ENTITIES,
\par \tab GE_ERR_GET_ENTITY_DATA_ERROR,
\par \tab GE_ERR_INVALID_ENTITY_FIELD_TYPE,
\par \tab GE_ERR_MODEL_NOT_FOUND,
\par \tab GE_ERR_MODEL_NOT_IN_ENTITY,
\par \tab GE_ERR_MAX_TEXTURES,
\par \tab GE_ERR_MAX_DECALS,
\par \tab GE_ERR_MAX_VERTS,
\par \tab GE_ERR_OUT_OF_MEMORY,
\par \tab GE_ERR_INVALID_BSP_TAG,
\par \tab GE_ERR_INVALID_BSP_VERSION,
\par \tab GE_ERR_ERROR_READING_BSP_CHUNK,
\par \tab ERR_PATH_CREATE_ENOMEM,\tab \tab \tab \tab // failure to create a path (memory allocation failed)
\par \tab ERR_PATH_INSERT_R_KEYFRAME,\tab \tab \tab // failure to insert a rotation keyframe
\par \tab ERR_PATH_INSERT_T_KEYFRAME,\tab \tab \tab // failure to insert a translation keyframe
\par \tab ERR_PATH_DELETE_R_KEYFRAME,\tab \tab \tab // failure to delete a rotation keyframe
\par \tab ERR_PATH_DELETE_T_KEYFRAME,\tab \tab \tab // failure to delete a translation keyframe
\par \tab ERR_PATH_FILE_READ,\tab \tab \tab \tab \tab // failure to read from file
\par \tab ERR_PATH_FILE_VERSION,\tab \tab \tab \tab // tried to create path from file with wrong/bad version
\par \tab ERR_PATH_FILE_PARSE,\tab \tab \tab \tab // failure to parse file (unexpected format problem)
\par \tab ERR_PATH_FILE_WRITE,\tab \tab \tab \tab // failure to read from file
\par \tab ERR_MOTION_CREATE_ENOMEM,\tab \tab \tab // failure to create (memory allocation failed)
\par \tab ERR_MOTION_ADDPATH_ENOMEM,\tab \tab \tab // failure to add path into motion (memory allocation failed)
\par \tab ERR_MOTION_ADDPATH_PATH,\tab \tab \tab // failure to add path into motion (path creation failed)
\par \tab ERR_MOTION_ADDPATH_BAD_NAME,\tab \tab // failure to add path into motion due to name conflict
\par \tab ERR_MOTION_INSERT_EVENT,\tab \tab \tab // failure to insert event (memory allocation failed or duplicate key)
\par \tab ERR_MOTION_DELETE_EVENT,\tab \tab \tab // failure to insert event
\par \tab ERR_MOTION_FILE_READ,\tab \tab \tab \tab // failure to read from file
\par \tab ERR_MOTION_FILE_WRITE,\tab \tab \tab \tab // failure to write to file
\par \tab ERR_MOTION_FILE_PARSE,\tab \tab \tab \tab // failure to parse file (unexpected format problem)
\par \tab ERR_TKARRAY_INSERT_IDENTICAL,\tab \tab // failure to insert into list because of existing identical key
\par \tab ERR_TKARRAY_INSERT_ENOMEM,\tab \tab \tab // failure to insert into list because of memory allocation failure
\par \tab ERR_TKARRAY_DELETE_NOT_FOUND,\tab \tab // failure to delete from list because key was not found
\par \tab ERR_TKARRAY_CREATE,\tab \tab \tab \tab \tab // failure to create TKArray object (out of memroy)
\par \tab ERR_TKARRAY_TOO_BIG,\tab \tab \tab \tab // TKArray object can't be added to - it's list is as big as it can get
\par \tab ERR_VKARRAY_INSERT,\tab \tab \tab \tab \tab // insertion to VKArray failed
\par \tab ERR_QKARRAY_INSERT,\tab \tab \tab \tab \tab // insertion to QKArray failed
\par \tab ERR_POSE_CREATE_ENOMEM,\tab \tab \tab \tab // Motion object failed to create (memory allocation failed)
\par \tab ERR_POSE_ADDJOINT_ENOMEM,\tab \tab \tab // Motion_AddJoint failed to allocate/reallocate memory for new joint
\par \tab ERR_TKEVENTS_CREATE_ENOMEM,\tab \tab \tab // failure to create TKEvents object (memory allocation failed)
\par \tab ERR_TKEVENTS_DELETE_NOT_FOUND,\tab \tab // failure to delete from list because key was not found
\par \tab ERR_TKEVENTS_INSERT_ENOMEM,\tab \tab \tab // failure to insert into list because of memory allocation failure
\par \tab ERR_TKEVENTS_INSERT,\tab \tab \tab \tab // failure to insert into list 
\par \tab ERR_TKEVENTS_FILE_READ,\tab \tab \tab \tab // failure to read from data file
\par \tab ERR_TKEVENTS_FILE_WRITE,\tab \tab \tab // failure to write to data file
\par \tab ERR_TKEVENTS_FILE_VERSION,\tab \tab \tab // failure to read tkevents object: file has wrong version
\par \tab ERR_TKEVENTS_FILE_PARSE,\tab \tab \tab // failure to parse file (unexpected format problem)
\par \tab ERR_STRBLOCK_ENOMEM,\tab \tab \tab \tab // failure to create, insert, or append (memory allocation failed)
\par \tab ERR_STRBLOCK_STRLEN,\tab \tab \tab \tab // string too long to insert or append
\par \tab ERR_STRBLOCK_FILE_READ,\tab \tab \tab \tab // failure to read from data file
\par \tab ERR_STRBLOCK_FILE_WRITE,\tab \tab \tab // failure to write to data file
\par \tab ERR_STRBLOCK_FILE_PARSE,\tab \tab \tab // failure to parse reading from input file (unexpected format problem)
\par \tab ERR_BODY_ENOMEM,\tab \tab \tab \tab \tab // failure to create, or add (memory allocation failed)
\par \tab ERR_BODY_FILE_PARSE,\tab \tab \tab \tab // failure to parse reading from input file (unexpected format problem)
\par \tab ERR_BODY_FILE_READ,\tab \tab \tab \tab \tab // failure to read from data file
\par \tab ERR_BODY_FILE_WRITE,\tab \tab \tab \tab // failure to write to data file
\par \tab ERR_BODY_BONEXFARRAY,\tab \tab \tab \tab // XFArray object failed to return array, or array size doesn't match bone count
\par \tab ERR_XFARRAY_ENOMEM,\tab \tab \tab \tab \tab // failure to create. (memory allocation failure)
\par \tab ERR_PUPPET_ENOMEM,\tab \tab \tab \tab \tab // failure to create. (memory allocation failure)
\par \tab ERR_PUPPET_RENDER,\tab \tab \tab \tab \tab // failure to render. 
\par \tab ERR_PUPPET_NO_MATERIALS,\tab \tab \tab // failure to create: associated body has no materials.
\par \tab ERR_PUPPET_LOAD_TEXTURE,\tab \tab \tab // failure to load texture 
\par \tab ERR_TEXPOOL_ENOMEM,\tab \tab \tab \tab \tab // failure to create or add to. (memory allocation/reallocation failure)
\par \tab ERR_TEXPOOL_TOO_BIG,\tab \tab \tab \tab // failure to add to pool, pool is too large.
\par \tab ERR_TEXPOOL_LOAD_TEXTURE,\tab \tab \tab // failure to load texture into pool
\par \tab ERR_TEXPOOL_TEXTURE_NOT_FREE,\tab \tab // texture pool destroyed without first freeing all it's shared textures
\par \tab ERR_ACTOR_ENOMEM,\tab \tab \tab \tab \tab // failure to create. (memory allocation failure)
\par \tab ERR_ACTOR_RENDER_PREP,\tab \tab \tab \tab // failure to prepare actor for rendering (bad Body or allocation failure)
\par \tab ERR_ACTOR_RENDER_FAILED,\tab \tab \tab // failure to render.  failure to get geometry from Body 
\par \tab ERR_ACTOR_TOO_MANY_MOTIONS,\tab \tab \tab // failure to add motion. too many.
\par \tab ERR_ACTOR_FILE_READ,\tab \tab \tab \tab // failure to read from data file.
\par \tab ERR_ACTOR_FILE_PARSE,\tab \tab \tab \tab // failure to parse reading from input file(unexpected format problem)
\par \tab ERR_ACTOR_FILE_WRITE,\tab \tab \tab \tab // failure to write to data file.
\par \tab GE_ERR_INVALID_MODEL_MOTION_FILE,\tab // Bad model motion file (for bsp files)
\par \tab GE_ERR_BAD_BSP_FILE_CHUNK_SIZE,\tab \tab // Chunk size does not match structure size of kind
\par \} geErrorLog_ErrorIDEnumType;
\par 
\par 
\par typedef enum 
\par \{
\par \tab GE_ERR_MEMORY_RESOURCE,
\par \tab GE_ERR_DISPLAY_RESOURCE,
\par \tab GE_ERR_SOUND_RESOURCE,
\par \tab GE_ERR_SYSTEM_RESOURCE,
\par \tab GE_ERR_INTERNAL_RESOURCE,
\par \tab 
\par \tab GE_ERR_FILEIO_OPEN,
\par \tab GE_ERR_FILEIO_CLOSE,
\par \tab GE_ERR_FILEIO_READ,
\par \tab GE_ERR_FILEIO_WRITE,
\par \tab GE_ERR_FILEIO_FORMAT,
\par \tab GE_ERR_FILEIO_VERSION,
\par \tab 
\par \tab GE_ERR_LIST_FULL,
\par \tab GE_ERR_DATA_FORMAT,
\par \tab GE_ERR_SEARCH_FAILURE,
\par \} geErrorLog_ErrorClassType;
\par 
\par GENESISAPI void geErrorLog_Clear(void);
\par \tab // clears error history
\par 
\par GENESISAPI int  geErrorLog_Count(void);
\par \tab // reports size of current error log
\par 
\par GENESISAPI void geErrorLog_AddExplicit(geErrorLog_ErrorClassType,
\par \tab const char *ErrorIDString,
\par \tab const char *ErrorFileString,
\par \tab int LineNumber,
\par \tab const char *UserString,
\par \tab const char *Context);
\par \tab // not intended to be used directly: use ErrorLog_Add or ErrorLog_AddString
\par 
\par 
\par #ifdef ERRORLOG_FULL_REPORTING
\par \tab // 'Debug' version includes a textual error id, and the user string
\par 
\par \tab #define geErrorLog_Add(Error, Context) geErrorLog_AddExplicit(Error, #Error, __FILE__, __LINE__,"", Context)
\par \tab \tab // logs an error.  
\par 
\par \tab #define geErrorLog_AddString(Error,String, Context) geErrorLog_AddExplicit(Error, #Error, __FILE__,__LINE__, String, Context)
\par \tab \tab // logs an error with additional identifing string.  
\par \tab 
\par GENESISAPI\tab geBoolean geErrorLog_AppendStringToLastError(const char *String);// use geErrorLog_AppendString
\par 
\par \tab #define geErrorLog_AppendString(XXX) geErrorLog_AppendStringToLastError(XXX)
\par \tab \tab // adds text to the previous logged error
\par 
\par #else
\par \tab // 'Release' version does not include the textual error id, or the user string
\par 
\par \tab #define geErrorLog_Add(Error, Context) geErrorLog_AddExplicit(Error, "", __FILE__, __LINE__,"", Context)
\par \tab \tab // logs an error.  
\par 
\par \tab #define geErrorLog_AddString(Error,String, Context) geErrorLog_AddExplicit(Error, "", __FILE__,__LINE__, "", Context)
\par \tab \tab // logs an error with additional identifing string.  
\par \tab 
\par \tab #define geErrorLog_AppendString(XXX)
\par \tab \tab // adds text to the previous logged error
\par 
\par #endif
\par 
\par GENESISAPI geBoolean geErrorLog_Report(int History, geErrorLog_ErrorClassType *Error, const char **UserString);
\par \tab // reports from the error log.  
\par \tab // history is 0 for most recent,  1.. for second most recent etc.
\par \tab // returns GE_TRUE if report succeeded.  GE_FALSE if it failed.
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070053}geAssert.h{\*\bkmkend _Toc454070053}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  GEASSERT.H                                                                          */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Replacement for assert interface                                       */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_ASSERT_H
\par #define GE_ASSERT_H
\par 
\par #include <assert.h>
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par // You should use geAssert() anywhere in the Genesis engine that
\par // you would normally use assert().
\par //
\par // If you wish to be called back when asserts happen, use the
\par // routine geAssertSetCallback().  It returns the address of
\par // the callback routine that you're replacing.
\par 
\par 
\par #ifdef NDEBUG
\par 
\par \tab #define geAssert(exp)
\par 
\par #else
\par 
\par \tab extern void geAssertEntryPoint( void *, void *, unsigned );
\par 
\par \tab #define geAssert(exp) (void)( (exp) || (geAssertEntryPoint(#exp, __FILE__, __LINE__), 0) )
\par 
\par #endif
\par 
\par /************************************************************/
\par 
\par typedef void geAssertCallbackFn( void *exp, void *file, unsigned line );
\par 
\par geAssertCallbackFn *geAssertSetCallback( geAssertCallbackFn *newAssertCallback );
\par 
\par typedef void (*geAssert_CriticalShutdownCallback) (void *Context);
\par 
\par extern void geAssert_SetCriticalShutdownCallback( geAssert_CriticalShutdownCallback CB , void *Context);
\par 
\par /************************************************************/
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070054}LOG.H{\*\bkmkend _Toc454070054}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  LOG.H                                                                               */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Debugging logger interface                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_LOG_H
\par #define GE_LOG_H
\par 
\par #include <stdarg.h>
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #ifdef\tab _LOG
\par 
\par void Log_Puts(\tab const char * string);
\par void Log_Printf(const char * string, ...);
\par 
\par #else\tab // _LOG
\par 
\par static _inline void Log_Printf(const char * str, ...) \{ \}
\par #define Log_Puts(string)
\par 
\par #endif\tab // _LOG
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif // LOG_H
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070055}MEMPOOL.H{\*\bkmkend _Toc454070055}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  MEMPOOL.H                                                                           */
\par /*                                                                                      */
\par /*  Author: Charles Bloom                                                               */
\par /*  Description: Fixed size block memory allocator interface                            */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef MEMPOOL_H
\par #define MEMPOOL_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef struct MemPool MemPool;
\par 
\par extern MemPool * MemPool_Create(int HunkLength,int NumHunks,int AutoExtendNumItems);
\par extern int MemPool_Extend(MemPool * Pool,int NumHunks);
\par extern void MemPool_Destroy(MemPool ** pPool);
\par extern void MemPool_Reset(MemPool * Pool);
\par extern void * MemPool_GetHunk(MemPool * Pool);
\par extern int MemPool_FreeHunk(MemPool * Pool,void *Hunk);
\par 
\par  /* NOTEZ: MemPool_Get clears the memory block to zeros*/
\par 
\par #ifdef _DEBUG
\par extern int MemPool_IsValid(MemPool * Pool);
\par #endif
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif /*CRB_MEMPOOL_H*/
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070056}RAM.H{\*\bkmkend _Toc454070056}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  RAM.H                                                                               */
\par /*                                                                                      */
\par /*  Author:                                                                             */
\par /*  Description: Replacement for malloc, realloc and free                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_RAM_H
\par #define GE_RAM_H
\par 
\par #include "basetype.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par typedef int (* geRam_CriticalCallbackFunction)(void);
\par 
\par /*
\par   Set the critical callback function.  ram_allocate will call the critical
\par   callback function if it's unable to allocate memory.
\par */
\par GENESISAPI geRam_CriticalCallbackFunction geRam_SetCriticalCallback
\par     (
\par       geRam_CriticalCallbackFunction callback
\par     );
\par 
\par /*
\par   increments or decrements a counter .  if the counter is >0
\par   the critical callback function (if set) is called for a failed memory allocation.
\par   add is added to the current counter value.  the new counter value is returned.
\par */
\par GENESISAPI int geRam_EnableCriticalCallback(int add);
\par 
\par 
\par /*
\par   Allocate memory of the given size.  In debug mode, the memory is filled
\par   with 0xA5, and we keep track of the amount of memory allocated.  Also, in debug
\par   mode, we track where the memory was allocated and can optionally provide a
\par   report of allocated blocks.  See geRam_ReportAllocations.
\par */
\par #ifndef NDEBUG
\par 
\par #define geRam_Allocate(size) _geRam_DebugAllocate(size, __FILE__, __LINE__)
\par 
\par // Do not call _geRam_DebugAllocate directly.
\par GENESISAPI void* _geRam_DebugAllocate(uint32 size, const char* pFile, int line);
\par 
\par #else
\par 
\par GENESISAPI void *geRam_Allocate(uint32 size);
\par 
\par #endif
\par 
\par /*
\par   Free an allocated memory block.
\par */
\par GENESISAPI void geRam_Free_(void *ptr);
\par 
\par \tab \tab extern void *StupidUnusedPointer;    // never used, except to mask the
\par \tab \tab // possible warning you get if you use the geRam_Free macro below, without
\par \tab \tab // using the xxx pointer again in the same block.  This is ugly.
\par  
\par #define geRam_Free(xxx) geRam_Free_(xxx) ,(xxx)=NULL, StupidUnusedPointer=(xxx)
\par 
\par /*
\par   Reallocate memory.  This function supports shrinking and expanding blocks,
\par   and will also act like ram_allocate if the pointer passed to it is NULL.
\par   It won't, however, free the memory if you pass it a 0 size.
\par */
\par #ifndef NDEBUG
\par 
\par #define geRam_Realloc(ptr, newsize) _geRam_DebugRealloc(ptr, newsize, __FILE__, __LINE__)
\par 
\par // Do not call _geRam_DebugRealloc directly.
\par GENESISAPI void* _geRam_DebugRealloc(void* ptr, uint32 size, const char* pFile, int line);
\par 
\par #else
\par 
\par GENESISAPI void *geRam_Realloc(void *ptr,uint32 newsize);
\par 
\par #endif
\par 
\par #ifndef NDEBUG
\par 
\par GENESISAPI void geRam_ReportAllocations(void);
\par 
\par #else
\par 
\par #define geRam_ReportAllocations() 
\par 
\par #endif
\par 
\par #ifndef NDEBUG
\par     extern int32 geRam_CurrentlyUsed;
\par     extern int32 geRam_NumberOfAllocations;
\par     extern int32 geRam_MaximumUsed;
\par     extern int32 geRam_MaximumNumberOfAllocations;
\par 
\par GENESISAPI     void geRam_AddAllocation(int n,uint32 size);
\par #else
\par     #define geRam_AddAllocation(n,s)
\par #endif
\par 
\par // allocate the ram & clear it. (calloc)
\par GENESISAPI void * geRam_AllocateClear(uint32 size);
\par 
\par #define GE_RAM_ALLOCATE_STRUCT(type)      (type *)geRam_Allocate (sizeof (type))
\par #define GE_RAM_ALLOCATE_ARRAY(type,count) (type *)geRam_Allocate (sizeof (type) * (count))
\par 
\par #ifndef NDEBUG
\par #define GE_RAM_REALLOC_ARRAY(ptr,type,count)  (type *)geRam_Realloc(  (ptr), sizeof(type) * (count) );\{type *XX=(ptr);\}
\par #else
\par #define GE_RAM_REALLOC_ARRAY(ptr,type,count)  (type *)geRam_Realloc(  (ptr), sizeof(type) * (count) )
\par #endif
\par 
\par #ifndef NDEBUG
\par geBoolean geRam_IsValidPtr(void *ptr);
\par #endif
\par 
\par #ifdef __cplusplus
\par   \}
\par #endif
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\tx720\outlinelevel1\adjustright \b\f16\fs28\cgrid {\page }{\i {\*\bkmkstart _Toc454070057}OpenSource/Source/Engine/Vfile Subdirectory{\*\bkmkend _Toc454070057}
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are used to allow virtual files in the Genesis3D world.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070058}DirTree.h{\*\bkmkend _Toc454070058}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  DIRTREE.H                                                                           */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Directory tree interface                                               */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab DIRTREE_H
\par #define\tab DIRTREE_H
\par 
\par #include\tab "vfile.h"
\par 
\par typedef struct DirTree\tab \tab \tab DirTree;
\par typedef struct DirTree_Finder\tab DirTree_Finder;
\par 
\par DirTree *DirTree_Create(void);
\par 
\par DirTree *DirTree_CreateFromFile(geVFile *File);
\par 
\par geBoolean DirTree_WriteToFile(const DirTree *Tree, geVFile *File);
\par 
\par geBoolean DirTree_GetSize(const DirTree *Tree, long *Size);
\par \tab // Gets the size of data that will be written to disk to persist
\par \tab // the tree.  This API is NOT efficient.
\par 
\par void DirTree_Destroy(DirTree *Tree);
\par 
\par 
\par DirTree *DirTree_FindExact(const DirTree *Tree, const char *Path);
\par DirTree *DirTree_FindPartial(
\par \tab const DirTree *\tab Tree,
\par \tab const char *\tab Path,
\par \tab const char **\tab LeftOvers);
\par 
\par DirTree * DirTree_AddFile(DirTree *Tree, const char *Path, geBoolean IsDirectory);
\par 
\par geBoolean DirTree_Remove(DirTree *Tree, DirTree *SubTree);
\par 
\par void DirTree_SetFileAttributes(DirTree *Tree, geVFile_Attributes Attributes);
\par 
\par void DirTree_GetFileAttributes(DirTree *Tree, geVFile_Attributes *Attributes);
\par 
\par void DirTree_SetFileOffset(DirTree *Tree, long Offset);
\par 
\par void DirTree_GetFileOffset(DirTree *Tree, long *Offset);
\par 
\par void DirTree_SetFileTime(DirTree *Tree, const geVFile_Time *Time);
\par 
\par void DirTree_GetFileTime(DirTree *Tree, geVFile_Time *Time);
\par 
\par void DirTree_SetFileSize(DirTree *Tree, long Size);
\par 
\par void DirTree_GetFileSize(DirTree *Tree, long *Size);
\par 
\par geBoolean DirTree_SetFileHints(DirTree *Tree, const geVFile_Hints *Hints);
\par 
\par void DirTree_GetFileHints(DirTree *Tree, geVFile_Hints *Hints);
\par 
\par geBoolean DirTree_GetName(DirTree *Tree, char *Buff, int MaxLen);
\par 
\par geBoolean DirTree_FileExists(const DirTree *Tree, const char *Path);
\par 
\par 
\par DirTree_Finder * DirTree_CreateFinder(DirTree *Tree, const char *Path);
\par 
\par void DirTree_DestroyFinder(DirTree_Finder *Finder);
\par 
\par DirTree * DirTree_FinderGetNextFile(DirTree_Finder *Finder);
\par 
\par 
\par #ifdef\tab DEBUG
\par void DirTree_Dump(const DirTree *Tree);
\par #endif
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070059}FSDOS.H{\*\bkmkend _Toc454070059}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  FSDOS.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: DOS file system interface                                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab FSDOS_H
\par #define\tab FSDOS_H
\par 
\par const\tab geVFile_SystemAPIs *GENESISCC FSDos_GetAPIs(void);
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070060}FSMemory.h{\*\bkmkend _Toc454070060}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  FSMEMORY.H                                                                          */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Memory file system interface                                           */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab FSMEMORY_H
\par #define\tab FSMEMORY_H
\par 
\par const\tab geVFile_SystemAPIs * GENESISCC FSMemory_GetAPIs(void);
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070061}FSVFS.h{\*\bkmkend _Toc454070061}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  FSVFS.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Collection file system interface                                       */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab FSVFS_H
\par #define\tab FSVFS_H
\par 
\par #include "vfile._h"
\par 
\par const\tab geVFile_SystemAPIs * GENESISCC FSVFS_GetAPIs(void);
\par 
\par #endif
\par 
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {\page {\*\bkmkstart _Toc454070062}VFILE._h{\*\bkmkend _Toc454070062}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  VFILE._H                                                                             */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Systems internal interfaces for vfiles                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab VFILE__H
\par #define VFILE__H
\par 
\par #include\tab "basetype.h"
\par #include\tab "vfile.h"
\par 
\par typedef void * \tab \tab (GENESISCC *geVFile_FinderCreateFN)(geVFile *FileSystem, void *Handle, const char *FileSpec);
\par typedef geBoolean \tab (GENESISCC *geVFile_FinderGetNextFileFN)(void *Handle);
\par typedef geBoolean \tab (GENESISCC *geVFile_FinderGetPropertiesFN)(void *Handle, geVFile_Properties *Properties);
\par typedef void \tab \tab (GENESISCC *geVFile_FinderDestroyFN)(void *Handle);
\par 
\par typedef\tab void * \tab (GENESISCC *geVFile_OpenNewSystemFN)(geVFile *FS,
\par \tab \tab \tab \tab \tab  const char *Name,
\par \tab \tab \tab \tab \tab  void *\tab Context,
\par \tab \tab \tab \tab \tab  unsigned int OpenModeFlags);
\par 
\par typedef geBoolean (GENESISCC *geVFile_UpdateContextFN)(geVFile *FS, void *Handle, void *Context, int ContextSize);
\par 
\par typedef\tab void * \tab (GENESISCC *geVFile_OpenFN)(geVFile *FS,
\par \tab \tab \tab \tab \tab  void *Handle,
\par \tab \tab \tab \tab \tab  const char *Name,
\par \tab \tab \tab \tab \tab  void *\tab Context,
\par \tab \tab \tab \tab \tab  unsigned int OpenModeFlags);
\par 
\par typedef\tab geBoolean  (GENESISCC *geVFile_DeleteFileFN)(geVFile *FS, void *Handle, const char *FileName);
\par typedef\tab geBoolean  (GENESISCC *geVFile_RenameFileFN)(geVFile *FS, void *Handle, const char *FileName, const char *NewFileName);
\par typedef\tab geBoolean  (GENESISCC *geVFile_FileExistsFN)(geVFile *FS, void *Handle, const char *FileName);
\par typedef\tab geBoolean  (GENESISCC *geVFile_DisperseFN)(geVFile *FS, void *Handle, const char *Directory, geBoolean Recursive);
\par typedef\tab void \tab   (GENESISCC *geVFile_CloseFN)(void *Handle);
\par 
\par typedef\tab geBoolean  (GENESISCC *geVFile_GetSFN)(void *Handle, void *Buff, int MaxSize);
\par typedef\tab geBoolean  (GENESISCC *geVFile_ReadFN)(void *Handle, void *Buff, int Count);
\par typedef\tab geBoolean  (GENESISCC *geVFile_WriteFN)(void *Handle, const void *Buff, int Count);
\par typedef\tab geBoolean  (GENESISCC *geVFile_SeekFN)(void *Handle, int Where, geVFile_Whence Whence);
\par typedef\tab geBoolean  (GENESISCC *geVFile_EOFFN)(const void *Handle);
\par typedef\tab geBoolean  (GENESISCC *geVFile_TellFN)(const void *Handle, long *Position);
\par typedef\tab geBoolean  (GENESISCC *geVFile_GetPropertiesFN)(const void *Handle, geVFile_Properties *Properties);
\par 
\par typedef\tab geBoolean  (GENESISCC *geVFile_SizeFN)(const void *Handle, long *Size);
\par typedef geBoolean  (GENESISCC *geVFile_SetSizeFN)(void *Handle, long Size);
\par typedef geBoolean  (GENESISCC *geVFile_SetAttributesFN)(void *Handle, geVFile_Attributes Attributes);
\par typedef geBoolean  (GENESISCC *geVFile_SetTimeFN)(void *Handle, const geVFile_Time *Time);
\par typedef geBoolean  (GENESISCC *geVFile_SetHintsFN)(void *Handle, const geVFile_Hints *Hints);
\par 
\par typedef\tab struct\tab geVFile_SystemAPIs
\par \{
\par \tab geVFile_FinderCreateFN\tab \tab FinderCreate;
\par \tab geVFile_FinderGetNextFileFN\tab FinderGetNextFile;
\par \tab geVFile_FinderGetPropertiesFN FinderGetProperties;
\par \tab geVFile_FinderDestroyFN\tab \tab FinderDestroy;
\par 
\par \tab geVFile_OpenNewSystemFN\tab \tab OpenNewSystem;
\par \tab geVFile_UpdateContextFN\tab \tab UpdateContext;
\par \tab geVFile_OpenFN\tab \tab \tab \tab Open;
\par \tab geVFile_DeleteFileFN\tab \tab DeleteFile;
\par \tab geVFile_RenameFileFN\tab \tab RenameFile;
\par \tab geVFile_FileExistsFN\tab \tab FileExists;
\par \tab geVFile_DisperseFN\tab \tab \tab Disperse;
\par \tab geVFile_CloseFN\tab \tab \tab \tab Close;
\par 
\par \tab geVFile_GetSFN\tab \tab \tab \tab GetS;
\par \tab geVFile_ReadFN\tab \tab \tab \tab Read;
\par \tab geVFile_WriteFN\tab \tab \tab \tab Write;
\par \tab geVFile_SeekFN\tab \tab \tab \tab Seek;
\par \tab geVFile_EOFFN\tab \tab \tab \tab Eof;
\par \tab geVFile_TellFN\tab \tab \tab \tab Tell;
\par \tab geVFile_SizeFN\tab \tab \tab \tab Size;
\par 
\par \tab geVFile_GetPropertiesFN\tab \tab GetProperties;
\par 
\par \tab geVFile_SetSizeFN\tab \tab \tab SetSize;
\par \tab geVFile_SetAttributesFN\tab \tab SetAttributes;
\par \tab geVFile_SetTimeFN\tab \tab \tab SetTime;
\par \tab geVFile_SetHintsFN\tab \tab \tab SetHints;
\par \}\tab geVFile_SystemAPIs;
\par 
\par geBoolean GENESISCC VFile_RegisterFileSystem(
\par \tab const geVFile_SystemAPIs *\tab APIs,
\par \tab geVFile_TypeIdentifier *\tab Type);
\par 
\par #endif
\par 
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070063}VFILE.h{\*\bkmkend _Toc454070063}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  VFILE.H                                                                             */
\par /*                                                                                      */
\par /*  Author: Eli Boling                                                                  */
\par /*  Description: Virtual file interface                                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef\tab VFILE_H
\par #define\tab VFILE_H
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #include\tab "basetype.h"
\par 
\par typedef\tab struct\tab geVFile\tab \tab \tab geVFile;
\par 
\par //--------- Finder (Directory) --------------
\par typedef\tab struct\tab geVFile_Finder\tab geVFile_Finder;
\par 
\par typedef int     \tab \tab geVFile_TypeIdentifier;
\par typedef unsigned int    geVFile_Attributes;
\par 
\par typedef struct\tab geVFile_Hints
\par \{
\par \tab void *\tab HintData;
\par \tab int\tab \tab HintDataLength;
\par \}\tab geVFile_Hints;
\par 
\par typedef\tab struct\tab geVFile_Time
\par \{
\par \tab unsigned long\tab Time1;
\par \tab unsigned long\tab Time2;
\par \}\tab geVFile_Time;
\par 
\par #define\tab GE_VFILE_ATTRIB_READONLY\tab 0x00000001
\par #define\tab GE_VFILE_ATTRIB_DIRECTORY\tab 0x00000002
\par 
\par typedef\tab struct\tab geVFile_Properties
\par \{
\par \tab geVFile_Time\tab \tab \tab \tab Time;
\par \tab geVFile_Attributes\tab \tab AttributeFlags;
\par \tab long\tab \tab \tab \tab \tab Size;
\par \tab geVFile_Hints\tab \tab \tab \tab Hints;
\par \tab char\tab \tab \tab \tab \tab Name[1024];
\par \}\tab geVFile_Properties;
\par 
\par #ifdef _INC_WINDOWS
\par GENESISAPI void GENESISCC geVFile_TimeToWin32FileTime(const geVFile_Time *, LPFILETIME Win32FileTime);
\par \tab // Converts a geVFile time to a Win32 FILETIME structure.  This API is the
\par \tab // way to get the file time into a format to do standardized date/time
\par \tab // operations on.  We do not provide date/time operations natively.
\par #endif
\par 
\par GENESISAPI geVFile_Finder * GENESISCC geVFile_CreateFinder(
\par \tab geVFile *\tab \tab FileSystem,
\par \tab const char *\tab FileSpec);
\par \tab // Creates a finder object from which you can get iterated file names.
\par \tab // This is findfirst/findnext functionality.  
\par 
\par GENESISAPI void GENESISCC geVFile_DestroyFinder(geVFile_Finder *Finder);
\par \tab // Destroys a Finder object
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_FinderGetNextFile(geVFile_Finder *Finder);
\par \tab // Tracks to the next file in the finder directory
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_FinderGetProperties(const geVFile_Finder *Finder, geVFile_Properties *Properties);
\par \tab // Gets the file properties from a geVFile_Finder.  You cannot set properties for
\par \tab // a file through a finder.  You have to set the properties through a geVFile.
\par 
\par //--------- File System Operations ----
\par 
\par typedef\tab struct\tab geVFile_MemoryContext
\par \{
\par \tab void *\tab Data;
\par \tab int\tab \tab DataLength;
\par \}\tab geVFile_MemoryContext;
\par 
\par #define GE_VFILE_TYPE_DOS\tab     ( (geVFile_TypeIdentifier) 1L )
\par #define GE_VFILE_TYPE_MEMORY\tab ( (geVFile_TypeIdentifier) 2L )
\par #define GE_VFILE_TYPE_VIRTUAL\tab ( (geVFile_TypeIdentifier) 3L )
\par 
\par // First three flags are mutually exclusive.  Combining them will result in failure
\par // returns for both geVFile_OpenNewSystem and geVFile_Open.
\par #define\tab GE_VFILE_OPEN_READONLY\tab  0x00000001
\par #define\tab GE_VFILE_OPEN_UPDATE \tab  0x00000002
\par #define\tab GE_VFILE_OPEN_CREATE\tab  0x00000004
\par 
\par #define GE_VFILE_OPEN_DIRECTORY  0x00000008
\par 
\par #if 0
\par geBoolean GENESISCC\tab geVFile_Startup(void);
\par \tab // Initializes the VFile System.  This API MUST be called before any other
\par \tab // VFile APIs are called.  This API ensures that the rest of the VFile systems
\par \tab // will be thread safe.  Hence the application should ensure that this function
\par \tab // is called once and only once.
\par #endif
\par 
\par GENESISAPI geVFile * GENESISCC geVFile_OpenNewSystem(
\par \tab geVFile *\tab \tab \tab \tab \tab FS,
\par \tab geVFile_TypeIdentifier\tab FileSystemType,  // \{ DOS, MEMORY, ETC ... \},
\par \tab const char *\tab \tab \tab Name, 
\par \tab void *\tab \tab \tab \tab \tab Context, 
\par \tab unsigned int \tab \tab \tab OpenModeFlags);
\par \tab // Opens a file / file system.
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_UpdateContext(geVFile *FS, void *Context, int ContextSize);
\par 
\par GENESISAPI geVFile * GENESISCC geVFile_GetContext(const geVFile *File);
\par \tab // Returns the outer context in which File was opened.
\par 
\par GENESISAPI geVFile * GENESISCC geVFile_Open( 
\par \tab geVFile *\tab \tab \tab FS,
\par \tab const char *\tab Name, 
\par \tab unsigned int \tab OpenModeFlags);
\par 
\par /*
\par typedef\tab enum
\par \{
\par \tab geVFile_AppendPath,
\par \tab geVFile_PrependPath,
\par \}\tab geVFile_SearchOrder;
\par */
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_AddPath(geVFile *FS1, const geVFile *FS2, geBoolean Append);
\par \tab // Appends (or prepends) the path associated with FS2 into FS1.
\par \tab //    Append==GE_TRUE   causes the FS2 to be searched AFTER FS1
\par \tab //    Append==GE_FALSE  causes the FS2 to be searched BEFORE FS1
\par 
\par /*  perhaps geVFile_AppendPath and geVFile_PrependPath */
\par 
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_DeleteFile(geVFile *FS, const char *FileName);
\par \tab // Deletes a file within a file system.  Returns GE_TRUE on success, GE_FALSE
\par \tab // on failure.
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_RenameFile(geVFile *FS, const char *FileName, const char *NewName);
\par \tab // Renames a file within a file system.  Returns GE_TRUE on success, GE_FALSE
\par \tab // on failure.
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_FileExists(geVFile *FS, const char *FileName);
\par \tab // Returns GE_TRUE if the file FileName exists in FS, GE_FALSE otherwise.
\par \tab // Does not do any searching (?)
\par 
\par //geVFile_VFileType geVFile_Register( all kinds of stuff );
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_Close (geVFile *File);
\par \tab // closes and destroys the File
\par 
\par //---------- File Specific Operations -----------
\par 
\par typedef\tab enum
\par \{
\par \tab GE_VFILE_SEEKCUR\tab = 0,
\par \tab GE_VFILE_SEEKEND\tab = 1,
\par \tab GE_VFILE_SEEKSET\tab = 2
\par \}\tab geVFile_Whence;
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_GetS  \tab \tab  (\tab \tab geVFile *File, void *Buff, int MaxLen);
\par GENESISAPI geBoolean GENESISCC geVFile_Read  \tab \tab  (\tab \tab geVFile *File, void *Buff, int Count);
\par GENESISAPI geBoolean GENESISCC geVFile_Write \tab \tab  (\tab \tab geVFile *File, const void *Buff, int Count);
\par GENESISAPI geBoolean GENESISCC geVFile_Seek  \tab \tab  (\tab \tab geVFile *File, int where, geVFile_Whence Whence);
\par GENESISAPI geBoolean GENESISCC geVFile_Printf\tab \tab  (\tab \tab geVFile *File, const char *Format, ...);
\par GENESISAPI geBoolean GENESISCC geVFile_EOF   \tab \tab  (const geVFile *File);
\par GENESISAPI geBoolean GENESISCC geVFile_Tell  \tab \tab  (const geVFile *File, long *Position);
\par GENESISAPI geBoolean GENESISCC geVFile_GetProperties(const geVFile *File, geVFile_Properties *Properties);
\par //geBoolean geVFile_GetName(geVFile *File, char *Buff, int MaxBuffLen);
\par \tab // Gets the name of the file
\par 
\par GENESISAPI geBoolean GENESISCC geVFile_Size  \tab \tab  (const geVFile *File, long *Size);
\par GENESISAPI geBoolean GENESISCC geVFile_SetSize\tab \tab  (\tab \tab geVFile *File, long Size);
\par GENESISAPI geBoolean GENESISCC geVFile_SetAttributes(\tab \tab geVFile *File, geVFile_Attributes Attributes);
\par GENESISAPI geBoolean GENESISCC geVFile_SetTime\tab \tab  (\tab \tab geVFile *File, const geVFile_Time *Time);
\par GENESISAPI geBoolean GENESISCC geVFile_SetHints\tab  (\tab \tab geVFile *File, const geVFile_Hints *Hints);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par \page 
\par OpenSource/Source/Engine/World Subdirectory
\par }\pard\plain \keepn\widctlpar\tx720\adjustright \f1\cgrid {The header files in this subdirectory are the fundamental Genesis3D world creation files.
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070064}Fog.h{\*\bkmkend _Toc454070064}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Fog.h                                                                               */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Fog module                                                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_FOG_H
\par #define GE_FOG_H
\par 
\par #include <Assert.h>
\par 
\par #include "Vec3d.h"
\par #include "BaseType.h"
\par #include "GeTypes.h"
\par #include "Ram.h"
\par #include "Errorlog.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //=====================================================================================
\par //\tab Defines / Structure defines
\par //=====================================================================================
\par typedef struct\tab \tab geFog\tab \tab geFog;
\par 
\par typedef geBoolean\tab SET_ATTR_CB(geFog *Fog);
\par 
\par typedef struct geFog
\par \{
\par \tab geVec3d\tab \tab \tab Pos;
\par \tab GE_RGBA\tab \tab \tab Color;
\par \tab float\tab \tab \tab LightBrightness;
\par \tab float\tab \tab \tab VolumeBrightness;
\par \tab float\tab \tab \tab VolumeRadius;
\par \tab float\tab \tab \tab VolumeRadius2;\tab \tab \tab \tab // *2
\par \tab float\tab \tab \tab VolumeRadiusSquared;\tab \tab // Radius squared
\par 
\par \tab void\tab \tab \tab *UserData;\tab 
\par 
\par \tab SET_ATTR_CB\tab \tab *SetAttrCB;\tab \tab \tab \tab \tab // CB for when geFog_SetAttributes is called
\par 
\par \tab struct geFog\tab *Next;
\par \tab struct geFog\tab *Prev;
\par \} geFog;
\par 
\par //=====================================================================================
\par //\tab Function ProtoTypes
\par //=====================================================================================
\par GENESISAPI\tab \tab geFog *geFog_Create(SET_ATTR_CB *SetAttrCB);
\par 
\par GENESISAPI\tab \tab void geFog_Destroy(geFog *Fog);
\par 
\par GENESISAPI\tab \tab geBoolean geFog_SetAttributes(\tab geFog\tab \tab \tab *Fog, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab *Pos, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_RGBA\tab \tab \tab *Color,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab LightBrightness, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab VolumeBrightness, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float\tab \tab \tab VolumeRadius);
\par 
\par GENESISAPI\tab \tab geBoolean geFog_SetUserData(geFog *Fog, void *UserData);
\par GENESISAPI\tab \tab void *geFog_GetUserData(geFog *Fog);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070065}Frustrum.h{\*\bkmkend _Toc454070065}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Frustum.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Frustum creation/clipping                                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_FRUSTUM_H
\par #define GE_FRUSTUM_H
\par 
\par #include <Assert.h>
\par //#include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "GBSPFile.h"
\par #include "Vec3d.h"
\par #include "Camera.h"
\par #include "XForm3d.h"
\par #include "Surface.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define MAX_FCP\tab \tab \tab \tab \tab \tab 32\tab \tab \tab // Max ClipPlanes for frustum...
\par 
\par #define CLIP_PLANE_EPSILON  0.001f
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par typedef struct Frustum_Info
\par \{
\par \tab int32\tab \tab \tab NumPlanes;\tab \tab \tab \tab \tab // Number of frustum planes to clip against
\par \tab GFX_Plane\tab \tab Planes[MAX_FCP];\tab \tab \tab // Planes to clip against
\par \tab \tab \tab \tab \tab 
\par \tab // Quick LUTS For BBox testing against frustum
\par \tab int32\tab \tab \tab FrustumBBoxIndexes[MAX_FCP*6];
\par \tab int32\tab \tab \tab *pFrustumBBoxIndexes[MAX_FCP];
\par \} Frustum_Info;
\par 
\par //================================================================================
\par //\tab Function ProtoTypes
\par //================================================================================
\par void Frustum_SetFromCamera(Frustum_Info *Info, geCamera *Camera);
\par geBoolean Frustum_SetFromPoly(Frustum_Info *Info, geVec3d *Verts, int32 NumVerts, geBoolean Flip);
\par void Frustum_RotateToWorldSpace(Frustum_Info *In, geCamera *Camera, Frustum_Info *Out);
\par void Frustum_TransformToWorldSpace(const Frustum_Info *In, const geCamera *Camera, Frustum_Info *Out);
\par 
\par geBoolean gePlane_ClipVertsFannedUVRGB(\tab const geVec3d *In, const Surf_TexVert *TIn, int32 NumIn, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const GFX_Plane *Plane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Out, Surf_TexVert *TOut, int32 *NumOut);
\par 
\par geBoolean Frustum_ClipToPlane(\tab \tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par geBoolean Frustum_ClipToPlaneUV(\tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneUVRGB(GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneUVRGBA(GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneRGB(\tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneL(\tab \tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *pIn, GE_LVertex *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);\tab // CB added
\par 
\par void Frustum_Project(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par void Frustum_ProjectRGB(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par void Frustum_ProjectRGBA(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par void Frustum_ProjectRGBNoClamp(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par 
\par geBoolean Frustum_PointsInFrustum(const geVec3d *Pin, const GFX_Plane *Plane, int32 NumVerts, int32 *c);
\par 
\par geBoolean Frustum_PointInFrustum(const Frustum_Info *Fi, const geVec3d *Point, float Radius);
\par 
\par geBoolean Frustum_ClipAllPlanesL(const Frustum_Info * Fi,uint32 ClipFlags,GE_LVertex *Verts, int32 *pNumVerts);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070066}GBSPFILE.H{\*\bkmkend _Toc454070066}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Frustum.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Frustum creation/clipping                                              */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_FRUSTUM_H
\par #define GE_FRUSTUM_H
\par 
\par #include <Assert.h>
\par //#include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "GBSPFile.h"
\par #include "Vec3d.h"
\par #include "Camera.h"
\par #include "XForm3d.h"
\par #include "Surface.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define MAX_FCP\tab \tab \tab \tab \tab \tab 32\tab \tab \tab // Max ClipPlanes for frustum...
\par 
\par #define CLIP_PLANE_EPSILON  0.001f
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par typedef struct Frustum_Info
\par \{
\par \tab int32\tab \tab \tab NumPlanes;\tab \tab \tab \tab \tab // Number of frustum planes to clip against
\par \tab GFX_Plane\tab \tab Planes[MAX_FCP];\tab \tab \tab // Planes to clip against
\par \tab \tab \tab \tab \tab 
\par \tab // Quick LUTS For BBox testing against frustum
\par \tab int32\tab \tab \tab FrustumBBoxIndexes[MAX_FCP*6];
\par \tab int32\tab \tab \tab *pFrustumBBoxIndexes[MAX_FCP];
\par \} Frustum_Info;
\par 
\par //================================================================================
\par //\tab Function ProtoTypes
\par //================================================================================
\par void Frustum_SetFromCamera(Frustum_Info *Info, geCamera *Camera);
\par geBoolean Frustum_SetFromPoly(Frustum_Info *Info, geVec3d *Verts, int32 NumVerts, geBoolean Flip);
\par void Frustum_RotateToWorldSpace(Frustum_Info *In, geCamera *Camera, Frustum_Info *Out);
\par void Frustum_TransformToWorldSpace(const Frustum_Info *In, const geCamera *Camera, Frustum_Info *Out);
\par 
\par geBoolean gePlane_ClipVertsFannedUVRGB(\tab const geVec3d *In, const Surf_TexVert *TIn, int32 NumIn, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab const GFX_Plane *Plane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Out, Surf_TexVert *TOut, int32 *NumOut);
\par 
\par geBoolean Frustum_ClipToPlane(\tab \tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par geBoolean Frustum_ClipToPlaneUV(\tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneUVRGB(GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneUVRGBA(GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneRGB(\tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *pIn, geVec3d *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Surf_TexVert *pTIn, Surf_TexVert *pTOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);
\par 
\par geBoolean Frustum_ClipToPlaneL(\tab \tab GFX_Plane *pPlane, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *pIn, GE_LVertex *pOut,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, int32 *OutVerts);\tab // CB added
\par 
\par void Frustum_Project(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par void Frustum_ProjectRGB(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par void Frustum_ProjectRGBA(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par void Frustum_ProjectRGBNoClamp(geVec3d *pIn, Surf_TexVert *pTIn, DRV_TLVertex *pOut, int32 NumVerts, const geCamera *Camera);
\par 
\par geBoolean Frustum_PointsInFrustum(const geVec3d *Pin, const GFX_Plane *Plane, int32 NumVerts, int32 *c);
\par 
\par geBoolean Frustum_PointInFrustum(const Frustum_Info *Fi, const geVec3d *Point, float Radius);
\par 
\par geBoolean Frustum_ClipAllPlanesL(const Frustum_Info * Fi,uint32 ClipFlags,GE_LVertex *Verts, int32 *pNumVerts);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070067}LIGHT.h{\*\bkmkend _Toc454070067}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Light.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Handles lightmaps, dynamic light, fog, etc                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_LIGHT_H
\par #define GE_LIGHT_H
\par 
\par #include <Assert.h>
\par //#include <Windows.h>
\par 
\par #include "Genesis.h"
\par #include "BaseType.h"
\par #include "System.h"
\par #include "DCommon.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //=====================================================================================
\par //\tab Defines / Structure defines
\par //=====================================================================================
\par #define MAX_DYNAMIC_LIGHTS\tab \tab 32\tab // Maximum number of moving lights in map
\par #define MAX_LTYPES\tab \tab \tab \tab 12\tab // Max number of ltypes
\par //#define\tab MAX_LMAP_SIZE\tab \tab \tab 128
\par //#define\tab MAX_LMAP_SIZE\tab \tab \tab 18
\par #define\tab MAX_LMAP_SIZE\tab \tab \tab 18
\par 
\par typedef struct
\par \{
\par \tab geBoolean\tab Active;\tab \tab \tab \tab \tab // Is this light in use?
\par \tab GE_RGBA\tab \tab Color;\tab \tab \tab \tab \tab // Color of light (0...255.0f)
\par \tab geVec3d\tab \tab Pos;\tab \tab \tab \tab \tab // Position of this light
\par \tab float\tab \tab Radius;\tab \tab \tab \tab \tab // Intensity of this light (Radius)
\par 
\par \tab // Fixed point color
\par \tab uint32\tab \tab FColorR;
\par \tab uint32\tab \tab FColorG;
\par \tab uint32\tab \tab FColorB;
\par 
\par \tab geBoolean\tab CastShadow;
\par \} Light_DLight;
\par 
\par typedef struct Light_LightInfo
\par \{
\par \tab // Intensity tables, for animated styles
\par \tab BOOL\tab \tab \tab LTypeDynamic[MAX_LTYPES];
\par \tab int32\tab \tab \tab LTypeIntensities[MAX_LTYPES];
\par \tab uint8\tab \tab \tab LTypeIntensities2[MAX_LTYPES];
\par 
\par \tab char\tab \tab \tab LTypeTable[MAX_LTYPES][70];
\par \tab int32\tab \tab \tab IPos[MAX_LTYPES];                 // Ref position in ltype table
\par 
\par \tab Light_DLight\tab DynamicLights[MAX_DYNAMIC_LIGHTS];
\par \tab int32\tab \tab \tab NumDynamicLights;
\par \} Light_LightInfo;
\par 
\par //=====================================================================================
\par //\tab Function ProtoTypes
\par //=====================================================================================
\par geBoolean\tab Light_EngineInit(geEngine *Engine);
\par void\tab \tab Light_EngineShutdown(geEngine *Engine);
\par geBoolean\tab Light_WorldInit(geWorld *World);
\par void\tab \tab Light_WorldShutdown(geWorld *World);
\par geBoolean\tab Light_SetEngine(geEngine *Engine);
\par geBoolean\tab Light_SetWorld(geWorld *World);
\par geBoolean\tab Light_SetGBSP(World_BSP *BSP);
\par 
\par Light_DLight *Light_WorldAddLight(geWorld *World);
\par void\tab \tab Light_WorldRemoveLight(geWorld *World, Light_DLight *DLight);
\par geBoolean\tab  Light_SetupLights(geWorld *World);
\par geBoolean\tab Light_SetAttributes(\tab Light_DLight *Light, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Pos, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const GE_RGBA *RGBA, 
\par \tab \tab \tab \tab \tab \tab \tab \tab float Radius,
\par \tab \tab \tab \tab \tab \tab \tab \tab geBoolean CastShadow);
\par geBoolean\tab Light_WorldSetLTypeTable(geWorld *World, int32 LType, const char *Table);
\par 
\par char\tab \tab Light_WorldGetLTypeCurrent(geWorld *World, int32 LType);
\par void\tab \tab Light_SetupLightmap(DRV_LInfo *LInfo, BOOL *Dynamic);
\par geBoolean\tab Light_GetLightmapRGB(Surf_SurfInfo *Surf, geVec3d *Pos, GE_RGBA *RGBA);
\par geBoolean\tab Light_GetLightmapRGBBlended(Surf_SurfInfo *Surf, geVec3d *Pos, GE_RGBA *RGBA);
\par void\tab \tab Light_FogVerts(const geFog *Fog, const geVec3d *POV, const geVec3d *Verts, Surf_TexVert *TexVerts, int32 NumVerts);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070068}Plane.h{\*\bkmkend _Toc454070068}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Plane.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Handy functions that deal with GFX_Plane's                             */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_PLANE_H
\par #define GE_PLANE_H
\par 
\par #include <Assert.h>
\par #include <Windows.h>
\par 
\par #include "GBSPFile.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //=====================================================================================
\par //\tab Defines / Structure defines
\par //=====================================================================================
\par 
\par //=====================================================================================
\par //\tab Function ProtoTypes
\par //=====================================================================================
\par geBoolean GENESISCC Plane_SetEngine(geEngine *Engine);
\par geBoolean GENESISCC Plane_SetWorld(geWorld *World);
\par geBoolean GENESISCC Plane_SetGBSP(World_BSP *BSP);
\par 
\par int32 GENESISCC Plane_FindLeaf(const geWorld *World, int32 Node, const geVec3d *POV);
\par 
\par float GENESISCC Plane_PlaneDistanceFast(const GFX_Plane *Plane, const geVec3d *Point);
\par float GENESISCC Plane_FaceDistanceFast(const GFX_Face *Face, const geVec3d *Point);
\par float GENESISCC Plane_PlaneDistance(const GFX_Plane *Plane, const geVec3d *Point);
\par void gePlane_SetFromVerts(GFX_Plane *Plane, const geVec3d *V1, const geVec3d *V2, const geVec3d *V3);
\par 
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070069}Surface.h{\*\bkmkend _Toc454070069}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Surface.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Creates the surfaces for a BSP from the GFX data                       */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_SURFACE_H
\par #define GE_SURFACE_H
\par 
\par #include <Assert.h>
\par #include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "PtrTypes.h"
\par #include "Vec3d.h"
\par #include "DCommon.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par 
\par // Surface info carries extra info about a face thats not in GFX_Face (File format face)
\par typedef struct Surf_SurfInfo
\par \{
\par \tab DRV_LInfo\tab LInfo;\tab \tab \tab \tab \tab \tab \tab // For RDriver use only...
\par 
\par \tab geVec3d\tab \tab T2WVecs[2];
\par \tab geVec3d\tab \tab TexOrg;
\par 
\par \tab geVec3d\tab \tab VMins;
\par \tab geVec3d\tab \tab VMaxs;
\par \tab 
\par \tab int32\tab \tab VisFrame;
\par \tab 
\par \tab int32\tab \tab TexInfo;
\par \tab 
\par \tab int32\tab \tab XStep;\tab \tab \tab \tab \tab \tab \tab // Lightmap step values (1:21:10 fixed)
\par \tab int32\tab \tab YStep;
\par \tab int32\tab \tab XScale;
\par \tab int32\tab \tab YScale;
\par 
\par \tab float\tab \tab ShiftU;
\par \tab float\tab \tab ShiftV;
\par \tab 
\par \tab int32\tab \tab NumLTypes;\tab \tab \tab \tab \tab \tab // Number of lightmap types this face has...
\par \tab int32\tab \tab DLightFrame;\tab \tab \tab \tab \tab // == Globals->CurFrame if dlighted
\par \tab uint32\tab \tab DLights;\tab \tab \tab \tab \tab \tab // Bit set for each DLight
\par \tab uint32\tab \tab Flags;\tab \tab \tab \tab \tab \tab \tab // Surface Flags (NOTE - This is not the flags from the utilities)
\par 
\par \} Surf_SurfInfo;
\par 
\par typedef struct Surf_TexVert
\par \{
\par \tab float\tab \tab u, v;
\par \tab float\tab \tab r, g, b, a;
\par \} Surf_TexVert;
\par 
\par // Lit vertex
\par typedef struct
\par \{
\par \tab float X, Y, Z;\tab \tab \tab \tab \tab \tab \tab \tab \tab // 3d vertex
\par \tab float u, v;\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Uv's
\par \tab float r, g, b, a;\tab \tab \tab \tab \tab \tab \tab \tab // color
\par \} Surf_LVertex;
\par 
\par // Transformed Lit vertex
\par typedef struct
\par \{
\par \tab float x, y, z;\tab \tab \tab \tab \tab \tab \tab \tab \tab // screen points
\par \tab float u, v;\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // Uv's
\par \tab float r, g, b, a;\tab \tab \tab \tab \tab \tab \tab \tab // color
\par \} Surf_TLVertex;
\par 
\par //\tab Surface Flags
\par #define\tab \tab SURFINFO_TRANS\tab \tab \tab \tab (1<<0)\tab \tab // Surface is transparent
\par #define\tab \tab SURFINFO_LTYPED\tab \tab \tab \tab (1<<1)\tab \tab // This surface has more than one ltype
\par #define\tab \tab SURFINFO_LIGHTMAP\tab \tab \tab (1<<2)\tab \tab // This surface has a lightmap
\par #define\tab \tab SURFINFO_WAVY\tab \tab \tab \tab (1<<3)\tab \tab // This surface is a wavy surface
\par 
\par //================================================================================
\par //\tab Function defines
\par //================================================================================
\par geBoolean Surf_EngineInit(geEngine *Engine);
\par void Surf_EngineShutdown(geEngine *Engine);
\par geBoolean Surf_SetEngine(geEngine *Engine);
\par geBoolean Surf_SetWorld(geWorld *World);
\par geBoolean Surf_SetGBSP(World_BSP *BSP);
\par geBoolean Surf_WorldInit(geWorld *World);
\par void Surf_WorldShutdown(geWorld *World);
\par 
\par BOOL Surf_InSurfBoundingBox(Surf_SurfInfo *Surf, geVec3d *Pos, float Box);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070070}Trace.h{\*\bkmkend _Toc454070070}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Trace.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: BSP collision detection code                                           */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_TRACE_H
\par #define GE_TRACE_H
\par 
\par #include <Assert.h>
\par #include <Windows.h>
\par 
\par #include "Genesis.h"
\par #include "BaseType.h"
\par #include "Vec3d.h"
\par #include "World.h"
\par //#include "System.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //=====================================================================================
\par //\tab Defines / Structure defines
\par //=====================================================================================
\par #define\tab PSIDE_FRONT\tab \tab \tab 1
\par #define\tab PSIDE_BACK\tab \tab \tab 2
\par #define\tab PSIDE_BOTH\tab \tab \tab (PSIDE_FRONT|PSIDE_BACK)
\par #define\tab PSIDE_FACING\tab \tab 4
\par 
\par int32 Trace_BoxOnPlaneSide(const geVec3d *Mins, const geVec3d *Maxs, GFX_Plane *Plane);
\par geBoolean Trace_BBoxInVisibleLeaf(geWorld *World, geVec3d *Mins, geVec3d *Maxs);
\par 
\par //=====================================================================================
\par //\tab Function ProtoTypes
\par //=====================================================================================
\par 
\par 
\par geBoolean Trace_GEWorldCollision(\tab geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab geVec3d *Mins, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab geVec3d *Maxs, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab geVec3d *Front, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const\tab \tab geVec3d *Back, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32\tab \tab Contents,\tab \tab \tab // Contents to collide with
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32\tab \tab CollideFlags,\tab \tab // GE_COLLIDE_ALL, etc...
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32\tab \tab UserFlags,\tab \tab \tab // Flags to mask against actors
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CollisionCB *CollisionCB,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab void\tab \tab *Context,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_Collision *Col);
\par 
\par geBoolean Trace_WorldCollisionBNode(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Front, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Back, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *ModelNum,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Impact,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *Node,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *Plane,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *Side);
\par 
\par geBoolean Trace_WorldCollisionExact(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Front, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Back, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 Flags, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Impact,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GFX_Plane *Plane,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model **Model,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Mesh_RenderQ **Mesh,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geActor **Actor,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 UserFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CollisionCB *CollisionCB,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab void *Context);
\par 
\par // Internal only/ does not chek meshes/ returns index numbers into bsp structures for models
\par geBoolean Trace_WorldCollisionExact2(geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Front, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Back, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *Impact,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *Node,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *Plane,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 *Side);
\par 
\par geBoolean Trace_MiscCollision(GFX_BNode *BNodes, GFX_Plane *Planes, const geVec3d *Mins, const geVec3d *Maxs, const geVec3d *Front, const geVec3d *Back, geXForm3d *XForm, geVec3d *I, GFX_Plane *P);
\par geBoolean Trace_MiscCollision2(GFX_BNode *BNodes, GFX_Plane *Planes, const geVec3d *Front, const geVec3d *Back, geVec3d *I, int32 *P);
\par 
\par geBoolean Trace_WorldCollisionBBox(\tab geWorld\tab *World,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Mins, const geVec3d *Maxs, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d *Front, const geVec3d *Back,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 Flags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geVec3d *I, GFX_Plane *P,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model **Model,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab Mesh_RenderQ **Mesh,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geActor **Actor,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 UserFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_CollisionCB *CollisionCB,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab void *Context);
\par 
\par geBoolean Trace_TestModelMove(\tab geWorld\tab \tab *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model\tab \tab *Model, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d\tab *DXForm, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab \tab *Mins, const geVec3d *Maxs,
\par \tab \tab \tab \tab \tab \tab \tab \tab const geVec3d\tab \tab *In, geVec3d *Out);
\par 
\par geBoolean Trace_ModelCollision(geWorld\tab \tab *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab geWorld_Model\tab \tab *Model, 
\par \tab \tab \tab \tab \tab \tab \tab \tab const geXForm3d\tab *DXForm,
\par \tab \tab \tab \tab \tab \tab \tab \tab GE_Collision    *Collision,
\par \tab \tab \tab \tab \tab \tab \tab \tab //Mesh_RenderQ\tab **ImpactedMesh,
\par \tab \tab \tab \tab \tab \tab \tab \tab geVec3d\tab \tab \tab *ImpactPoint);
\par 
\par geBoolean Trace_InverseTreeFromBox(geVec3d *Mins, geVec3d *Maxs, GFX_BNode *BNodes, GFX_Plane *Planes);
\par 
\par geBoolean Trace_GetContents(geWorld *World, const geVec3d *Pos, const geVec3d *Mins, const geVec3d *Maxs, uint32 Flags, uint32 UserFlags, GE_CollisionCB *CollisionCB, void *Context, GE_Contents *Contents);
\par 
\par void Trace_GetMoveBox(const geVec3d *Mins, const geVec3d *Maxs, const geVec3d *Front, const geVec3d *Back, geVec3d *OMins, geVec3d *OMaxs);
\par 
\par void\tab \tab Trace_SetupIntersect(geWorld *World);
\par geBoolean\tab Trace_IntersectWorldBSP(geVec3d *Front, geVec3d *Back, int32 Node);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070071}User.h{\*\bkmkend _Toc454070071}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  User.h                                                                              */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: User poly's                                                            */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_USER_H
\par #define GE_USER_H
\par 
\par #include <Assert.h>
\par #include <Windows.h>
\par 
\par #include "BaseType.h"
\par #include "Vec3d.h"
\par #include "XForm3d.h"
\par #include "Camera.h"
\par #include "Genesis.h"
\par #include "World.h"
\par #include "Surface.h"
\par 
\par #include "DCommon.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define MAX_USER_VERTS\tab \tab \tab \tab 4\tab \tab \tab 
\par #define USER_MAX_SORTED_POLYS\tab \tab 1024
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par 
\par typedef struct\tab gePoly
\par \{
\par #ifdef _DEBUG
\par \tab struct gePoly\tab *Self1;
\par #endif
\par 
\par \tab geWorld\tab \tab \tab *World;
\par \tab GE_LVertex\tab \tab Verts[MAX_USER_VERTS];\tab // Copy of user verts\tab \tab \tab \tab \tab 
\par 
\par \tab geWorld_Leaf\tab *LeafData;
\par \tab float\tab \tab \tab ZOrder;
\par 
\par \tab int32\tab \tab \tab NumVerts;
\par 
\par \tab geBitmap\tab \tab *Bitmap;
\par 
\par \tab gePoly_Type\tab \tab Type;\tab \tab \tab \tab \tab // Type of poly
\par \tab int32\tab \tab \tab RenderFlags;\tab \tab \tab // Fx of poly
\par 
\par \tab float\tab \tab \tab Scale;\tab \tab \tab \tab \tab // Currently only used for TexturedPoint
\par 
\par \tab struct gePoly\tab *Prev;
\par \tab struct gePoly\tab *Next;
\par 
\par \tab struct gePoly\tab *AddOnceNext;
\par 
\par #ifdef _DEBUG
\par \tab struct gePoly\tab *Self2;
\par #endif
\par \} gePoly;
\par 
\par typedef struct User_Info
\par \{
\par \tab gePoly\tab \tab *AddPolyOnceList;
\par \} User_Info;
\par 
\par //================================================================================
\par //\tab Function ProtoTypes
\par //================================================================================
\par geBoolean\tab User_EngineInit(geEngine *Engine);
\par void\tab \tab User_EngineShutdown(geEngine *Engine);
\par geBoolean\tab User_WorldInit(geWorld *World);
\par void\tab \tab User_WorldShutdown(geWorld *World);
\par 
\par geBoolean User_RenderPolyList(gePoly *PolyList);
\par 
\par GENESISAPI\tab gePoly *geWorld_AddPolyOnce(\tab geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *Verts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab gePoly_Type Type, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 RenderFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab float Scale);
\par GENESISAPI\tab gePoly *geWorld_AddPoly(\tab geWorld *World, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab GE_LVertex *Verts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab int32 NumVerts, 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab geBitmap *Bitmap,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab gePoly_Type Type,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab uint32 RenderFlags,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab float Scale);
\par 
\par GENESISAPI\tab void geWorld_RemovePoly(geWorld *World, gePoly *Poly);
\par GENESISAPI\tab geBoolean gePoly_GetLVertex(gePoly *Poly, int32 Index, GE_LVertex *LVert);
\par GENESISAPI\tab geBoolean gePoly_SetLVertex(gePoly *Poly, int32 Index, const GE_LVertex *LVert);
\par 
\par geBoolean\tab User_SetCameraInfo(geEngine *Engine, geWorld *World, geCamera *Camera, Frustum_Info *Fi);
\par geBoolean\tab User_DestroyOncePolys(geWorld *World);
\par void\tab \tab User_DestroyPolyList(geWorld *World, gePoly *List);
\par 
\par void\tab \tab User_EngineFillRect(geEngine *Engine, const GE_Rect *Rect, const GE_RGBA *Color);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070072}Vis.h{\*\bkmkend _Toc454070072}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  Vis.h                                                                               */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Code to vis the world from a given pov                                 */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_VIS_H
\par #define GE_VIS_H
\par 
\par #include "Genesis.h"
\par #include "BaseType.h"
\par 
\par #include "Frustum.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //=====================================================================================
\par //\tab Defines / Structure defines
\par //=====================================================================================
\par 
\par //=====================================================================================
\par //\tab Function ProtoTypes
\par //=====================================================================================
\par geBoolean\tab Vis_WorldInit(geWorld *World);
\par void\tab \tab Vis_WorldShutdown(geWorld *World);
\par 
\par geBoolean\tab Vis_VisWorld(geEngine *Engine, geWorld *World, const geCamera *Camera, Frustum_Info *Fi);
\par 
\par geBoolean\tab Vis_MarkWaterFaces(World_BSP *WBSP);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070073}WBitmap.h{\*\bkmkend _Toc454070073}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  WBitmap.h                                                                           */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Creates geBitmaps from the data in the BSP, that are used to render    */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef WBITMAP_H
\par #define WBITMAP_H
\par 
\par #include <Assert.h>
\par 
\par #include "BaseType.h"
\par #include "GBSPFile.h"
\par #include "Bitmap.h"
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par //==
\par // This stuff should really go in GBSPFile.h...
\par \tab #define\tab \tab TEXTURE_SKYBOX\tab \tab \tab \tab (1<<0)\tab \tab \tab \tab // This is a skybox texture
\par 
\par \tab //\tab TexInfo Flags (Global shared info about each surface)
\par \tab #define\tab \tab TEXINFO_MIRROR\tab \tab \tab \tab (1<<0)
\par \tab #define\tab \tab TEXINFO_FULLBRIGHT\tab \tab \tab (1<<1)\tab \tab \tab \tab // No lightmap/fullbright
\par \tab #define\tab \tab TEXINFO_SKY\tab \tab \tab \tab \tab (1<<2)\tab \tab \tab \tab // Sky face
\par \tab #define\tab \tab TEXINFO_LIGHT\tab \tab \tab \tab (1<<3)\tab \tab \tab \tab // Face produces light
\par \tab #define\tab \tab TEXINFO_TRANS\tab \tab \tab \tab (1<<4)\tab \tab \tab \tab // Face has transparency
\par \tab #define\tab \tab TEXINFO_GOURAUD\tab \tab \tab \tab (1<<5)
\par \tab #define\tab \tab TEXINFO_FLAT\tab \tab \tab \tab (1<<6)
\par \tab #define\tab \tab TEXINFO_NO_LIGHTMAP\tab \tab \tab (1<<15)
\par //==
\par 
\par //================================================================================
\par //\tab #defs
\par //================================================================================
\par #define\tab \tab WBITMAP_SKYBOX\tab \tab \tab \tab (1<<0)\tab \tab \tab \tab // This is a skybox wbitmap
\par 
\par //================================================================================
\par //\tab Structure defines
\par //================================================================================
\par typedef struct geWBitmap\tab \tab \tab geWBitmap;
\par typedef struct geWBitmap_Pool\tab \tab geWBitmap_Pool;
\par 
\par //================================================================================
\par //\tab Function defines
\par //================================================================================
\par geWBitmap_Pool *geWBitmap_Pool_Create(GBSP_BSPData *BSPData);
\par void geWBitmap_Pool_Destroy(geWBitmap_Pool *Pool);
\par int32 geWBitmap_Pool_GetWBitmapCount(geWBitmap_Pool *Pool);
\par geWBitmap *geWBitmap_Pool_GetWBitmapByBitmap(geWBitmap_Pool *Pool, const geBitmap *Bitmap);
\par geWBitmap *geWBitmap_Pool_GetWBitmapByIndex(geWBitmap_Pool *Pool, int32 Index);
\par geBitmap *geWBitmap_Pool_GetBitmapByIndex(geWBitmap_Pool *Pool, int32 Index);
\par geBitmap *geWBitmap_Pool_GetBitmapByName(geWBitmap_Pool *Pool, const char *BitmapName);
\par geBoolean geWBitmap_Pool_CreateAllWBitmaps(geWBitmap_Pool *Pool, GBSP_BSPData *BSPData);
\par void geWBitmap_Pool_DestroyAllWBitmaps(geWBitmap_Pool *Pool);
\par uint32 geWBitmap_GetFlags(geWBitmap *WBitmap);
\par geBitmap *geWBitmap_GetBitmap(geWBitmap *WBitmap);
\par int32 geWBitmap_GetVisFrame(geWBitmap *WBitmap);
\par geBoolean geWBitmap_SetVisFrame(geWBitmap *WBitmap, int32 VisFrame);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par 
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkstart _Toc454070074}World.h{\*\bkmkend _Toc454070074}
\par }\pard\plain \s46\widctlpar\tx720\adjustright \f1\fs20\cgrid {/****************************************************************************************/
\par /*  World.h                                                                             */
\par /*                                                                                      */
\par /*  Author: John Pollard                                                                */
\par /*  Description: Code to render the world, and distribute work to other modules         */
\par /*                                                                                      */
\par /*  The contents of this file are subject to the Genesis3D Public License               */
\par /*  Version 1.01 (the "License"); you may not use this file except in                   */
\par /*  compliance with the License. You may obtain a copy of the License at                */
\par /*  http://www.genesis3d.com                                                            */
\par /*                                                                                      */
\par /*  Software distributed under the License is distributed on an "AS IS"                 */
\par /*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See                */
\par /*  the License for the specific language governing rights and limitations              */
\par /*  under the License.                                                                  */
\par /*                                                                                      */
\par /*  The Original Code is Genesis3D, released March 25, 1999.                            */
\par /*  Copyright (C) 1996-1999 Eclipse Entertainment, L.L.C. All Rights Reserved           */
\par /*                                                                                      */
\par /****************************************************************************************/
\par #ifndef GE_WORLD_H
\par #define GE_WORLD_H
\par 
\par #include "ErrorLog.h"
\par #include "PtrTypes.h"
\par #include "Genesis.h"
\par #include "GBSPFile.h"
\par #include "Motion.h"
\par #include "Surface.h"
\par #include "Fog.h"
\par #include "WBitmap.h"
\par #include "User.h"
\par #include "Light.h"
\par 
\par #include "Bitmaplist.h"
\par 
\par #include "Actor.h"\tab \tab \tab 
\par 
\par #ifdef __cplusplus
\par extern "C" \{
\par #endif
\par 
\par #define MAX_MODELS\tab 256
\par 
\par // Upper limits on misc things
\par #define\tab MAX_MIRROR_RECURSION\tab \tab 1
\par #define MAX_RENDERFACE_VERTS\tab \tab 64
\par 
\par //=====================================================================================
\par //\tab Structure defines
\par //=====================================================================================
\par #define MODEL_CHANGED_XFORM\tab \tab \tab \tab (1<<0)
\par 
\par typedef struct geWorld_Model
\par \{
\par \tab char\tab \tab \tab Name[64];\tab \tab \tab \tab \tab \tab \tab // Model's name
\par \tab int32\tab \tab \tab GFXModelNum;\tab \tab \tab \tab \tab \tab // Model number in disk tree structure
\par \tab geXForm3d\tab \tab XForm;\tab \tab \tab \tab \tab \tab \tab \tab // Models transform\tab (Object Space)
\par \tab geVec3d\tab \tab \tab Mins, Maxs;\tab \tab \tab \tab \tab \tab \tab // Model BBox (World Space)
\par \tab geVec3d\tab \tab \tab TMins, TMaxs;\tab \tab \tab \tab \tab \tab // Translated Model BBox (World Space)
\par \tab geVec3d\tab \tab \tab Pivot;\tab \tab \tab \tab \tab \tab \tab \tab // Center of rotation (World Space)
\par \tab geVec3d\tab \tab \tab RealCenter;
\par \tab int32\tab \tab \tab VisFrame;\tab \tab \tab \tab \tab \tab \tab // == World->CurFrame if visible
\par \tab void\tab \tab \tab *UserData;\tab \tab \tab \tab \tab \tab \tab // Place for client to store data
\par \tab GFX_Model *\tab \tab BSPModel;\tab \tab \tab \tab \tab \tab \tab // Oh, this is terrible.
\par 
\par \tab geBoolean\tab \tab Open;\tab \tab \tab \tab \tab \tab \tab \tab // Model Open/Closed\tab (Set by API, used for area vising)
\par 
\par \tab uint32\tab \tab \tab Flags;\tab \tab \tab \tab \tab \tab \tab \tab // GE_MODEL_RENDER_NORMAL, etc... (getypes.h)
\par 
\par \tab uint32\tab \tab \tab ChangedFlags;
\par \} geWorld_Model;
\par 
\par typedef struct geWorld_Leaf
\par \{
\par \tab int32\tab \tab \tab VisFrame;
\par \tab int32\tab \tab \tab Parent;\tab \tab \tab \tab \tab \tab \tab \tab // Parent nodes of all leafs
\par 
\par \tab gePoly\tab \tab \tab *PolyList;\tab \tab \tab \tab \tab \tab \tab // List of poly fragments to render for this leaf (geWorld_AddPoly)
\par \} geWorld_Leaf;
\par 
\par #define MAX_VISIBLE_FOG\tab \tab 12\tab // Hope to God there is not this much visible at a time!!!
\par 
\par // This is set in the UserData of the fog the the world creates at load time
\par typedef struct
\par \{
\par \tab int32\tab \tab \tab Leaf;
\par 
\par \tab geVec3d\tab \tab \tab Mins;\tab \tab \tab \tab \tab \tab \tab \tab // - Radius
\par \tab geVec3d\tab \tab \tab Maxs;\tab \tab \tab \tab \tab \tab \tab \tab // + Radius
\par 
\par \tab int32\tab \tab \tab VisFrame;\tab \tab \tab \tab \tab \tab \tab // == World->CurFrameDynamic when visible
\par 
\par \tab geWorld\tab \tab \tab *World;
\par \} geWorld_FogData;
\par 
\par typedef struct World_BSP
\par \{
\par \tab char\tab \tab \tab FileName[200];
\par \tab GBSP_BSPData\tab BSPData;\tab \tab \tab \tab // Info in the BSP loaded directly off disk
\par 
\par \tab //\tab Extra info thats not in the disk bsp structure
\par \tab Surf_SurfInfo\tab *SurfInfo;\tab \tab \tab \tab \tab \tab \tab // Valid when GE_SetGBSPFile is called
\par \tab Surf_TexVert\tab *TexVerts;\tab \tab \tab \tab \tab \tab \tab //
\par 
\par \tab geWBitmap_Pool\tab *WBitmapPool;
\par 
\par \tab geWorld_Model\tab Models[MAX_MODELS];\tab \tab \tab \tab \tab // Extra info about models not in disk structure
\par 
\par \tab geWorld_Leaf\tab *LeafData;
\par 
\par \tab int32\tab \tab \tab *ClusterVisFrame;
\par \tab int32\tab \tab \tab *NodeVisFrame;
\par \tab int32\tab \tab \tab *AreaVisFrame;
\par \tab uint8\tab \tab \tab AreaConnections[256][256];
\par 
\par \tab int32\tab \tab \tab *NodeParents;\tab \tab \tab \tab \tab \tab // Parent nodes of all leafs
\par 
\par \} World_BSP;
\par 
\par typedef struct
\par \{
\par \tab // Untransformed original data
\par \tab geVec3d\tab \tab \tab Verts[6][4];
\par \tab Surf_TexVert\tab TexVerts[6][4];
\par \tab 
\par \tab geVec3d\tab \tab \tab Axis;\tab \tab \tab \tab \tab \tab \tab \tab // Rotation axis
\par \tab float\tab \tab \tab Dpm;\tab \tab \tab \tab \tab \tab \tab \tab // Degres per minute
\par \tab float\tab \tab \tab DrawScale;\tab \tab \tab \tab \tab \tab \tab // Texture drawscale
\par \tab int32\tab \tab \tab Textures[6];
\par \tab 
\par \tab float\tab \tab \tab Angle;\tab \tab \tab \tab \tab \tab \tab \tab // Current rotation angle around roation axis
\par 
\par \} World_SkyBox;
\par 
\par typedef struct
\par \{
\par \tab // Transformed data
\par \tab uint32\tab \tab \tab SkyFlags;
\par 
\par \tab geVec3d\tab \tab \tab TransformedVecs[6][2];
\par \tab GFX_Plane\tab \tab TransformedPlanes[6];
\par 
\par \tab int32\tab \tab \tab NumTransformed;\tab \tab \tab \tab \tab \tab // Num transformed and clipped
\par \tab geVec3d\tab \tab \tab TransformedVerts[6][10];\tab \tab \tab // Transformed verts
\par \tab Surf_TexVert\tab TransformedTexVerts[6][10];\tab \tab \tab // Transformed tex verts
\par \tab int32\tab \tab \tab NumTransformedVerts[6];\tab \tab \tab \tab // Number of transformed verts/texverts
\par \tab int32\tab \tab \tab OriginalFaces[6];\tab \tab \tab \tab \tab // Indexes to original bitmap
\par 
\par \} geWorld_SkyBoxTData;
\par 
\par typedef struct World_Actor
\par \{
\par \tab geActor\tab \tab \tab *Actor;
\par \tab uint32\tab \tab \tab Flags;\tab \tab \tab \tab // GE_ACTOR_RENDER_NORMAL, GE_ACTOR_RENDER_MIRRORS, GE_ACTOR_COLLIDE
\par \tab uint32\tab \tab \tab UserFlags;
\par 
\par \tab //int32\tab \tab \tab Leaf;\tab \tab \tab \tab // Current leaf the actor is in (currently used for PVS occlusion)
\par \} World_Actor;
\par 
\par /******
\par 
\par Critial : A negative-numbered Node is a Leaf.
\par \tab Node (-1) is Leaf 0 ; (the first leaf is Leaf 0).
\par \tab Node (-N) is Leaf (N-1) = (-Node-1)
\par 
\par ******/
\par 
\par #define MAX_WORLD_ENT_CLASS_SETS\tab 256
\par 
\par typedef struct
\par \{
\par \tab const char\tab \tab \tab *ClassName;\tab \tab // NULL for main set
\par \tab geEntity_EntitySet\tab *Set;
\par \} geWorld_EntClassSet;
\par 
\par typedef struct
\par \{
\par \tab int32\tab \tab NumNodesTraversed1;
\par \tab int32\tab \tab NumNodesTraversed2;
\par \tab int32\tab \tab NumLeafsHit1;
\par \tab int32\tab \tab NumLeafsHit2;
\par \tab int32\tab \tab NumLeafsWithUserPolys;
\par \tab int32\tab \tab NumUserPolys;
\par 
\par \} geWorld_DebugInfo;
\par 
\par typedef struct geWorld
\par \{
\par \tab int32\tab \tab \tab \tab CurFrameStatic;\tab \tab \tab \tab \tab \tab // World CurrentFrame
\par \tab int32\tab \tab \tab \tab CurFrameDynamic;\tab \tab \tab \tab \tab // World CurrentFrame
\par \tab float\tab \tab \tab \tab CurTime;\tab \tab \tab \tab \tab \tab \tab // World CurrentTime
\par \tab int32\tab \tab \tab \tab CurrentLeaf;
\par \tab geBoolean\tab \tab \tab ForceVis;
\par 
\par \tab geBoolean\tab \tab \tab VisInfo;
\par 
\par \tab // Info that each respective module fills in...
\par \tab World_BSP\tab \tab \tab *CurrentBSP;\tab \tab \tab \tab \tab \tab // Valid when geWorld_SetGBSP is called
\par 
\par \tab World_SkyBox\tab \tab SkyBox;
\par 
\par \tab Frustum_Info\tab \tab *FrustumInfo;
\par 
\par \tab Light_LightInfo\tab \tab *LightInfo;\tab \tab \tab \tab \tab \tab \tab // Info that the light module fills in
\par 
\par \tab Mesh_MeshInfo\tab \tab *MeshInfo;\tab \tab \tab \tab \tab \tab \tab // Info that the mesh module fills in
\par \tab 
\par \tab int32\tab \tab \tab \tab ActorCount;\tab \tab \tab \tab \tab \tab \tab // Number of actors in world
\par \tab World_Actor\tab \tab \tab *ActorArray;\tab \tab \tab \tab \tab \tab // Array of actors
\par \tab 
\par \tab geWorld_EntClassSet\tab EntClassSets[MAX_WORLD_ENT_CLASS_SETS];
\par \tab int32\tab \tab \tab \tab NumEntClassSets;
\par 
\par \tab User_Info\tab \tab \tab *UserInfo;
\par 
\par \tab // Debug info
\par \tab int32\tab \tab \tab \tab ActiveUserPolys;
\par \tab geWorld_DebugInfo\tab DebugInfo;
\par 
\par \tab geFog\tab \tab \tab \tab *FogList;\tab \tab \tab \tab \tab \tab \tab // Linked list of fog in the world currently
\par \tab 
\par \tab geFog\tab \tab \tab \tab *VisibleFog[MAX_VISIBLE_FOG];\tab \tab // List of visible fog for this frame
\par \tab int32\tab \tab \tab \tab NumVisibleFog;
\par 
\par \tab BitmapList\tab \tab \tab *AttachedBitmaps;\tab \tab \tab \tab \tab \tab 
\par 
\par \tab geXForm3d\tab \tab \tab LastCameraXForm;
\par 
\par \tab int32\tab \tab \tab \tab RefCount;
\par 
\par \tab geBoolean\tab \tab \tab Changed;\tab \tab \tab \tab \tab \tab \tab // GE_TRUE if this world has changed
\par 
\par \} geWorld;
\par 
\par //=====================================================================================
\par //\tab Function prototypes
\par //=====================================================================================
\par GENESISAPI\tab \tab geWorld *geWorld_Create(geVFile *File);
\par GENESISAPI\tab \tab void geWorld_Free(geWorld *World);
\par geBoolean\tab \tab geWorld_CreateRef(geWorld *World);
\par 
\par geBoolean\tab World_EngineInit(geEngine *Engine);
\par void\tab \tab World_EngineShutdown(geEngine *Engine);
\par 
\par geBoolean\tab World_SetEngine(geEngine *Engine);
\par geBoolean\tab World_SetWorld(geWorld *World);
\par geBoolean\tab World_SetGBSP(World_BSP *BSP);
\par 
\par geBoolean\tab World_WorldRenderQ(geEngine *Engine, geWorld *World, geCamera *Camera);
\par 
\par GENESISAPI geBoolean geWorld_SetModelXForm(
\par \tab geWorld *\tab \tab \tab World,
\par \tab geWorld_Model *\tab \tab Model,
\par \tab const geXForm3d *\tab XForm);
\par GENESISAPI geBoolean geWorld_GetModelXForm(
\par \tab const geWorld *\tab \tab \tab World,
\par \tab const geWorld_Model *\tab Model,
\par \tab geXForm3d *\tab \tab \tab \tab XForm);
\par 
\par GENESISAPI geBoolean geWorld_GetModelRotationalCenter(
\par \tab const geWorld *\tab \tab \tab World,
\par \tab const geWorld_Model *\tab Model,
\par \tab geVec3d *\tab \tab \tab \tab Center);
\par 
\par GENESISAPI geMotion * geWorld_ModelGetMotion(geWorld_Model *Model);
\par 
\par GENESISAPI void * geWorld_ModelGetUserData(const geWorld_Model *Model);
\par 
\par GENESISAPI void\tab geWorld_ModelSetUserData(geWorld_Model *Model, void *UserData);
\par 
\par GENESISAPI geWorld_Model *geWorld_WorldGetNextModel(geWorld *World, geWorld_Model *Start);
\par 
\par GENESISAPI geBoolean geWorld_AddBitmap(geWorld *World, geBitmap *Bitmap);
\par GENESISAPI geBoolean geWorld_RemoveBitmap(geWorld *World,geBitmap *Bitmap);
\par 
\par GENESISAPI geBitmap *geWorld_GetBitmapByName(geWorld *World, const char *BitmapName);
\par 
\par geBoolean geWorld_AttachAll(geWorld *World, DRV_Driver *Driver, geFloat Gamma);
\par geBoolean geWorld_DetachAll(geWorld *World);
\par 
\par #ifdef __cplusplus
\par \}
\par #endif
\par #endif
\par }\pard\plain \s3\sb240\sa60\keepn\widctlpar\tx720\outlinelevel2\adjustright \b\i\f16\fs28\cgrid {{\*\bkmkend _Toc446558921}
\par }}